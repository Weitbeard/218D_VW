Microchip MPLAB XC8 Compiler V1.38 ()

Linker command line:

--edf=/Applications/microchip/xc8/v1.38/dat/en_msgs.txt -cs \
  -h+dist/default/production/Master.X.production.sym \
  --cmf=dist/default/production/Master.X.production.cmf -z -Q16F1518 \
  -o/tmp/xcZ8wEA7t -Mdist/default/production/Master.X.production.map -E1 \
  -ver=XC8 -ASTACK=0210Ch-023efh -pstack=STACK -ACODE=00h-07FFhx8 \
  -ASTRCODE=00h-03FFFh -ASTRING=00h-0FFhx64 -ACONST=00h-0FFhx64 \
  -AENTRY=00h-0FFhx64 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh \
  -ABANK1=0A0h-0EFh -ABANK2=0120h-016Fh -ABANK3=01A0h-01EFh \
  -ABANK4=0220h-026Fh -ABANK5=02A0h-02EFh -ABANK6=0320h-036Fh \
  -ABANK7=03A0h-03EFh -ABANK8=0420h-046Fh -ABANK9=04A0h-04EFh \
  -ABANK10=0520h-056Fh -ABANK11=05A0h-05EFh -ABANK12=0620h-064Fh \
  -ABIGRAM=02000h-023EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0120h-016Fh,01A0h-01EFh,0220h-026Fh,02A0h-02EFh,0320h-036Fh,03A0h-03EFh,0420h-046Fh,04A0h-04EFh,0520h-056Fh,05A0h-05EFh,0620h-064Fh \
  -AABS1=020h-07Fh,0A0h-0EFh,0120h-016Fh,01A0h-01EFh,0220h-026Fh,02A0h-02EFh,0320h-036Fh,03A0h-03EFh,0420h-046Fh,04A0h-04EFh,0520h-056Fh,05A0h-05EFh,0620h-064Fh \
  -ASFR0=00h-01Fh -ASFR1=080h-09Fh -ASFR2=0100h-011Fh -ASFR3=0180h-019Fh \
  -ASFR4=0200h-021Fh -ASFR5=0280h-029Fh -ASFR6=0300h-031Fh \
  -ASFR7=0380h-039Fh -ASFR8=0400h-041Fh -ASFR9=0480h-049Fh \
  -ASFR10=0500h-051Fh -ASFR11=0580h-059Fh -ASFR12=0600h-061Fh \
  -ASFR13=0680h-06EFh -ASFR14=0700h-076Fh -ASFR15=0780h-07EFh \
  -ASFR16=0800h-086Fh -ASFR17=0880h-08EFh -ASFR18=0900h-096Fh \
  -ASFR19=0980h-09EFh -ASFR20=0A00h-0A6Fh -ASFR21=0A80h-0AEFh \
  -ASFR22=0B00h-0B6Fh -ASFR23=0B80h-0BEFh -ASFR24=0C00h-0C6Fh \
  -ASFR25=0C80h-0CEFh -ASFR26=0D00h-0D6Fh -ASFR27=0D80h-0DEFh \
  -ASFR28=0E00h-0E6Fh -ASFR29=0E80h-0EEFh -ASFR30=0F00h-0F6Fh \
  -ASFR31=0F80h-0FEFh -preset_vec=00h,intentry=04h,init,end_init \
  -ppowerup=CODE -pcinit=CODE -pfunctab=CODE -ACONFIG=08007h-08008h \
  -pconfig=CONFIG -DCONFIG=2 -AIDLOC=08000h-08003h -pidloc=IDLOC -DIDLOC=2 \
  -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 -DENTRY=2 -k /tmp/xcGQobyrw.obj \
  dist/default/production/Master.X.production.obj 

Object code version is 3.11

Machine type is 16F1518



                Name                               Link     Load   Length Selector   Space Scale
/tmp/xcGQobyrw.obj
                end_init                             34       34        2        8       0
                reset_vec                             0        0        2        0       0
                config                             8007     8007        1    1000E       0
dist/default/production/Master.X.production.obj
                cinit                                36       36       1B        8       0
                intentry                              4        4       30        8       0
                text39                              6CB      6CB       45      21A       0
                text38                              F30      F30       1B     1E60       0
                text37                              4F1      4F1       5C      21A       0
                text36                              5F3      5F3       4C      21A       0
                text35                              E96      E96        B     1D2C       0
                text34                              EAE      EAE        E     1D5C       0
                text32                              F4B      F4B       1B     1E96       0
                text31                              EBC      EBC       10     1D78       0
                text30                              7F7      7F7        8      21A       0
                text29                              710      710       3A      21A       0
                text28                              415      415       7F      21A       0
                text27                              F17      F17       19     1E2E       0
                text26                              EEE      EEE       14     1DDC       0
                text25                              685      685       46      21A       0
                text24                              F66      F66       1C     1ECC       0
                text23                              494      494       5D      21A       0
                text22                              54D      54D       59      21A       0
                text21                              74A      74A       36      21A       0
                text20                              7D2      7D2       25      21A       0
                text19                              10D      10D       AE      21A       0
                text18                              E8B      E8B        5     1D16       0
                text17                              ECC      ECC       11     1D98       0
                text16                              780      780       2C      21A       0
                text15                                2        2        2        0       0
                text14                              F9F      F9F       1F     1F3E       0
                text13                              FBE      FBE       20     1F7C       0
                text12                              1BB      1BB       9F      21A       0
                text11                              7AC      7AC       26      21A       0
                text10                              FDE      FDE       22     1FBC       0
                text9                               25A      25A       9D      21A       0
                text8                               63F      63F       46      21A       0
                text7                               EDD      EDD       11     1DBA       0
                text6                               F02      F02       15     1E04       0
                text5                               388      388       8D      21A       0
                text4                               EA1      EA1        D     1D42       0
                text3                               2F7      2F7       91      21A       0
                text2                               7FF      7FF        1      21A       0
                text1                               F82      F82       1D     1F04       0
                maintext                            5A6      5A6       4D      21A       0
                cstackBANK0                          20       20       1C       20       1
                cstackCOMMON                         70       70        E       70       1
                cstackBANK1                          D9       D9       17       A0       1
                cstackBANK2                         166      166        A      120       1
                cstackBANK3                         1A0      1A0       1C      1A0       1
                clrtext                             E90      E90        6     1D20       0
                bssBANK2                            120      120       46      120       1
                bssBANK1                             A0       A0       39       A0       1
                bssBANK0                             3C       3C       18       20       1
                stringtext                           51       51       BC       A2       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             34       34        2         0
                cinit                                36       36       1B         0
                intentry                              4        4       30         0
                reset_vec                             0        0        2         0
                text39                              6CB      6CB       45         0
                text38                              F30      F30       1B         0
                text37                              4F1      4F1       5C         0
                text36                              5F3      5F3       4C         0
                text35                              E96      E96        B         0
                text34                              EAE      EAE        E         0
                text32                              F4B      F4B       1B         0
                text31                              EBC      EBC       10         0
                text30                              7F7      7F7        8         0
                text29                              710      710       3A         0
                text28                              415      415       7F         0
                text27                              F17      F17       19         0
                text26                              EEE      EEE       14         0
                text25                              685      685       46         0
                text24                              F66      F66       1C         0
                text23                              494      494       5D         0
                text22                              54D      54D       59         0
                text21                              74A      74A       36         0
                text20                              7D2      7D2       25         0
                text19                              10D      10D       AE         0
                text18                              E8B      E8B        5         0
                text17                              ECC      ECC       11         0
                text16                              780      780       2C         0
                text15                                2        2        2         0
                text14                              F9F      F9F       1F         0
                text13                              FBE      FBE       20         0
                text12                              1BB      1BB       9F         0
                text11                              7AC      7AC       26         0
                text10                              FDE      FDE       22         0
                text9                               25A      25A       9D         0
                text8                               63F      63F       46         0
                text7                               EDD      EDD       11         0
                text6                               F02      F02       15         0
                text5                               388      388       8D         0
                text4                               EA1      EA1        D         0
                text3                               2F7      2F7       91         0
                text2                               7FF      7FF        1         0
                text1                               F82      F82       1D         0
                maintext                            5A6      5A6       4D         0
                clrtext                             E90      E90        6         0

        CLASS   STRCODE        
                stringtext                           51       51       BC         0

        CLASS   STRING         

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        E         1

        CLASS   BANK0          
                cstackBANK0                          20       20       1C         1
                bssBANK0                             3C       3C       18         1

        CLASS   BANK1          
                cstackBANK1                          D9       D9       17         1
                bssBANK1                             A0       A0       39         1

        CLASS   BANK2          
                cstackBANK2                         166      166        A         1
                bssBANK2                            120      120       46         1

        CLASS   BANK3          
                cstackBANK3                         1A0      1A0       1C         1

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   BANK6          

        CLASS   BANK7          

        CLASS   BANK8          

        CLASS   BANK9          

        CLASS   BANK10         

        CLASS   BANK11         

        CLASS   BANK12         

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   SFR4           

        CLASS   SFR5           

        CLASS   SFR6           

        CLASS   SFR7           

        CLASS   SFR8           

        CLASS   SFR9           

        CLASS   SFR10          

        CLASS   SFR11          

        CLASS   SFR12          

        CLASS   SFR13          

        CLASS   SFR14          

        CLASS   SFR15          

        CLASS   SFR16          

        CLASS   SFR17          

        CLASS   SFR18          

        CLASS   SFR19          

        CLASS   SFR20          

        CLASS   SFR21          

        CLASS   SFR22          

        CLASS   SFR23          

        CLASS   SFR24          

        CLASS   SFR25          

        CLASS   SFR26          

        CLASS   SFR27          

        CLASS   SFR28          

        CLASS   SFR29          

        CLASS   SFR30          

        CLASS   SFR31          

        CLASS   CONFIG         
                config                             8007     8007        1         0

        CLASS   IDLOC          

        CLASS   BANK31         

        CLASS   BANK30         

        CLASS   BANK29         

        CLASS   BANK28         

        CLASS   BANK27         

        CLASS   BANK26         

        CLASS   BANK25         

        CLASS   BANK24         

        CLASS   BANK23         

        CLASS   BANK22         

        CLASS   BANK21         

        CLASS   BANK20         

        CLASS   BANK19         

        CLASS   BANK18         

        CLASS   BANK17         

        CLASS   BANK16         

        CLASS   BANK15         

        CLASS   BANK14         

        CLASS   BANK13         

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000004  000004         0       0  CODE        2
                intentry                       000004  00004D  000051         8       0  CODE        2
                cstackBANK0                    000020  000034  000054        20       1  BANK0       1
                cstackCOMMON                   000070  00000E  00007E        70       1  COMMON      1
                bssBANK1                       0000A0  000050  0000F0        A0       1  BANK1       1
                stringtext                     000051  0000BC  00010D        A2       0  STRCODE     2
                bssBANK2                       000120  000050  000170       120       1  BANK2       1
                cstackBANK3                    0001A0  00001C  0001BC       1A0       1  BANK3       1
                text19                         00010D  0006F3  000800       21A       0  CODE        2
                text18                         000E8B  000005  000E90      1D16       0  CODE        2
                clrtext                        000E90  000006  000E96      1D20       0  CODE        2
                text35                         000E96  00000B  000EA1      1D2C       0  CODE        2
                text4                          000EA1  00000D  000EAE      1D42       0  CODE        2
                text34                         000EAE  00000E  000EBC      1D5C       0  CODE        2
                text31                         000EBC  000010  000ECC      1D78       0  CODE        2
                text17                         000ECC  000011  000EDD      1D98       0  CODE        2
                text7                          000EDD  000011  000EEE      1DBA       0  CODE        2
                text26                         000EEE  000014  000F02      1DDC       0  CODE        2
                text6                          000F02  000015  000F17      1E04       0  CODE        2
                text27                         000F17  000019  000F30      1E2E       0  CODE        2
                text38                         000F30  00001B  000F4B      1E60       0  CODE        2
                text32                         000F4B  00001B  000F66      1E96       0  CODE        2
                text24                         000F66  00001C  000F82      1ECC       0  CODE        2
                text1                          000F82  00001D  000F9F      1F04       0  CODE        2
                text14                         000F9F  00001F  000FBE      1F3E       0  CODE        2
                text13                         000FBE  000020  000FDE      1F7C       0  CODE        2
                text10                         000FDE  000022  001000      1FBC       0  CODE        2
                config                         008007  000001  008008     1000E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            00054-0006F              1C           1
        BANK10           00520-0056F              50           1
        BANK11           005A0-005EF              50           1
        BANK12           00620-0064F              30           1
        BANK3            001BC-001EF              34           1
        BANK4            00220-0026F              50           1
        BANK5            002A0-002EF              50           1
        BANK6            00320-0036F              50           1
        BANK7            003A0-003EF              50           1
        BANK8            00420-0046F              50           1
        BANK9            004A0-004EF              50           1
        BIGRAM           02000-023EF             3F0           1
        CODE             00800-00E8A             68B           2
                         01000-03FFF             800
        CONFIG           08008-08008               1           2
        CONST            00800-00E8A             100           2
                         01000-03FFF             100
        ENTRY            00800-00E8A             100           2
                         01000-03FFF             100
        IDLOC            08000-08003               4           2
        RAM              00054-0006F              1C           1
                         001BC-001EF              34
                         00220-0026F              50
                         002A0-002EF              50
                         00320-0036F              50
                         003A0-003EF              50
                         00420-0046F              50
                         004A0-004EF              50
                         00520-0056F              50
                         005A0-005EF              50
                         00620-0064F              30
        SFR0             00000-0001F              20           1
        SFR1             00080-0009F              20           1
        SFR10            00500-0051F              20           1
        SFR11            00580-0059F              20           1
        SFR12            00600-0061F              20           1
        SFR13            00680-006EF              70           1
        SFR14            00700-0076F              70           1
        SFR15            00780-007EF              70           1
        SFR16            00800-0086F              70           1
        SFR17            00880-008EF              70           1
        SFR18            00900-0096F              70           1
        SFR19            00980-009EF              70           1
        SFR2             00100-0011F              20           1
        SFR20            00A00-00A6F              70           1
        SFR21            00A80-00AEF              70           1
        SFR22            00B00-00B6F              70           1
        SFR23            00B80-00BEF              70           1
        SFR24            00C00-00C6F              70           1
        SFR25            00C80-00CEF              70           1
        SFR26            00D00-00D6F              70           1
        SFR27            00D80-00DEF              70           1
        SFR28            00E00-00E6F              70           1
        SFR29            00E80-00EEF              70           1
        SFR3             00180-0019F              20           1
        SFR30            00F00-00F6F              70           1
        SFR31            00F80-00FEF              70           1
        SFR4             00200-0021F              20           1
        SFR5             00280-0029F              20           1
        SFR6             00300-0031F              20           1
        SFR7             00380-0039F              20           1
        SFR8             00400-0041F              20           1
        SFR9             00480-0049F              20           1
        STACK            0210C-023EF             2E4           1
        STRCODE          00800-00E8A             68B           2
                         01000-03FFF            3000
        STRING           00800-00E8A             100           2
                         01000-03FFF             100

                                  Symbol Table

?_RunSPI_Service                     cstackBANK3  001A9
?_RunToggleService                   cstackBANK3  001A9
?___awmod                            cstackBANK1  000D9
?___wmul                             cstackBANK1  000E0
?_printf                             cstackBANK1  000D9
?i1___awmod                          cstackCOMMON 00070
?i1___wmul                           cstackCOMMON 00077
Button@CurrentState                  bssBANK0     0004B
Button@MyPriority                    bssBANK0     0004C
CheckButtonEvents@CurrentButtonState cstackBANK3  001A8
CheckButtonEvents@ReturnVal          cstackBANK3  001A4
CheckButtonEvents@ThisEvent          cstackBANK3  001A5
EOTResponse@ThisEvent                cstackBANK0  00037
ES_CheckUserEvents@i                 cstackBANK3  001AB
ES_DeQueue@NumLeft                   cstackBANK2  00167
ES_DeQueue@SaveCrit                  cstackBANK2  00166
ES_DeQueue@pBlock                    cstackBANK1  000E6
ES_DeQueue@pReturnEvent              cstackBANK1  000E8
ES_DeQueue@pThisQueue                cstackBANK2  00168
ES_EnQueueFIFO@Event2Add             cstackBANK1  000E8
ES_EnQueueFIFO@SaveCrit              cstackBANK1  000ED
ES_EnQueueFIFO@pBlock                cstackBANK1  000E6
ES_EnQueueFIFO@pThisQueue            cstackBANK1  000EE
ES_GetMSBitSet@LoopCntr              cstackBANK1  000E1
ES_GetMSBitSet@Nybble2Test           cstackBANK1  000E0
ES_GetMSBitSet@ReturnVal             cstackBANK1  000DF
ES_GetMSBitSet@Val2Check             cstackBANK1  000D9
ES_InitQueue@BlockSize               cstackBANK1  000E8
ES_InitQueue@pBlock                  cstackBANK1  000E6
ES_InitQueue@pThisQueue              cstackBANK1  000EA
ES_Initialize@NewRate                cstackBANK3  001A5
ES_Initialize@i                      cstackBANK3  001AF
ES_PostToService@TheEvent            cstackBANK2  00166
ES_PostToService@WhichService        cstackBANK2  0016F
ES_Run@HighestPrior                  cstackBANK3  001B9
ES_Run@ThisEvent                     bssBANK1     000D6
ES_Timer_Init@Rate                   cstackBANK1  000DB
ES_Timer_InitTimer@NewTime           cstackBANK1  000D9
ES_Timer_InitTimer@Num               cstackBANK1  000DF
ES_Timer_Tick_Resp@NeedsProcessing   bssBANK0     0003F
ES_Timer_Tick_Resp@NewEvent          bssBANK1     000C0
ES_Timer_Tick_Resp@NextTimer2Process bssBANK0     0004D
FormPacket@i                         cstackBANK1  000DB
FormPacket@i_797                     cstackBANK1  000DC
FormPacket@j                         cstackBANK1  000DE
FormPacket@ledNum                    cstackBANK1  000DD
ISR@LastTime                         bssBANK0     00041
ISR@NextTime                         bssBANK0     00043
InitSPI_Service@Priority             cstackBANK3  001A0
InitToggleService@Priority           cstackBANK3  001A0
InitToggleService@ThisEvent          cstackBANK3  001A2
PostButtonDebounceSM@ThisEvent       cstackBANK3  001A0
PostSPI_Service@ThisEvent            cstackBANK3  001A0
PostToggleService@ThisEvent          cstackBANK3  001A0
RunSPI_Service@ReturnEvent           cstackBANK3  001AD
RunSPI_Service@ThisEvent             cstackBANK3  001A9
RunSPI_Service@ThisEvent_771         cstackBANK3  001B0
RunToggleService@ReturnEvent         cstackBANK3  001AC
RunToggleService@ThisEvent           cstackBANK3  001A9
SPI_Service@CurrentState             bssBANK1     000C5
SPI_Service@MyPriority               bssBANK0     0004E
SetBGR@B                             cstackBANK1  000DC
SetBGR@G                             cstackBANK1  000D9
SetBGR@R                             cstackBANK1  000DA
TemplateService@MyPriority           bssBANK0     0004F
ToggleService@MyPriority             bssBANK0     00050
_ANSELA                              (abs)        0018C
_ANSELC                              (abs)        0018E
_BGR                                 bssBANK0     0003C
_BitNum2SetMask                      stringtext   00051
_BytesToSend                         bssBANK2     00120
_CCP1CON                             (abs)        00293
_CCP1IF                              (abs)        0008A
_CCPR1H                              (abs)        00292
_CCPR1L                              (abs)        00291
_Check4Keystroke                     text15       00002
_CheckButtonEvents                   text16       00780
_CurrentState                        bssBANK0     00051
_DistList00                          stringtext   000B2
_EOTResponse                         text34       00EAE
_ES_CheckUserEvents                  text14       00F9F
_ES_DeQueue                          text12       001BB
_ES_EnQueueFIFO                      text23       00494
_ES_EventList                        stringtext   000AE
_ES_GetMSBitSet                      text8        0063F
_ES_InitQueue                        text32       00F4B
_ES_Initialize                       text19       0010D
_ES_PostToService                    text22       0054D
_ES_PostToService$1261               cstackBANK2  0016D
_ES_Run                              text3        002F7
_ES_Run$1255                         cstackBANK3  001B7
_ES_Timer_Init                       text30       007F7
_ES_Timer_InitTimer                  text29       00710
_ES_Timer_Tick_Resp                  text5        00388
_EventQueues                         stringtext   000A8
_FirstSend                           bssBANK1     000C6
_FormPacket                          text28       00415
_GIE                                 (abs)        0005F
_GetInputLine                        text18       00E8B
_INTCON                              (abs)        0000B
_IRCF0                               (abs)        004CB
_IRCF1                               (abs)        004CC
_IRCF2                               (abs)        004CD
_IRCF3                               (abs)        004CE
_ISR                                 intentry     00004
_InitSPI                             text27       00F17
_InitSPI_Service                     text20       007D2
_InitToggleService                   text21       0074A
_LATA                                (abs)        0010C
_LATC                                (abs)        0010E
_LEDColor                            bssBANK1     000C7
_LastButtonState                     bssBANK1     000C8
_MyPriority                          bssBANK0     00052
_NumBytesLeft                        bssBANK1     000C9
_Nybble2MSBitNum                     stringtext   00091
_PIE1                                (abs)        00091
_PORTA                               (abs)        0000C
_PORTC                               (abs)        0000E
_PostButtonDebounceSM                text17       00ECC
_PostSPI_Service                     text6        00F02
_PostSPI_Service$intlevel0           text6        00F06
_PostToggleService                   text7        00EDD
_Queue0                              bssBANK2     00154
_Queue1                              bssBANK1     000CA
_RA0                                 (abs)        00060
_RA1                                 (abs)        00061
_RA2                                 (abs)        00062
_Ready                               bssBANK1     000C3
_RunSPI_Service                      text9        0025A
_RunToggleService                    text10       00FDE
_SSPADD                              (abs)        00212
_SSPBUF                              (abs)        00211
_SSPCON1                             (abs)        00215
_SSPIE                               (abs)        0048B
_SSPIF                               (abs)        0008B
_SSPSTAT                             (abs)        00214
_SSPSTATbits                         (abs)        00214
_ServDescList                        stringtext   000A0
_SetBGR                              text26       00EEE
_SysTickCounter                      bssBANK0     00045
_T1CON                               (abs)        00018
_TMR_ActiveFlags                     bssBANK0     00047
_TMR_TimerArray                      bssBANK1     000A0
_TRISA                               (abs)        0008C
_TRISC                               (abs)        0008E
_TickCount                           bssBANK0     00053
_Timer2PostFunc                      stringtext   00071
__CFG_BOREN$ON                       (abs)        00000
__CFG_FOSC$INTOSC                    (abs)        00000
__CFG_MCLRE$ON                       (abs)        00000
__CFG_PWRTE$OFF                      (abs)        00000
__CFG_WDTE$OFF                       (abs)        00000
__HW_Process_Pending_Ints            text4        00EA1
__HW_Timer_Init                      text31       00EBC
__HW_Timer_Init@Rate                 cstackBANK1  000D9
__Habs1                              abs1         00000
__Hbank0                             bank0        00000
__Hbank1                             bank1        00000
__Hbank10                            bank10       00000
__Hbank11                            bank11       00000
__Hbank12                            bank12       00000
__Hbank13                            bank13       00000
__Hbank14                            bank14       00000
__Hbank15                            bank15       00000
__Hbank16                            bank16       00000
__Hbank17                            bank17       00000
__Hbank18                            bank18       00000
__Hbank19                            bank19       00000
__Hbank2                             bank2        00000
__Hbank20                            bank20       00000
__Hbank21                            bank21       00000
__Hbank22                            bank22       00000
__Hbank23                            bank23       00000
__Hbank24                            bank24       00000
__Hbank25                            bank25       00000
__Hbank26                            bank26       00000
__Hbank27                            bank27       00000
__Hbank28                            bank28       00000
__Hbank29                            bank29       00000
__Hbank3                             bank3        00000
__Hbank30                            bank30       00000
__Hbank31                            bank31       00000
__Hbank4                             bank4        00000
__Hbank5                             bank5        00000
__Hbank6                             bank6        00000
__Hbank7                             bank7        00000
__Hbank8                             bank8        00000
__Hbank9                             bank9        00000
__Hbigram                            bigram       00000
__HbssBANK0                          bssBANK0     00000
__HbssBANK1                          bssBANK1     00000
__HbssBANK2                          bssBANK2     00000
__Hcinit                             cinit        00051
__Hclrtext                           clrtext      00000
__Hcode                              code         00000
__Hcommon                            common       00000
__Hconfig                            config       08008
__HcstackBANK0                       cstackBANK0  00000
__HcstackBANK1                       cstackBANK1  00000
__HcstackBANK2                       cstackBANK2  00000
__HcstackBANK3                       cstackBANK3  00000
__HcstackCOMMON                      cstackCOMMON 00000
__Heeprom_data                       eeprom_data  00000
__Hend_init                          end_init     00036
__Hfunctab                           functab      00000
__Hidloc                             idloc        00000
__Hinit                              init         00034
__Hintentry                          intentry     00034
__Hmaintext                          maintext     00000
__Hpowerup                           powerup      00000
__Hram                               ram          00000
__Hreset_vec                         reset_vec    00002
__Hsfr0                              sfr0         00000
__Hsfr1                              sfr1         00000
__Hsfr10                             sfr10        00000
__Hsfr11                             sfr11        00000
__Hsfr12                             sfr12        00000
__Hsfr13                             sfr13        00000
__Hsfr14                             sfr14        00000
__Hsfr15                             sfr15        00000
__Hsfr16                             sfr16        00000
__Hsfr17                             sfr17        00000
__Hsfr18                             sfr18        00000
__Hsfr19                             sfr19        00000
__Hsfr2                              sfr2         00000
__Hsfr20                             sfr20        00000
__Hsfr21                             sfr21        00000
__Hsfr22                             sfr22        00000
__Hsfr23                             sfr23        00000
__Hsfr24                             sfr24        00000
__Hsfr25                             sfr25        00000
__Hsfr26                             sfr26        00000
__Hsfr27                             sfr27        00000
__Hsfr28                             sfr28        00000
__Hsfr29                             sfr29        00000
__Hsfr3                              sfr3         00000
__Hsfr30                             sfr30        00000
__Hsfr31                             sfr31        00000
__Hsfr4                              sfr4         00000
__Hsfr5                              sfr5         00000
__Hsfr6                              sfr6         00000
__Hsfr7                              sfr7         00000
__Hsfr8                              sfr8         00000
__Hsfr9                              sfr9         00000
__Hspace_0                           (abs)        08008
__Hspace_1                           (abs)        001BC
__Hspace_2                           (abs)        00000
__Hspace_3                           (abs)        00000
__Hstack                             stack        00000
__Hstrings                           strings      00000
__Hstringtext                        stringtext   00000
__Htext                              text         00000
__Labs1                              abs1         00000
__Lbank0                             bank0        00000
__Lbank1                             bank1        00000
__Lbank10                            bank10       00000
__Lbank11                            bank11       00000
__Lbank12                            bank12       00000
__Lbank13                            bank13       00000
__Lbank14                            bank14       00000
__Lbank15                            bank15       00000
__Lbank16                            bank16       00000
__Lbank17                            bank17       00000
__Lbank18                            bank18       00000
__Lbank19                            bank19       00000
__Lbank2                             bank2        00000
__Lbank20                            bank20       00000
__Lbank21                            bank21       00000
__Lbank22                            bank22       00000
__Lbank23                            bank23       00000
__Lbank24                            bank24       00000
__Lbank25                            bank25       00000
__Lbank26                            bank26       00000
__Lbank27                            bank27       00000
__Lbank28                            bank28       00000
__Lbank29                            bank29       00000
__Lbank3                             bank3        00000
__Lbank30                            bank30       00000
__Lbank31                            bank31       00000
__Lbank4                             bank4        00000
__Lbank5                             bank5        00000
__Lbank6                             bank6        00000
__Lbank7                             bank7        00000
__Lbank8                             bank8        00000
__Lbank9                             bank9        00000
__Lbigram                            bigram       00000
__LbssBANK0                          bssBANK0     00000
__LbssBANK1                          bssBANK1     00000
__LbssBANK2                          bssBANK2     00000
__Lcinit                             cinit        00036
__Lclrtext                           clrtext      00000
__Lcode                              code         00000
__Lcommon                            common       00000
__Lconfig                            config       08007
__LcstackBANK0                       cstackBANK0  00000
__LcstackBANK1                       cstackBANK1  00000
__LcstackBANK2                       cstackBANK2  00000
__LcstackBANK3                       cstackBANK3  00000
__LcstackCOMMON                      cstackCOMMON 00000
__Leeprom_data                       eeprom_data  00000
__Lend_init                          end_init     00034
__Lfunctab                           functab      00000
__Lidloc                             idloc        00000
__Linit                              init         00034
__Lintentry                          intentry     00004
__Lmaintext                          maintext     00000
__Lpowerup                           powerup      00000
__Lram                               ram          00000
__Lreset_vec                         reset_vec    00000
__Lsfr0                              sfr0         00000
__Lsfr1                              sfr1         00000
__Lsfr10                             sfr10        00000
__Lsfr11                             sfr11        00000
__Lsfr12                             sfr12        00000
__Lsfr13                             sfr13        00000
__Lsfr14                             sfr14        00000
__Lsfr15                             sfr15        00000
__Lsfr16                             sfr16        00000
__Lsfr17                             sfr17        00000
__Lsfr18                             sfr18        00000
__Lsfr19                             sfr19        00000
__Lsfr2                              sfr2         00000
__Lsfr20                             sfr20        00000
__Lsfr21                             sfr21        00000
__Lsfr22                             sfr22        00000
__Lsfr23                             sfr23        00000
__Lsfr24                             sfr24        00000
__Lsfr25                             sfr25        00000
__Lsfr26                             sfr26        00000
__Lsfr27                             sfr27        00000
__Lsfr28                             sfr28        00000
__Lsfr29                             sfr29        00000
__Lsfr3                              sfr3         00000
__Lsfr30                             sfr30        00000
__Lsfr31                             sfr31        00000
__Lsfr4                              sfr4         00000
__Lsfr5                              sfr5         00000
__Lsfr6                              sfr6         00000
__Lsfr7                              sfr7         00000
__Lsfr8                              sfr8         00000
__Lsfr9                              sfr9         00000
__Lspace_0                           (abs)        00000
__Lspace_1                           (abs)        00000
__Lspace_2                           (abs)        00000
__Lspace_3                           (abs)        00000
__Lstack                             stack        00000
__Lstrings                           strings      00000
__Lstringtext                        stringtext   00000
__Ltext                              text         00000
__S0                                 (abs)        08008
__S1                                 (abs)        001BC
__S2                                 (abs)        00000
___awmod                             text25       00685
___awmod@counter                     cstackBANK1  000DE
___awmod@dividend                    cstackBANK1  000DB
___awmod@divisor                     cstackBANK1  000D9
___awmod@sign                        cstackBANK1  000DF
___int_sp                            stack        00000
___latbits                           (abs)        00003
___lbmod                             text13       00FBE
___lbmod@counter                     cstackBANK1  000DD
___lbmod@dividend                    cstackBANK1  000DC
___lbmod@divisor                     cstackBANK1  000D9
___lbmod@rem                         cstackBANK1  000DE
___sp                                stack        00000
___wmul                              text24       00F66
___wmul@multiplicand                 cstackBANK1  000E2
___wmul@multiplier                   cstackBANK1  000E0
___wmul@product                      cstackBANK1  000E4
__end_of_BitNum2SetMask              stringtext   00071
__end_of_Check4Keystroke             text15       00004
__end_of_CheckButtonEvents           text16       007AC
__end_of_DistList00                  stringtext   000B4
__end_of_EOTResponse                 text34       00EBC
__end_of_ES_CheckUserEvents          text14       00FBE
__end_of_ES_DeQueue                  text12       0025A
__end_of_ES_EnQueueFIFO              text23       004F1
__end_of_ES_EventList                stringtext   000B2
__end_of_ES_GetMSBitSet              text8        00685
__end_of_ES_InitQueue                text32       00F66
__end_of_ES_Initialize               text19       001BB
__end_of_ES_PostToService            text22       005A6
__end_of_ES_Run                      text3        00388
__end_of_ES_Timer_Init               text30       007FF
__end_of_ES_Timer_InitTimer          text29       0074A
__end_of_ES_Timer_Tick_Resp          text5        00415
__end_of_EventQueues                 stringtext   000AE
__end_of_FormPacket                  text28       00494
__end_of_GetInputLine                text18       00E90
__end_of_ISR                         intentry     00034
__end_of_InitSPI                     text27       00F30
__end_of_InitSPI_Service             text20       007F7
__end_of_InitToggleService           text21       00780
__end_of_Nybble2MSBitNum             stringtext   000A0
__end_of_PostButtonDebounceSM        text17       00EDD
__end_of_PostSPI_Service             text6        00F17
__end_of_PostToggleService           text7        00EEE
__end_of_RunSPI_Service              text9        002F7
__end_of_RunToggleService            text10       01000
__end_of_ServDescList                stringtext   000A8
__end_of_SetBGR                      text26       00F02
__end_of_Timer2PostFunc              stringtext   00091
__end_of__HW_Process_Pending_Ints    text4        00EAE
__end_of__HW_Timer_Init              text31       00ECC
__end_of___awmod                     text25       006CB
__end_of___lbmod                     text13       00FDE
__end_of___wmul                      text24       00F82
__end_of__initialization             cinit        0004D
__end_of_main                        maintext     005F3
__end_of_printf                      text1        00F9F
__end_of_putch                       text2        00800
__end_of_sendByte                    text11       007D2
__end_ofi1_ES_EnQueueFIFO            text37       0054D
__end_ofi1_ES_PostToService          text36       0063F
__end_ofi1_PostSPI_Service           text35       00EA1
__end_ofi1___awmod                   text39       00710
__end_ofi1___wmul                    text38       00F4B
__initialization                     cinit        00036
__pbssBANK0                          bssBANK0     0003C
__pbssBANK1                          bssBANK1     000A0
__pbssBANK2                          bssBANK2     00120
__pcstackBANK0                       cstackBANK0  00020
__pcstackBANK1                       cstackBANK1  000D9
__pcstackBANK2                       cstackBANK2  00166
__pcstackBANK3                       cstackBANK3  001A0
__pcstackCOMMON                      cstackCOMMON 00070
__pintentry                          intentry     00004
__pmaintext                          maintext     005A6
__pstringtext                        stringtext   00051
__ptext1                             text1        00F82
__ptext10                            text10       00FDE
__ptext11                            text11       007AC
__ptext12                            text12       001BB
__ptext13                            text13       00FBE
__ptext14                            text14       00F9F
__ptext15                            text15       00002
__ptext16                            text16       00780
__ptext17                            text17       00ECC
__ptext18                            text18       00E8B
__ptext19                            text19       0010D
__ptext2                             text2        007FF
__ptext20                            text20       007D2
__ptext21                            text21       0074A
__ptext22                            text22       0054D
__ptext23                            text23       00494
__ptext24                            text24       00F66
__ptext25                            text25       00685
__ptext26                            text26       00EEE
__ptext27                            text27       00F17
__ptext28                            text28       00415
__ptext29                            text29       00710
__ptext3                             text3        002F7
__ptext30                            text30       007F7
__ptext31                            text31       00EBC
__ptext32                            text32       00F4B
__ptext34                            text34       00EAE
__ptext35                            text35       00E96
__ptext36                            text36       005F3
__ptext37                            text37       004F1
__ptext38                            text38       00F30
__ptext39                            text39       006CB
__ptext4                             text4        00EA1
__ptext5                             text5        00388
__ptext6                             text6        00F02
__ptext7                             text7        00EDD
__ptext8                             text8        0063F
__ptext9                             text9        0025A
__size_of_Check4Keystroke            (abs)        00000
__size_of_CheckButtonEvents          (abs)        00000
__size_of_EOTResponse                (abs)        00000
__size_of_ES_CheckUserEvents         (abs)        00000
__size_of_ES_DeQueue                 (abs)        00000
__size_of_ES_EnQueueFIFO             (abs)        00000
__size_of_ES_GetMSBitSet             (abs)        00000
__size_of_ES_InitQueue               (abs)        00000
__size_of_ES_Initialize              (abs)        00000
__size_of_ES_PostToService           (abs)        00000
__size_of_ES_Run                     (abs)        00000
__size_of_ES_Timer_Init              (abs)        00000
__size_of_ES_Timer_InitTimer         (abs)        00000
__size_of_ES_Timer_Tick_Resp         (abs)        00000
__size_of_FormPacket                 (abs)        00000
__size_of_GetInputLine               (abs)        00000
__size_of_ISR                        (abs)        00000
__size_of_InitSPI                    (abs)        00000
__size_of_InitSPI_Service            (abs)        00000
__size_of_InitToggleService          (abs)        00000
__size_of_PostButtonDebounceSM       (abs)        00000
__size_of_PostSPI_Service            (abs)        00000
__size_of_PostToggleService          (abs)        00000
__size_of_RunSPI_Service             (abs)        00000
__size_of_RunToggleService           (abs)        00000
__size_of_SetBGR                     (abs)        00000
__size_of__HW_Process_Pending_Ints   (abs)        00000
__size_of__HW_Timer_Init             (abs)        00000
__size_of___awmod                    (abs)        00000
__size_of___lbmod                    (abs)        00000
__size_of___wmul                     (abs)        00000
__size_of_main                       (abs)        00000
__size_of_printf                     (abs)        00000
__size_of_putch                      (abs)        00000
__size_of_sendByte                   (abs)        00000
__size_ofi1_ES_EnQueueFIFO           (abs)        00000
__size_ofi1_ES_PostToService         (abs)        00000
__size_ofi1_PostSPI_Service          (abs)        00000
__size_ofi1___awmod                  (abs)        00000
__size_ofi1___wmul                   (abs)        00000
_main                                maintext     005A6
_printf                              text1        00F82
_putch                               text2        007FF
_sendByte                            text11       007AC
btemp                                (abs)        0007E
clear_ram0                           clrtext      00E90
end_of_initialization                cinit        0004D
i1ES_EnQueueFIFO@Event2Add           cstackBANK0  00022
i1ES_EnQueueFIFO@SaveCrit            cstackBANK0  00027
i1ES_EnQueueFIFO@pBlock              cstackBANK0  00020
i1ES_EnQueueFIFO@pThisQueue          cstackBANK0  00028
i1ES_PostToService@TheEvent          cstackBANK0  0002A
i1ES_PostToService@WhichService      cstackBANK0  00033
i1PostSPI_Service@ThisEvent          cstackBANK0  00034
i1_ES_EnQueueFIFO                    text37       004F1
i1_ES_PostToService                  text36       005F3
i1_ES_PostToService$1333             cstackBANK0  00031
i1_PostSPI_Service                   text35       00E96
i1___awmod                           text39       006CB
i1___awmod@counter                   cstackCOMMON 00075
i1___awmod@dividend                  cstackCOMMON 00072
i1___awmod@divisor                   cstackCOMMON 00070
i1___awmod@sign                      cstackCOMMON 00076
i1___wmul                            text38       00F30
i1___wmul@multiplicand               cstackCOMMON 00079
i1___wmul@multiplier                 cstackCOMMON 00077
i1___wmul@product                    cstackCOMMON 0007B
int$flags                            (abs)        0007E
intlevel0                            functab      00000
intlevel1                            functab      00000
intlevel2                            functab      00000
intlevel3                            functab      00000
intlevel4                            functab      00000
intlevel5                            functab      00000
ltemp                                (abs)        0007E
ltemp0                               (abs)        0007E
ltemp1                               (abs)        00082
ltemp2                               (abs)        00086
ltemp3                               (abs)        00080
main@ErrorType                       cstackBANK3  001BB
printf@ap                            cstackBANK1  000DE
printf@c                             cstackBANK1  000DF
printf@f                             cstackBANK1  000D9
reset_vec                            reset_vec    00000
sendByte@Data                        cstackBANK3  001A8
sendByte@ThisEvent                   cstackBANK3  001A5
sendByte@dummy                       cstackBANK3  001A4
stackhi                              (abs)        023EF
stacklo                              (abs)        0210C
start                                init         00034
start_initialization                 cinit        00036
ttemp                                (abs)        0007E
ttemp0                               (abs)        0007E
ttemp1                               (abs)        00081
ttemp2                               (abs)        00084
ttemp3                               (abs)        00087
ttemp4                               (abs)        0007F
wtemp                                (abs)        0007E
wtemp0                               (abs)        0007E
wtemp1                               (abs)        00080
wtemp2                               (abs)        00082
wtemp3                               (abs)        00084
wtemp4                               (abs)        00086
wtemp5                               (abs)        00088
wtemp6                               (abs)        0007F


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 24 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  ErrorType       1   27[BANK3 ] enum E2147
 Return value:  Size  Location     Type
                  2  337[None  ] int 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels required when called:   13
 This function calls:
		_ES_Initialize
		_ES_Run
		_printf
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _printf *****************
 Defined at:
		line 464 in file "/Applications/microchip/xc8/v1.38/sources/common/doprnt.c"
 Parameters:    Size  Location     Type
  f               2    0[BANK1 ] PTR const unsigned char 
		 -> STR_4(15), STR_3(23), STR_2(24), STR_1(27), 
 Auto vars:     Size  Location     Type
  tmpval          4    0        struct .
  cp              2    0        PTR const unsigned char 
  len             2    0        unsigned int 
  val             2    0        unsigned int 
  c               1    6[BANK1 ] char 
  ap              1    5[BANK1 ] PTR void [1]
		 -> ?_printf(2), 
  flag            1    0        unsigned char 
  prec            1    0        char 
 Return value:  Size  Location     Type
                  2    0[BANK1 ] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       2       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_putch
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _putch *****************
 Defined at:
		line 7 in file "/Applications/microchip/xc8/v1.38/sources/common/putch.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1    0[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_printf
 This function uses a non-reentrant model


 *************** function _ES_Run *****************
 Defined at:
		line 277 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  HighestPrior    1   25[BANK3 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E1982
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       3       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       4       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       7       0       0       0       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   12
 This function calls:
		_ES_CheckUserEvents
		_ES_DeQueue
		_ES_GetMSBitSet
		_RunSPI_Service
		_RunToggleService
		__HW_Process_Pending_Ints
		___wmul
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function __HW_Process_Pending_Ints *****************
 Defined at:
		line 210 in file "ES_Port.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   11
 This function calls:
		_ES_Timer_Tick_Resp
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _ES_Timer_Tick_Resp *****************
 Defined at:
		line 284 in file "ES_Timers.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       4       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       4       0       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		Absolute function
		_ES_GetMSBitSet
		_PostSPI_Service
		_PostToggleService
 This function is called by:
		__HW_Process_Pending_Ints
 This function uses a non-reentrant model


 *************** function _PostSPI_Service *****************
 Defined at:
		line 84 in file "SPI_Service.c"
 Parameters:    Size  Location     Type
  ThisEvent       3    0[BANK3 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       0       0       3       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       3       0       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_ES_PostToService
 This function is called by:
		_RunSPI_Service
		_sendByte
		_ES_Timer_Tick_Resp
 This function uses a non-reentrant model


 *************** function _PostToggleService *****************
 Defined at:
		line 106 in file "ToggleService.c"
 Parameters:    Size  Location     Type
  ThisEvent       3    0[BANK3 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       0       0       3       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       3       0       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_ES_PostToService
 This function is called by:
		_ES_Timer_Tick_Resp
		_PostToList
 This function uses a non-reentrant model


 *************** function _ES_GetMSBitSet *****************
 Defined at:
		line 79 in file "ES_LookupTables.c"
 Parameters:    Size  Location     Type
  Val2Check       2    0[BANK1 ] unsigned int 
 Auto vars:     Size  Location     Type
  LoopCntr        1    8[BANK1 ] char 
  Nybble2Test     1    7[BANK1 ] unsigned char 
  ReturnVal       1    6[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       2       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ES_Run
		_ES_Timer_Tick_Resp
 This function uses a non-reentrant model


 *************** function _RunSPI_Service *****************
 Defined at:
		line 100 in file "SPI_Service.c"
 Parameters:    Size  Location     Type
  ThisEvent       3    9[BANK3 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  ThisEvent       3   16[BANK3 ] struct ES_Event_t
  ReturnEvent     3   13[BANK3 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  3    9[BANK3 ] struct ES_Event_t
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       0       0       3       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       6       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0      10       0       0       0       0       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   11
 This function calls:
		_ES_Timer_InitTimer
		_FormPacket
		_PostSPI_Service
		_SetBGR
		_sendByte
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _RunToggleService *****************
 Defined at:
		line 128 in file "ToggleService.c"
 Parameters:    Size  Location     Type
  ThisEvent       3    9[BANK3 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  ReturnEvent     3   12[BANK3 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  3    9[BANK3 ] struct ES_Event_t
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       0       0       3       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       3       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       6       0       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_ES_Timer_InitTimer
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _sendByte *****************
 Defined at:
		line 155 in file "SPI_Service.c"
 Parameters:    Size  Location     Type
  Data            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  Data            1    8[BANK3 ] unsigned char 
  ThisEvent       3    5[BANK3 ] struct ES_Event_t
  dummy           1    4[BANK3 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       5       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       6       0       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		_PostSPI_Service
 This function is called by:
		_RunSPI_Service
 This function uses a non-reentrant model


 *************** function _ES_DeQueue *****************
 Defined at:
		line 164 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          2   13[BANK1 ] PTR struct ES_Event_t
		 -> Queue1(12), Queue0(18), 
  pReturnEvent    1   15[BANK1 ] PTR struct ES_Event_t
		 -> ES_Run@ThisEvent(3), ES_RecallEvents@RecalledEvent(3), 
 Auto vars:     Size  Location     Type
  pThisQueue      2    2[BANK2 ] PTR struct .
		 -> Queue1(12), Queue0(18), 
  NumLeft         1    1[BANK2 ] unsigned char 
  SaveCrit        1    0[BANK2 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       3       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       7       4       0       0       0       0       0       0       0       0       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		___lbmod
		___wmul
 This function is called by:
		_ES_Run
		_ES_RecallEvents
 This function uses a non-reentrant model


 *************** function ___lbmod *****************
 Defined at:
		line 4 in file "/Applications/microchip/xc8/v1.38/sources/common/lbmod.c"
 Parameters:    Size  Location     Type
  dividend        1    wreg     unsigned char 
  divisor         1    0[BANK1 ] unsigned char 
 Auto vars:     Size  Location     Type
  dividend        1    3[BANK1 ] unsigned char 
  rem             1    5[BANK1 ] unsigned char 
  counter         1    4[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       1       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ES_DeQueue
 This function uses a non-reentrant model


 *************** function _ES_CheckUserEvents *****************
 Defined at:
		line 46 in file "ES_CheckEvents.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1   11[BANK3 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       3       0       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   11
 This function calls:
		_Check4Keystroke
		_CheckButtonEvents
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _Check4Keystroke *****************
 Defined at:
		line 108 in file "EventCheckers.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ES_CheckUserEvents
 This function uses a non-reentrant model


 *************** function _CheckButtonEvents *****************
 Defined at:
		line 59 in file "Button.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  ThisEvent       3    5[BANK3 ] struct ES_Event_t
  CurrentButto    1    8[BANK3 ] unsigned char 
  ReturnVal       1    4[BANK3 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       5       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       6       0       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		_GetInputLine
		_PostButtonDebounceSM
 This function is called by:
		_ES_CheckUserEvents
 This function uses a non-reentrant model


 *************** function _PostButtonDebounceSM *****************
 Defined at:
		line 89 in file "Button.c"
 Parameters:    Size  Location     Type
  ThisEvent       3    0[BANK3 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       0       0       3       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       3       0       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_ES_PostToService
 This function is called by:
		_CheckButtonEvents
 This function uses a non-reentrant model


 *************** function _GetInputLine *****************
 Defined at:
		line 37 in file "Button.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_CheckButtonEvents
		_InitializeButtonDebounce
 This function uses a non-reentrant model


 *************** function _ES_Initialize *****************
 Defined at:
		line 242 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
  NewRate         2    5[BANK3 ] enum E1911
 Auto vars:     Size  Location     Type
  i               1   15[BANK3 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E1982
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       0       0       2       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       8       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0      11       0       0       0       0       0       0       0       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		_ES_InitQueue
		_ES_Timer_Init
		_InitSPI_Service
		_InitToggleService
		___wmul
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _InitSPI_Service *****************
 Defined at:
		line 58 in file "SPI_Service.c"
 Parameters:    Size  Location     Type
  Priority        1    0[BANK3 ] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       0       0       1       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_ES_Timer_InitTimer
		_InitSPI
		_SetBGR
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function _InitToggleService *****************
 Defined at:
		line 62 in file "ToggleService.c"
 Parameters:    Size  Location     Type
  Priority        1    0[BANK3 ] unsigned char 
 Auto vars:     Size  Location     Type
  ThisEvent       3    2[BANK3 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       0       0       1       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       3       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       5       0       0       0       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_ES_PostToService
		_ES_Timer_InitTimer
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function _ES_PostToService *****************
 Defined at:
		line 352 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
  WhichService    1    wreg     unsigned char 
  TheEvent        3    0[BANK2 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  WhichService    1    9[BANK2 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       0       3       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0      10       0       0       0       0       0       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_ES_EnQueueFIFO
		___wmul
 This function is called by:
		_InitToggleService
		_PostToggleService
		_PostSPI_Service
		_PostButtonDebounceSM
		_InitTemplateFSM
		_PostTemplateFSM
		_InitTemplateService
		_PostTemplateService
 This function uses a non-reentrant model


 *************** function _ES_EnQueueFIFO *****************
 Defined at:
		line 85 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          2   13[BANK1 ] PTR struct ES_Event_t
		 -> Queue1(12), Queue0(18), 
  Event2Add       3   15[BANK1 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  pThisQueue      2   21[BANK1 ] PTR struct .
		 -> Queue1(12), Queue0(18), 
  SaveCrit        1   20[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       5       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		___awmod
		___wmul
 This function is called by:
		_ES_PostToService
		_ES_PostAll
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "/Applications/microchip/xc8/v1.38/sources/common/Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    7[BANK1 ] unsigned int 
  multiplicand    2    9[BANK1 ] unsigned int 
 Auto vars:     Size  Location     Type
  product         2   11[BANK1 ] unsigned int 
 Return value:  Size  Location     Type
                  2    7[BANK1 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       4       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ES_Initialize
		_ES_Run
		_ES_PostToService
		_ES_PostAll
		_ES_PostToServiceLIFO
		_ES_DeQueue
		_ES_EnQueueFIFO
		_ES_EnQueueLIFO
 This function uses a non-reentrant model


 *************** function ___awmod *****************
 Defined at:
		line 6 in file "/Applications/microchip/xc8/v1.38/sources/common/awmod.c"
 Parameters:    Size  Location     Type
  divisor         2    0[BANK1 ] int 
  dividend        2    2[BANK1 ] int 
 Auto vars:     Size  Location     Type
  sign            1    6[BANK1 ] unsigned char 
  counter         1    5[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  2    0[BANK1 ] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       4       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ES_EnQueueFIFO
 This function uses a non-reentrant model


 *************** function _SetBGR *****************
 Defined at:
		line 223 in file "SPI_Service.c"
 Parameters:    Size  Location     Type
  B               1    wreg     unsigned char 
  G               1    0[BANK1 ] unsigned char 
  R               1    1[BANK1 ] unsigned char 
 Auto vars:     Size  Location     Type
  B               1    3[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       2       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_InitSPI_Service
		_RunSPI_Service
 This function uses a non-reentrant model


 *************** function _InitSPI *****************
 Defined at:
		line 179 in file "SPI_Service.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_FormPacket
 This function is called by:
		_InitSPI_Service
 This function uses a non-reentrant model


 *************** function _FormPacket *****************
 Defined at:
		line 201 in file "SPI_Service.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  j               1    5[BANK1 ] unsigned char 
  i               1    3[BANK1 ] unsigned char 
  ledNum          1    4[BANK1 ] unsigned char 
  i               1    2[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_RunSPI_Service
		_InitSPI
 This function uses a non-reentrant model


 *************** function _ES_Timer_InitTimer *****************
 Defined at:
		line 229 in file "ES_Timers.c"
 Parameters:    Size  Location     Type
  Num             1    wreg     unsigned char 
  NewTime         2    0[BANK1 ] unsigned int 
 Auto vars:     Size  Location     Type
  Num             1    6[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E1960
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       2       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_InitToggleService
		_RunToggleService
		_InitSPI_Service
		_RunSPI_Service
		_InitializeButtonDebounce
		_RunButtonDebounceSM
 This function uses a non-reentrant model


 *************** function _ES_Timer_Init *****************
 Defined at:
		line 130 in file "ES_Timers.c"
 Parameters:    Size  Location     Type
  Rate            2    2[BANK1 ] enum E1911
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       2       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		__HW_Timer_Init
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function __HW_Timer_Init *****************
 Defined at:
		line 74 in file "ES_Port.c"
 Parameters:    Size  Location     Type
  Rate            2    0[BANK1 ] enum E1896
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       2       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ES_Timer_Init
 This function uses a non-reentrant model


 *************** function _ES_InitQueue *****************
 Defined at:
		line 58 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          2   13[BANK1 ] PTR struct ES_Event_t
		 -> Queue1(12), Queue0(18), 
  BlockSize       1   15[BANK1 ] unsigned char 
 Auto vars:     Size  Location     Type
  pThisQueue      2   17[BANK1 ] PTR struct .
		 -> Queue1(12), Queue0(18), 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       3       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 114 in file "ES_Port.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_EOTResponse
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _EOTResponse *****************
 Defined at:
		line 171 in file "SPI_Service.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  ThisEvent       3   23[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		i1_PostSPI_Service
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function i1_PostSPI_Service *****************
 Defined at:
		line 84 in file "SPI_Service.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   20[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       3       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		i1_ES_PostToService
 This function is called by:
		_EOTResponse
 This function uses a non-reentrant model


 *************** function i1_ES_PostToService *****************
 Defined at:
		line 352 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
  WhichService    1    wreg     unsigned char 
  TheEvent        3   10[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  WhichService    1   19[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       3       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		i1_ES_EnQueueFIFO
		i1___wmul
 This function is called by:
		i1_PostSPI_Service
 This function uses a non-reentrant model


 *************** function i1_ES_EnQueueFIFO *****************
 Defined at:
		line 85 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          2    0[BANK0 ] PTR struct ES_Event_t
		 -> Queue1(12), Queue0(18), 
  Event2Add       3    2[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  ES_EnQueueFI    2    8[BANK0 ] PTR struct .
		 -> Queue1(12), Queue0(18), 
  ES_EnQueueFI    1    7[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       5       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i1___awmod
		i1___wmul
 This function is called by:
		i1_ES_PostToService
 This function uses a non-reentrant model


 *************** function i1___wmul *****************
 Defined at:
		line 15 in file "/Applications/microchip/xc8/v1.38/sources/common/Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    7[COMMON] unsigned int 
  multiplicand    2    9[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  __wmul          2   11[COMMON] unsigned int 
 Return value:  Size  Location     Type
                  2    7[COMMON] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         4       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		i1_ES_PostToService
		i1_ES_EnQueueFIFO
 This function uses a non-reentrant model


 *************** function i1___awmod *****************
 Defined at:
		line 6 in file "/Applications/microchip/xc8/v1.38/sources/common/awmod.c"
 Parameters:    Size  Location     Type
  divisor         2    0[COMMON] int 
  dividend        2    2[COMMON] int 
 Auto vars:     Size  Location     Type
  __awmod         1    6[COMMON] unsigned char 
  __awmod         1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  2    0[COMMON] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         4       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		i1_ES_EnQueueFIFO
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
ES_Queue.c
		_ES_EnQueueFIFO		CODE           	0494	0000	94
		_ES_DeQueue    		CODE           	01BB	0000	160
		_ES_InitQueue  		CODE           	0F4B	0000	28

ES_Queue.c estimated size: 282

ES_CheckEvents.c
		_ES_CheckUserEvents		CODE           	0F9F	0000	32

ES_CheckEvents.c estimated size: 32

/Applications/microchip/xc8/v1.38/sources/common/lbmod.c
		___lbmod       		CODE           	0FBE	0000	33

/Applications/microchip/xc8/v1.38/sources/common/lbmod.c estimated size: 33

ES_LookupTables.c
		_ES_GetMSBitSet		CODE           	063F	0000	71

ES_LookupTables.c estimated size: 71

EventCheckers.c
		_Check4Keystroke		CODE           	0002	0000	3

EventCheckers.c estimated size: 3

/Applications/microchip/xc8/v1.38/sources/common/Umul16.c
		___wmul        		CODE           	0F66	0000	29

/Applications/microchip/xc8/v1.38/sources/common/Umul16.c estimated size: 29

ES_Framework.c
		_ES_PostToService		CODE           	054D	0000	90
		_ES_Run        		CODE           	02F7	0000	146
		_ES_Initialize 		CODE           	010D	0000	175

ES_Framework.c estimated size: 411

Button.c
		_PostButtonDebounceSM		CODE           	0ECC	0000	18
		_GetInputLine  		CODE           	0E8B	0000	6
		_CheckButtonEvents		CODE           	0780	0000	45

Button.c estimated size: 69

ToggleService.c
		_InitToggleService		CODE           	074A	0000	55
		_RunToggleService		CODE           	0FDE	0000	35
		_PostToggleService		CODE           	0EDD	0000	18

ToggleService.c estimated size: 108

shared
		_BitNum2SetMask		STRCODE        	0051	0000	33
		_DistList00    		STRCODE        	00B2	0000	3
		i1_ES_EnQueueFIFO		CODE           	04F1	0000	93
		_ES_EventList  		STRCODE        	00AE	0000	5
		i1___wmul      		CODE           	0F30	0000	28
		i1_ES_PostToService		CODE           	05F3	0000	77
		_Nybble2MSBitNum		STRCODE        	0091	0000	16
		_EventQueues   		STRCODE        	00A8	0000	7
		__initialization		CODE           	0036	0000	24
		i1___awmod     		CODE           	06CB	0000	70
		i1_PostSPI_Service		CODE           	0E96	0000	12
		_Timer2PostFunc		STRCODE        	0071	0000	33
		_ServDescList  		STRCODE        	00A0	0000	9

shared estimated size: 410

ES_Port.c
		_ISR           		CODE           	0004	0000	49
		__HW_Process_Pending_Ints		CODE           	0EA1	0000	14
		__HW_Timer_Init		CODE           	0EBC	0000	17

ES_Port.c estimated size: 80

/Applications/microchip/xc8/v1.38/sources/common/awmod.c
		___awmod       		CODE           	0685	0000	71

/Applications/microchip/xc8/v1.38/sources/common/awmod.c estimated size: 71

/Applications/microchip/xc8/v1.38/sources/common/putch.c
		_putch         		CODE           	07FF	0000	2

/Applications/microchip/xc8/v1.38/sources/common/putch.c estimated size: 2

SPI_Service.c
		_EOTResponse   		CODE           	0EAE	0000	15
		_SetBGR        		CODE           	0EEE	0000	21
		_InitSPI_Service		CODE           	07D2	0000	38
		_sendByte      		CODE           	07AC	0000	39
		_InitSPI       		CODE           	0F17	0000	26
		_FormPacket    		CODE           	0415	0000	128
		_PostSPI_Service		CODE           	0F02	0000	22
		_RunSPI_Service		CODE           	025A	0000	158

SPI_Service.c estimated size: 447

ES_Timers.c
		_ES_Timer_Init 		CODE           	07F7	0000	9
		_ES_Timer_InitTimer		CODE           	0710	0000	59
		_ES_Timer_Tick_Resp		CODE           	0388	0000	142

ES_Timers.c estimated size: 210

main.c
		_main          		CODE           	05A6	0000	78

main.c estimated size: 78

/Applications/microchip/xc8/v1.38/sources/common/doprnt.c
		_printf        		CODE           	0F82	0000	30

/Applications/microchip/xc8/v1.38/sources/common/doprnt.c estimated size: 30

