Microchip MPLAB XC8 Compiler V1.38 ()

Linker command line:

-W-3 --edf=/Applications/microchip/xc8/v1.38/dat/en_msgs.txt -cs \
  -h+dist/default/production/Head_Device.production.sym \
  --cmf=dist/default/production/Head_Device.production.cmf -z -Q18F2480 \
  -o/tmp/xc5HZDoHV -Mdist/default/production/Head_Device.production.map -E1 \
  -ver=XC8 -ASTACK=0E8h-02ffh -pstack=STACK -ACODE=00h-03FFFh \
  -ACONST=00h-03FFFh -ASMALLCONST=0300h-03FFhx61 -AMEDIUMCONST=0300h-03FFFh \
  -ACOMRAM=01h-05Fh -AABS1=00h-02FFh -ABIGRAM=01h-02FFh \
  -ARAM=060h-0FFh,0100h-01FFhx2 -ABANK0=060h-0FFh -ABANK1=0100h-01FFh \
  -ABANK2=0200h-02FFh -ASFR=0D00h-0DFFhx2,0F00h-0F5Fh,0F60h-0FFFh \
  -preset_vec=00h,intcode=08h,intcodelo,powerup,init,end_init \
  -pramtop=0300h -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST \
  -pconst=CONST -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  /tmp/xcW4Him6F.obj dist/default/production/Head_Device.production.obj 

Object code version is 3.11

Machine type is 18F2480

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
/tmp/xcW4Him6F.obj
                end_init                             16       16        4        4       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production/Head_Device.production.obj
                intcode                               8        8        E        4       0
                temp                                 3E       3E        1        1       1
                smallconst                          300      300       C6      180       0
                text49                             108A     108A       70      1E3       0
                text48                             149E     149E       26      1E3       0
                text47                              A6C      A6C       B4      1E3       0
                text46                             11D2     11D2       6A      1E3       0
                text45                             153E     153E       16      1E3       0
                text44                             10FA     10FA       6E      1E3       0
                text43                              D94      D94       88      1E3       0
                text42                             159E     159E        2      1E3       0
                text41                             159C     159C        2      1E3       0
                text40                             1582     1582        8      1E3       0
                text39                             1590     1590        6      1E3       0
                intcode_body                        99E      99E       CE      1E3       0
                text37                             131A     131A       3C      1E3       0
                text36                             14C4     14C4       1E      1E3       0
                text35                             1554     1554        E      1E3       0
                text34                              BC4      BC4       A2      1E3       0
                text33                             1356     1356       36      1E3       0
                text32                              7E4      7E4       E2      1E3       0
                text31                             1014     1014       76      1E3       0
                text30                              EA0      EA0       80      1E3       0
                text29                             158A     158A        6      1E3       0
                text28                             1562     1562        C      1E3       0
                text27                             1420     1420       2E      1E3       0
                text26                             13F0     13F0       30      1E3       0
                text25                             13C0     13C0       30      1E3       0
                text24                              6F8      6F8       EC      1E3       0
                text23                             1168     1168       6A      1E3       0
                text22                             1596     1596        4      1E3       0
                text21                             128C     128C       4A      1E3       0
                text20                             12D6     12D6       44      1E3       0
                text19                              3C6      3C6      128      1E3       0
                text18                             144E     144E       2A      1E3       0
                text17                              F9C      F9C       78      1E3       0
                text16                              E1C      E1C       84      1E3       0
                text15                             14E2     14E2       1A      1E3       0
                text14                             1578     1578        A      1E3       0
                text13                             156E     156E        A      1E3       0
                text12                              F20      F20       7C      1E3       0
                text11                              8C6      8C6       D8      1E3       0
                text10                              C66      C66       9A      1E3       0
                text9                              123C     123C       50      1E3       0
                text8                               B20      B20       A4      1E3       0
                text7                              1528     1528       16      1E3       0
                text6                              1512     1512       16      1E3       0
                text5                               4EE      4EE      116      1E3       0
                text4                              14FC     14FC       16      1E3       0
                text3                               604      604       F4      1E3       0
                text2                              159A     159A        2      1E3       0
                text1                              138C     138C       34      1E3       0
                text0                               D00      D00       94      1E3       0
                cstackCOMRAM                          1        1       35        1       1
                cstackBANK0                          BC       BC       2C       60       1
                bssBANK0                             60       60       5C       60       1
                bssCOMRAM                            36       36        8        1       1
                cinit                              1478     1478       26      1E3       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             16       16        4         0
                intcode                               8        8        E         0
                reset_vec                             0        0        4         0
                text49                             108A     108A       70         0
                text48                             149E     149E       26         0
                text47                              A6C      A6C       B4         0
                text46                             11D2     11D2       6A         0
                text45                             153E     153E       16         0
                text44                             10FA     10FA       6E         0
                text43                              D94      D94       88         0
                text42                             159E     159E        2         0
                text41                             159C     159C        2         0
                text40                             1582     1582        8         0
                text39                             1590     1590        6         0
                intcode_body                        99E      99E       CE         0
                text37                             131A     131A       3C         0
                text36                             14C4     14C4       1E         0
                text35                             1554     1554        E         0
                text34                              BC4      BC4       A2         0
                text33                             1356     1356       36         0
                text32                              7E4      7E4       E2         0
                text31                             1014     1014       76         0
                text30                              EA0      EA0       80         0
                text29                             158A     158A        6         0
                text28                             1562     1562        C         0
                text27                             1420     1420       2E         0
                text26                             13F0     13F0       30         0
                text25                             13C0     13C0       30         0
                text24                              6F8      6F8       EC         0
                text23                             1168     1168       6A         0
                text22                             1596     1596        4         0
                text21                             128C     128C       4A         0
                text20                             12D6     12D6       44         0
                text19                              3C6      3C6      128         0
                text18                             144E     144E       2A         0
                text17                              F9C      F9C       78         0
                text16                              E1C      E1C       84         0
                text15                             14E2     14E2       1A         0
                text14                             1578     1578        A         0
                text13                             156E     156E        A         0
                text12                              F20      F20       7C         0
                text11                              8C6      8C6       D8         0
                text10                              C66      C66       9A         0
                text9                              123C     123C       50         0
                text8                               B20      B20       A4         0
                text7                              1528     1528       16         0
                text6                              1512     1512       16         0
                text5                               4EE      4EE      116         0
                text4                              14FC     14FC       16         0
                text3                               604      604       F4         0
                text2                              159A     159A        2         0
                text1                              138C     138C       34         0
                text0                               D00      D00       94         0
                cinit                              1478     1478       26         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                          300      300       C6         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                temp                                 3E       3E        1         1
                cstackCOMRAM                          1        1       35         1
                bssCOMRAM                            36       36        8         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                cstackBANK0                          BC       BC       2C         1
                bssBANK0                             60       60       5C         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  00003E  00003F         1       1  COMRAM  
                intcode                        000008  000012  00001A         4       0  CODE    
                bssBANK0                       000060  000088  0000E8        60       1  BANK0   
                smallconst                     000300  0000C6  0003C6       180       0  SMALLCON
                text19                         0003C6  0011DA  0015A0       1E3       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0000E8-0000FF               18
        BANK1            000100-0001FF              100
        BANK2            000200-0002FF              100
        BIGRAM           00003F-00005F               21
                         0000E8-0002FF              218
        CODE             000004-000007                4
                         00001A-0002FF              2E6
                         0015A0-003FFF             2A60
        COMRAM           00003F-00005F               21
        CONST            000004-000007                4
                         00001A-0002FF              2E6
                         0015A0-003FFF             2A60
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      0015A0-003FFF             2A60
        RAM              0000E8-0002FF              100
        SFR              000D00-000FFF              100
        SMALLCONST       0015A0-003FFF              100
        STACK            0000E8-0002FF              218

                                  Symbol Table

?_GetBrightness                      cstackBANK0  0000BC
?_GetLocation                        cstackBANK0  0000BC
?_RunAnalogService                   cstackBANK0  0000D9
?_RunButtonDebounceSM                cstackBANK0  0000D9
?_RunCan_XmitService                 cstackBANK0  0000D9
?___awmod                            cstackBANK0  0000BC
?___wmul                             cstackBANK0  0000C2
?_printf                             cstackBANK0  0000BC
?i2___awmod                          cstackCOMRAM 000001
?i2___wmul                           cstackCOMRAM 000007
AnalogISR@Event2Post                 cstackCOMRAM 000023
Analog_Service@MyPriority            bssBANK0     00008D
Can_XmitService@MyPriority           bssBANK0     00008E
CheckButtonEvents@CurrentButtonState cstackBANK0  0000E0
CheckButtonEvents@ReturnVal          cstackBANK0  0000DC
CheckButtonEvents@ThisEvent          cstackBANK0  0000DD
ES_CheckUserEvents@i                 cstackBANK0  0000E1
ES_DeQueue@NumLeft                   cstackBANK0  0000CF
ES_DeQueue@SaveCrit                  cstackBANK0  0000CE
ES_DeQueue@pBlock                    cstackBANK0  0000C8
ES_DeQueue@pReturnEvent              cstackBANK0  0000CA
ES_DeQueue@pThisQueue                cstackBANK0  0000D0
ES_EnQueueFIFO@Event2Add             cstackBANK0  0000CA
ES_EnQueueFIFO@SaveCrit              cstackBANK0  0000D0
ES_EnQueueFIFO@pBlock                cstackBANK0  0000C8
ES_EnQueueFIFO@pThisQueue            cstackBANK0  0000D1
ES_GetMSBitSet@LoopCntr              cstackBANK0  0000C5
ES_GetMSBitSet@Nybble2Test           cstackBANK0  0000C4
ES_GetMSBitSet@ReturnVal             cstackBANK0  0000C3
ES_GetMSBitSet@Val2Check             cstackBANK0  0000BC
ES_InitQueue@BlockSize               cstackBANK0  0000BE
ES_InitQueue@pBlock                  cstackBANK0  0000BC
ES_InitQueue@pThisQueue              cstackBANK0  0000BF
ES_Initialize@NewRate                cstackBANK0  0000DD
ES_Initialize@i                      cstackBANK0  0000DF
ES_PostAll@ThisEvent                 cstackBANK0  0000D3
ES_PostAll@i                         cstackBANK0  0000D8
ES_PostToService@TheEvent            cstackBANK0  0000D3
ES_PostToService@WhichService        cstackBANK0  0000D8
ES_Run@HighestPrior                  cstackBANK0  0000E6
ES_Run@ThisEvent                     bssBANK0     0000B9
ES_Timer_Init@Rate                   cstackBANK0  0000BE
ES_Timer_InitTimer@NewTime           cstackBANK0  0000BC
ES_Timer_InitTimer@Num               cstackBANK0  0000C0
ES_Timer_Tick_Resp@NeedsProcessing   bssBANK0     000083
ES_Timer_Tick_Resp@NewEvent          bssBANK0     000080
ES_Timer_Tick_Resp@NextTimer2Process bssBANK0     00008F
ISR@LastTime                         bssCOMRAM    000036
ISR@NextTime                         bssCOMRAM    000038
InitAnalogService@Priority           cstackBANK0  0000DC
InitAnalogService@ThisEvent          cstackBANK0  0000D9
InitCan_XmitService@Priority         cstackBANK0  0000DC
InitCan_XmitService@ThisEvent        cstackBANK0  0000D9
InitializeButtonDebounce@Priority    cstackBANK0  0000C1
PostAnalogService@ThisEvent          cstackBANK0  0000D9
PostButtonDebounceSM@ThisEvent       cstackBANK0  0000D9
PostCan_XmitService@ThisEvent        cstackCOMRAM 00001E
RunAnalogService@ReturnEvent         cstackBANK0  0000DC
RunAnalogService@ThisEvent           cstackBANK0  0000D9
RunButtonDebounceSM@ReturnEvent      cstackBANK0  0000DC
RunButtonDebounceSM@ThisEvent        cstackBANK0  0000D9
RunCan_XmitService@ReturnEvent       cstackBANK0  0000DE
RunCan_XmitService@ThisEvent         cstackBANK0  0000D9
XmitData@DataByte                    cstackBANK0  0000BE
_ADCON0bits                          (abs)        000FC2
_ADCON1                              (abs)        000FC1
_ADCON1bits                          (abs)        000FC1
_ADCON2bits                          (abs)        000FC0
_ADIE                                (abs)        007CEE
_ADIF                                (abs)        007CF6
_ADRESH                              (abs)        000FC4
_ADRESL                              (abs)        000FC3
_AnalogISR                           text43       000D94
_BRGCON1bits                         (abs)        000F70
_BRGCON2bits                         (abs)        000F71
_BRGCON3bits                         (abs)        000F72
_BitNum2SetMask                      smallconst   000301
_Brightness                          bssBANK0     000085
_BusErrorResponse                    text42       00159E
_CANCON                              (abs)        000F6F
_CANSTATbits                         (abs)        000F6E
_CCP1CON                             (abs)        000FBD
_CCP1IF                              (abs)        007CF2
_CCPR1H                              (abs)        000FBF
_CCPR1L                              (abs)        000FBE
_CIOCON                              (abs)        000F73
_CanErrorResponse                    text41       00159C
_CanRCVResponse                      text40       001582
_CanXmitResponse                     text39       001590
_Check4Keystroke                     text22       001596
_CheckButtonEvents                   text23       001168
_CurrentState                        bssBANK0     000090
_DistList00                          smallconst   000369
_ECANCON                             (abs)        000F77
_ERRIE                               (abs)        007D1D
_ERRIF                               (abs)        007D25
_ES_CheckUserEvents                  text21       00128C
_ES_DeQueue                          text19       0003C6
_ES_EnQueueFIFO                      text32       0007E4
_ES_EventList                        smallconst   000365
_ES_GetMSBitSet                      text8        000B20
_ES_InitQueue                        text37       00131A
_ES_Initialize                       text24       0006F8
_ES_PostAll                          text17       000F9C
_ES_PostToService                    text31       001014
_ES_Run                              text3        000604
_ES_Timer_Init                       text35       001554
_ES_Timer_InitTimer                  text30       000EA0
_ES_Timer_Tick_Resp                  text5        0004EE
_EventQueues                         smallconst   00035C
_GIE                                 (abs)        007F97
_GetBrightness                       text14       001578
_GetInputLine                        text29       00158A
_GetLocation                         text13       00156E
_INTCON                              (abs)        000FF2
_IRCF0                               (abs)        007E9C
_IRCF1                               (abs)        007E9D
_IRCF2                               (abs)        007E9E
_IRXIE                               (abs)        007D1F
_IRXIF                               (abs)        007D27
_ISR                                 intcode      000008
_InitAnalogHW                        text18       00144E
_InitAnalogService                   text25       0013C0
_InitButtonHW                        text28       001562
_InitCanHardware                     text16       000E1C
_InitCan_XmitService                 text26       0013F0
_InitPins                            text15       0014E2
_InitializeButtonDebounce            text27       001420
_LATA                                (abs)        000F89
_LATA2                               (abs)        007C4A
_LATA3                               (abs)        007C4B
_LATA4                               (abs)        007C4C
_LATA5                               (abs)        007C4D
_LATB                                (abs)        000F8A
_LATC                                (abs)        000F8B
_LastButtonState                     bssBANK0     000091
_LastData                            bssBANK0     000092
_Location                            bssBANK0     000087
_MyPriority                          bssBANK0     000093
_Nybble2MSBitNum                     smallconst   000341
_PEIE                                (abs)        007F96
_PIE1                                (abs)        000F9D
_PORTA                               (abs)        000F80
_PORTB                               (abs)        000F81
_PORTC                               (abs)        000F82
_PostAnalogService                   text7        001528
_PostButtonDebounceSM                text6        001512
_PostCan_XmitService                 text45       00153E
_Queue0                              bssBANK0     000095
_Queue1                              bssBANK0     0000A1
_Queue2                              bssBANK0     0000AD
_RXB0CONbits                         (abs)        000F60
_RXB0IE                              (abs)        007D18
_RXB0IF                              (abs)        007D20
_RXF0EIDH                            (abs)        000F02
_RXF0EIDL                            (abs)        000F03
_RXF0SIDH                            (abs)        000F00
_RXF0SIDL                            (abs)        000F01
_RXM0EIDH                            (abs)        000F1A
_RXM0EIDL                            (abs)        000F1B
_RXM0SIDH                            (abs)        000F18
_RXM0SIDL                            (abs)        000F19
_Ready                               bssBANK0     000089
_RunAnalogService                    text9        00123C
_RunButtonDebounceSM                 text10       000C66
_RunCan_XmitService                  text11       0008C6
_SCS1                                (abs)        007E99
_ServDescList                        smallconst   000350
_SysTickCounter                      bssCOMRAM    00003A
_T1CON                               (abs)        000FCD
_TMR_ActiveFlags                     bssBANK0     00008B
_TMR_TimerArray                      bssBANK0     000060
_TRISA                               (abs)        000F92
_TRISAbits                           (abs)        000F92
_TRISBbits                           (abs)        000F93
_TXB0CONbits                         (abs)        000F40
_TXB0D0                              (abs)        000F46
_TXB0D1                              (abs)        000F47
_TXB0D2                              (abs)        000F48
_TXB0D3                              (abs)        000F49
_TXB0D4                              (abs)        000F4A
_TXB0DLC                             (abs)        000F45
_TXB0EIDH                            (abs)        000F43
_TXB0EIDL                            (abs)        000F44
_TXB0IE                              (abs)        007D1A
_TXB0IF                              (abs)        007D22
_TXB0SIDH                            (abs)        000F41
_TXB0SIDL                            (abs)        000F42
_TickCount                           bssBANK0     000094
_Timer2PostFunc                      smallconst   000321
_XmitData                            text12       000F20
__CFG_BOREN$OFF                      (abs)        000000
__CFG_MCLRE$ON                       (abs)        000000
__CFG_OSC$IRCIO67                    (abs)        000000
__CFG_PBADEN$OFF                     (abs)        000000
__CFG_PWRT$OFF                       (abs)        000000
__CFG_WDT$OFF                        (abs)        000000
__HRAM                               (abs)        000000
__HW_Process_Pending_Ints            text4        0014FC
__HW_Timer_Init                      text36       0014C4
__HW_Timer_Init@Rate                 cstackBANK0  0000BC
__Habs1                              abs1         000000
__Hbank0                             bank0        000000
__Hbank1                             bank1        000000
__Hbank2                             bank2        000000
__Hbigbss                            bigbss       000000
__Hbigdata                           bigdata      000000
__Hbigram                            bigram       000000
__Hbss                               bss          000000
__HbssBANK0                          bssBANK0     000000
__HbssCOMRAM                         bssCOMRAM    000000
__Hcinit                             cinit        000000
__Hclrtext                           clrtext      000000
__Hcomram                            comram       000000
__Hconfig                            config       30000E
__Hconst                             const        000000
__HcstackBANK0                       cstackBANK0  000000
__HcstackCOMRAM                      cstackCOMRAM 000000
__Hdata                              data         000000
__Heeprom_data                       eeprom_data  000000
__Hend_init                          end_init     00001A
__Hfarbss                            farbss       000000
__Hfardata                           fardata      000000
__Hibigdata                          ibigdata     000000
__Hidata                             idata        000000
__Hidloc                             idloc        200008
__Hifardata                          ifardata     000000
__Hinit                              init         000016
__Hintcode                           intcode      000016
__Hintcode_body                      intcode_body 000000
__Hintcodelo                         intcodelo    000016
__Hintentry                          intentry     000000
__Hintret                            intret       000000
__Hintsave_regs                      intsave_regs 000000
__Hirdata                            irdata       000000
__Hmediumconst                       mediumconst  000000
__HnvFARRAM                          nvFARRAM     000000
__Hnvbit                             nvbit        000000
__Hnvrram                            nvrram       000000
__Hparam                             rparam       000000
__Hpowerup                           powerup      000016
__Hram                               ram          000000
__Hramtop                            ramtop       000300
__Hrbit                              rbit         000000
__Hrbss                              rbss         000000
__Hrdata                             rdata        000000
__Hreset_vec                         reset_vec    000004
__Hrparam                            rparam       000000
__Hsfr                               sfr          000000
__Hsmallconst                        smallconst   0003C6
__Hspace_0                           (abs)        30000E
__Hspace_1                           (abs)        0000E8
__Hspace_2                           (abs)        000000
__Hstack                             stack        000000
__Hstruct                            struct       000000
__Htemp                              temp         00003F
__Htext                              text         000000
__Htext0                             text0        000000
__Htext1                             text1        000000
__Htext10                            text10       000000
__Htext11                            text11       000000
__Htext12                            text12       000000
__Htext13                            text13       000000
__Htext14                            text14       000000
__Htext15                            text15       000000
__Htext16                            text16       000000
__Htext17                            text17       000000
__Htext18                            text18       000000
__Htext19                            text19       000000
__Htext2                             text2        000000
__Htext20                            text20       000000
__Htext21                            text21       000000
__Htext22                            text22       000000
__Htext23                            text23       000000
__Htext24                            text24       000000
__Htext25                            text25       000000
__Htext26                            text26       000000
__Htext27                            text27       000000
__Htext28                            text28       000000
__Htext29                            text29       000000
__Htext3                             text3        000000
__Htext30                            text30       000000
__Htext31                            text31       000000
__Htext32                            text32       000000
__Htext33                            text33       000000
__Htext34                            text34       000000
__Htext35                            text35       000000
__Htext36                            text36       000000
__Htext37                            text37       000000
__Htext39                            text39       000000
__Htext4                             text4        000000
__Htext40                            text40       000000
__Htext41                            text41       000000
__Htext42                            text42       000000
__Htext43                            text43       000000
__Htext44                            text44       000000
__Htext45                            text45       000000
__Htext46                            text46       000000
__Htext47                            text47       000000
__Htext48                            text48       000000
__Htext49                            text49       000000
__Htext5                             text5        000000
__Htext50                            text50       000000
__Htext6                             text6        000000
__Htext7                             text7        000000
__Htext8                             text8        000000
__Htext9                             text9        000000
__LRAM                               (abs)        000001
__Labs1                              abs1         000000
__Lbank0                             bank0        000000
__Lbank1                             bank1        000000
__Lbank2                             bank2        000000
__Lbigbss                            bigbss       000000
__Lbigdata                           bigdata      000000
__Lbigram                            bigram       000000
__Lbss                               bss          000000
__LbssBANK0                          bssBANK0     000000
__LbssCOMRAM                         bssCOMRAM    000000
__Lcinit                             cinit        000000
__Lclrtext                           clrtext      000000
__Lcomram                            comram       000000
__Lconfig                            config       300000
__Lconst                             const        000000
__LcstackBANK0                       cstackBANK0  000000
__LcstackCOMRAM                      cstackCOMRAM 000000
__Ldata                              data         000000
__Leeprom_data                       eeprom_data  000000
__Lend_init                          end_init     000016
__Lfarbss                            farbss       000000
__Lfardata                           fardata      000000
__Libigdata                          ibigdata     000000
__Lidata                             idata        000000
__Lidloc                             idloc        200000
__Lifardata                          ifardata     000000
__Linit                              init         000016
__Lintcode                           intcode      000008
__Lintcode_body                      intcode_body 000000
__Lintcodelo                         intcodelo    000016
__Lintentry                          intentry     000000
__Lintret                            intret       000000
__Lintsave_regs                      intsave_regs 000000
__Lirdata                            irdata       000000
__Lmediumconst                       mediumconst  000000
__LnvFARRAM                          nvFARRAM     000000
__Lnvbit                             nvbit        000000
__Lnvrram                            nvrram       000000
__Lparam                             rparam       000000
__Lpowerup                           powerup      000016
__Lram                               ram          000000
__Lramtop                            ramtop       000300
__Lrbit                              rbit         000000
__Lrbss                              rbss         000000
__Lrdata                             rdata        000000
__Lreset_vec                         reset_vec    000000
__Lrparam                            rparam       000000
__Lsfr                               sfr          000000
__Lsmallconst                        smallconst   000300
__Lspace_0                           (abs)        000000
__Lspace_1                           (abs)        000000
__Lspace_2                           (abs)        000000
__Lstack                             stack        000000
__Lstruct                            struct       000000
__Ltemp                              temp         00003E
__Ltext                              text         000000
__Ltext0                             text0        000000
__Ltext1                             text1        000000
__Ltext10                            text10       000000
__Ltext11                            text11       000000
__Ltext12                            text12       000000
__Ltext13                            text13       000000
__Ltext14                            text14       000000
__Ltext15                            text15       000000
__Ltext16                            text16       000000
__Ltext17                            text17       000000
__Ltext18                            text18       000000
__Ltext19                            text19       000000
__Ltext2                             text2        000000
__Ltext20                            text20       000000
__Ltext21                            text21       000000
__Ltext22                            text22       000000
__Ltext23                            text23       000000
__Ltext24                            text24       000000
__Ltext25                            text25       000000
__Ltext26                            text26       000000
__Ltext27                            text27       000000
__Ltext28                            text28       000000
__Ltext29                            text29       000000
__Ltext3                             text3        000000
__Ltext30                            text30       000000
__Ltext31                            text31       000000
__Ltext32                            text32       000000
__Ltext33                            text33       000000
__Ltext34                            text34       000000
__Ltext35                            text35       000000
__Ltext36                            text36       000000
__Ltext37                            text37       000000
__Ltext39                            text39       000000
__Ltext4                             text4        000000
__Ltext40                            text40       000000
__Ltext41                            text41       000000
__Ltext42                            text42       000000
__Ltext43                            text43       000000
__Ltext44                            text44       000000
__Ltext45                            text45       000000
__Ltext46                            text46       000000
__Ltext47                            text47       000000
__Ltext48                            text48       000000
__Ltext49                            text49       000000
__Ltext5                             text5        000000
__Ltext50                            text50       000000
__Ltext6                             text6        000000
__Ltext7                             text7        000000
__Ltext8                             text8        000000
__Ltext9                             text9        000000
__PRIMASK_temp                       bssCOMRAM    00003C
__S0                                 (abs)        30000E
__S1                                 (abs)        0000E8
__S2                                 (abs)        000000
___awmod                             text34       000BC4
___awmod@counter                     cstackBANK0  0000C0
___awmod@dividend                    cstackBANK0  0000BC
___awmod@divisor                     cstackBANK0  0000BE
___awmod@sign                        cstackBANK0  0000C1
___inthi_sp                          stack        000000
___intlo_sp                          stack        000000
___lbmod                             text20       0012D6
___lbmod@counter                     cstackBANK0  0000BE
___lbmod@dividend                    cstackBANK0  0000BD
___lbmod@divisor                     cstackBANK0  0000BC
___lbmod@rem                         cstackBANK0  0000BF
___param_bank                        (abs)        000010
___rparam_used                       (abs)        000001
___sp                                stack        000000
___wmul                              text33       001356
___wmul@multiplicand                 cstackBANK0  0000C4
___wmul@multiplier                   cstackBANK0  0000C2
___wmul@product                      cstackBANK0  0000C6
__accesstop                          (abs)        000060
__activetblptr                       (abs)        000002
__end_of_AnalogISR                   text43       000E1C
__end_of_BitNum2SetMask              smallconst   000321
__end_of_BusErrorResponse            text42       0015A0
__end_of_CanErrorResponse            text41       00159E
__end_of_CanRCVResponse              text40       00158A
__end_of_CanXmitResponse             text39       001596
__end_of_Check4Keystroke             text22       00159A
__end_of_CheckButtonEvents           text23       0011D2
__end_of_DistList00                  smallconst   00036B
__end_of_ES_CheckUserEvents          text21       0012D6
__end_of_ES_DeQueue                  text19       0004EE
__end_of_ES_EnQueueFIFO              text32       0008C6
__end_of_ES_EventList                smallconst   000369
__end_of_ES_GetMSBitSet              text8        000BC4
__end_of_ES_InitQueue                text37       001356
__end_of_ES_Initialize               text24       0007E4
__end_of_ES_PostAll                  text17       001014
__end_of_ES_PostToService            text31       00108A
__end_of_ES_Run                      text3        0006F8
__end_of_ES_Timer_Init               text35       001562
__end_of_ES_Timer_InitTimer          text30       000F20
__end_of_ES_Timer_Tick_Resp          text5        000604
__end_of_EventQueues                 smallconst   000365
__end_of_GetBrightness               text14       001582
__end_of_GetInputLine                text29       001590
__end_of_GetLocation                 text13       001578
__end_of_ISR                         intcode_body 000A6C
__end_of_InitAnalogHW                text18       001478
__end_of_InitAnalogService           text25       0013F0
__end_of_InitButtonHW                text28       00156E
__end_of_InitCanHardware             text16       000EA0
__end_of_InitCan_XmitService         text26       001420
__end_of_InitPins                    text15       0014FC
__end_of_InitializeButtonDebounce    text27       00144E
__end_of_Nybble2MSBitNum             smallconst   000350
__end_of_PostAnalogService           text7        00153E
__end_of_PostButtonDebounceSM        text6        001528
__end_of_PostCan_XmitService         text45       001554
__end_of_RunAnalogService            text9        00128C
__end_of_RunButtonDebounceSM         text10       000D00
__end_of_RunCan_XmitService          text11       00099E
__end_of_ServDescList                smallconst   00035C
__end_of_Timer2PostFunc              smallconst   000341
__end_of_XmitData                    text12       000F9C
__end_of__HW_Process_Pending_Ints    text4        001512
__end_of__HW_Timer_Init              text36       0014E2
__end_of___awmod                     text34       000C66
__end_of___lbmod                     text20       00131A
__end_of___wmul                      text33       00138C
__end_of__initialization             cinit        001490
__end_of_main                        text0        000D94
__end_of_printf                      text1        0013C0
__end_of_putch                       text2        00159C
__end_ofi2_ES_EnQueueFIFO            text47       000B20
__end_ofi2_ES_PostToService          text46       00123C
__end_ofi2_ES_Timer_InitTimer        text44       001168
__end_ofi2___awmod                   text49       0010FA
__end_ofi2___wmul                    text48       0014C4
__initialization                     cinit        001478
__mediumconst                        mediumconst  000000
__pbssBANK0                          bssBANK0     000060
__pbssCOMRAM                         bssCOMRAM    000036
__pcinit                             cinit        001478
__pcstackBANK0                       cstackBANK0  0000BC
__pcstackCOMRAM                      cstackCOMRAM 000001
__pintcode                           intcode      000008
__pintcode_body                      intcode_body 00099E
__psmallconst                        smallconst   000300
__ptext0                             text0        000D00
__ptext1                             text1        00138C
__ptext10                            text10       000C66
__ptext11                            text11       0008C6
__ptext12                            text12       000F20
__ptext13                            text13       00156E
__ptext14                            text14       001578
__ptext15                            text15       0014E2
__ptext16                            text16       000E1C
__ptext17                            text17       000F9C
__ptext18                            text18       00144E
__ptext19                            text19       0003C6
__ptext2                             text2        00159A
__ptext20                            text20       0012D6
__ptext21                            text21       00128C
__ptext22                            text22       001596
__ptext23                            text23       001168
__ptext24                            text24       0006F8
__ptext25                            text25       0013C0
__ptext26                            text26       0013F0
__ptext27                            text27       001420
__ptext28                            text28       001562
__ptext29                            text29       00158A
__ptext3                             text3        000604
__ptext30                            text30       000EA0
__ptext31                            text31       001014
__ptext32                            text32       0007E4
__ptext33                            text33       001356
__ptext34                            text34       000BC4
__ptext35                            text35       001554
__ptext36                            text36       0014C4
__ptext37                            text37       00131A
__ptext39                            text39       001590
__ptext4                             text4        0014FC
__ptext40                            text40       001582
__ptext41                            text41       00159C
__ptext42                            text42       00159E
__ptext43                            text43       000D94
__ptext44                            text44       0010FA
__ptext45                            text45       00153E
__ptext46                            text46       0011D2
__ptext47                            text47       000A6C
__ptext48                            text48       00149E
__ptext49                            text49       00108A
__ptext5                             text5        0004EE
__ptext50                            text50       000000
__ptext6                             text6        001512
__ptext7                             text7        001528
__ptext8                             text8        000B20
__ptext9                             text9        00123C
__ramtop                             ramtop       000300
__size_of_AnalogISR                  (abs)        000000
__size_of_BusErrorResponse           (abs)        000000
__size_of_CanErrorResponse           (abs)        000000
__size_of_CanRCVResponse             (abs)        000000
__size_of_CanXmitResponse            (abs)        000000
__size_of_Check4Keystroke            (abs)        000000
__size_of_CheckButtonEvents          (abs)        000000
__size_of_ES_CheckUserEvents         (abs)        000000
__size_of_ES_DeQueue                 (abs)        000000
__size_of_ES_EnQueueFIFO             (abs)        000000
__size_of_ES_GetMSBitSet             (abs)        000000
__size_of_ES_InitQueue               (abs)        000000
__size_of_ES_Initialize              (abs)        000000
__size_of_ES_PostAll                 (abs)        000000
__size_of_ES_PostToService           (abs)        000000
__size_of_ES_Run                     (abs)        000000
__size_of_ES_Timer_Init              (abs)        000000
__size_of_ES_Timer_InitTimer         (abs)        000000
__size_of_ES_Timer_Tick_Resp         (abs)        000000
__size_of_GetBrightness              (abs)        000000
__size_of_GetInputLine               (abs)        000000
__size_of_GetLocation                (abs)        000000
__size_of_ISR                        (abs)        000000
__size_of_InitAnalogHW               (abs)        000000
__size_of_InitAnalogService          (abs)        000000
__size_of_InitButtonHW               (abs)        000000
__size_of_InitCanHardware            (abs)        000000
__size_of_InitCan_XmitService        (abs)        000000
__size_of_InitPins                   (abs)        000000
__size_of_InitializeButtonDebounce   (abs)        000000
__size_of_PostAnalogService          (abs)        000000
__size_of_PostButtonDebounceSM       (abs)        000000
__size_of_PostCan_XmitService        (abs)        000000
__size_of_RunAnalogService           (abs)        000000
__size_of_RunButtonDebounceSM        (abs)        000000
__size_of_RunCan_XmitService         (abs)        000000
__size_of_XmitData                   (abs)        000000
__size_of__HW_Process_Pending_Ints   (abs)        000000
__size_of__HW_Timer_Init             (abs)        000000
__size_of___awmod                    (abs)        000000
__size_of___lbmod                    (abs)        000000
__size_of___wmul                     (abs)        000000
__size_of_main                       (abs)        000000
__size_of_printf                     (abs)        000000
__size_of_putch                      (abs)        000000
__size_ofi2_ES_EnQueueFIFO           (abs)        000000
__size_ofi2_ES_PostToService         (abs)        000000
__size_ofi2_ES_Timer_InitTimer       (abs)        000000
__size_ofi2___awmod                  (abs)        000000
__size_ofi2___wmul                   (abs)        000000
__smallconst                         smallconst   000300
_main                                text0        000D00
_printf                              text1        00138C
_putch                               text2        00159A
btemp                                temp         00003E
end_of_initialization                cinit        001490
i2ES_EnQueueFIFO@Event2Add           cstackCOMRAM 00000F
i2ES_EnQueueFIFO@SaveCrit            cstackCOMRAM 000015
i2ES_EnQueueFIFO@pBlock              cstackCOMRAM 00000D
i2ES_EnQueueFIFO@pThisQueue          cstackCOMRAM 000016
i2ES_PostToService@TheEvent          cstackCOMRAM 000018
i2ES_PostToService@WhichService      cstackCOMRAM 00001D
i2ES_Timer_InitTimer@NewTime         cstackCOMRAM 000001
i2ES_Timer_InitTimer@Num             cstackCOMRAM 000005
i2_ES_EnQueueFIFO                    text47       000A6C
i2_ES_PostToService                  text46       0011D2
i2_ES_Timer_InitTimer                text44       0010FA
i2___awmod                           text49       00108A
i2___awmod@counter                   cstackCOMRAM 000005
i2___awmod@dividend                  cstackCOMRAM 000001
i2___awmod@divisor                   cstackCOMRAM 000003
i2___awmod@sign                      cstackCOMRAM 000006
i2___wmul                            text48       00149E
i2___wmul@multiplicand               cstackCOMRAM 000009
i2___wmul@multiplier                 cstackCOMRAM 000007
i2___wmul@product                    cstackCOMRAM 00000B
int$flags                            temp         00003E
int_func                             intcode_body 00099E
intlevel0                            text         000000
intlevel1                            text         000000
intlevel2                            text         000000
intlevel3                            text         000000
main@ErrorType                       cstackBANK0  0000E7
printf@ap                            cstackBANK0  0000BE
printf@c                             cstackBANK0  0000C0
printf@f                             cstackBANK0  0000BC
stackhi                              (abs)        0002FF
stacklo                              (abs)        0000E8
start                                init         000016
start_initialization                 cinit        001478


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 25 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  ErrorType       1   43[BANK0 ] enum E15645
 Return value:  Size  Location     Type
                  2  372[None  ] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels required when called:   13
 This function calls:
		_ES_Initialize
		_ES_Run
		_printf
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _printf *****************
 Defined at:
		line 464 in file "/Applications/microchip/xc8/v1.38/sources/common/doprnt.c"
 Parameters:    Size  Location     Type
  f               2    0[BANK0 ] PTR const unsigned char 
		 -> STR_4(15), STR_3(23), STR_2(24), STR_1(27), 
 Auto vars:     Size  Location     Type
  tmpval          4    0        struct .
  cp              3    0        PTR const unsigned char 
  ap              2    2[BANK0 ] PTR void [1]
		 -> ?_printf(2), 
  len             2    0        unsigned int 
  val             2    0        unsigned int 
  c               1    4[BANK0 ] char 
  flag            1    0        unsigned char 
  prec            1    0        char 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       3       0       0
      Temps:          0       0       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_putch
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _putch *****************
 Defined at:
		line 7 in file "/Applications/microchip/xc8/v1.38/sources/common/putch.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1    0[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_printf
 This function uses a non-reentrant model


 *************** function _ES_Run *****************
 Defined at:
		line 277 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  HighestPrior    1   42[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E15493
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       4       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   12
 This function calls:
		_ES_CheckUserEvents
		_ES_DeQueue
		_ES_GetMSBitSet
		_RunAnalogService
		_RunButtonDebounceSM
		_RunCan_XmitService
		__HW_Process_Pending_Ints
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function __HW_Process_Pending_Ints *****************
 Defined at:
		line 225 in file "ES_Port.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   11
 This function calls:
		_ES_Timer_Tick_Resp
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _ES_Timer_Tick_Resp *****************
 Defined at:
		line 284 in file "ES_Timers.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       4       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		Absolute function
		_ES_GetMSBitSet
		_PostAnalogService
		_PostButtonDebounceSM
 This function is called by:
		__HW_Process_Pending_Ints
 This function uses a non-reentrant model


 *************** function _PostButtonDebounceSM *****************
 Defined at:
		line 75 in file "Button.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   29[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_ES_PostToService
 This function is called by:
		_CheckButtonEvents
		_ES_Timer_Tick_Resp
 This function uses a non-reentrant model


 *************** function _PostAnalogService *****************
 Defined at:
		line 47 in file "Analog_Service.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   29[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_ES_PostToService
 This function is called by:
		_ES_Timer_Tick_Resp
 This function uses a non-reentrant model


 *************** function _ES_GetMSBitSet *****************
 Defined at:
		line 79 in file "ES_LookupTables.c"
 Parameters:    Size  Location     Type
  Val2Check       2    0[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  LoopCntr        1    9[BANK0 ] char 
  Nybble2Test     1    8[BANK0 ] unsigned char 
  ReturnVal       1    7[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       3       0       0
      Temps:          0       5       0       0
      Totals:         0      10       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ES_Run
		_ES_Timer_Tick_Resp
 This function uses a non-reentrant model


 *************** function _RunAnalogService *****************
 Defined at:
		line 52 in file "Analog_Service.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   29[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  ReturnEvent     3   32[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  3   29[BANK0 ] struct ES_Event_t
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       3       0       0
      Temps:          0       0       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_ES_Timer_InitTimer
		_InitAnalogHW
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _RunButtonDebounceSM *****************
 Defined at:
		line 83 in file "Button.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   29[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  ReturnEvent     3   32[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  3   29[BANK0 ] struct ES_Event_t
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       3       0       0
      Temps:          0       0       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_ES_PostAll
		_ES_Timer_InitTimer
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _RunCan_XmitService *****************
 Defined at:
		line 137 in file "Can_XmitService.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   29[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  ReturnEvent     3   34[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  3   29[BANK0 ] struct ES_Event_t
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       3       0       0
      Temps:          0       2       0       0
      Totals:         0       8       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_InitCanHardware
		_InitPins
		_XmitData
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _XmitData *****************
 Defined at:
		line 296 in file "Can_XmitService.c"
 Parameters:    Size  Location     Type
  DataByte        1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  DataByte        1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_GetBrightness
		_GetLocation
 This function is called by:
		_RunCan_XmitService
 This function uses a non-reentrant model


 *************** function _GetLocation *****************
 Defined at:
		line 72 in file "Analog_Service.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2    0[BANK0 ] unsigned int 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_XmitData
 This function uses a non-reentrant model


 *************** function _GetBrightness *****************
 Defined at:
		line 67 in file "Analog_Service.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2    0[BANK0 ] unsigned int 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_XmitData
 This function uses a non-reentrant model


 *************** function _InitPins *****************
 Defined at:
		line 280 in file "Can_XmitService.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_RunCan_XmitService
 This function uses a non-reentrant model


 *************** function _InitCanHardware *****************
 Defined at:
		line 212 in file "Can_XmitService.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_RunCan_XmitService
 This function uses a non-reentrant model


 *************** function _ES_PostAll *****************
 Defined at:
		line 318 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   23[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  i               1   28[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       1       0       0
      Temps:          0       2       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_ES_EnQueueFIFO
 This function is called by:
		_RunButtonDebounceSM
 This function uses a non-reentrant model


 *************** function _InitAnalogHW *****************
 Defined at:
		line 95 in file "Analog_Service.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_RunAnalogService
 This function uses a non-reentrant model


 *************** function _ES_DeQueue *****************
 Defined at:
		line 164 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          2   12[BANK0 ] PTR struct ES_Event_t
		 -> Queue2(12), Queue1(12), Queue0(12), 
  pReturnEvent    2   14[BANK0 ] PTR struct ES_Event_t
		 -> ES_Run@ThisEvent(3), ES_RecallEvents@RecalledEvent(3), 
 Auto vars:     Size  Location     Type
  pThisQueue      2   20[BANK0 ] PTR struct .
		 -> Queue2(12), Queue1(12), Queue0(12), 
  NumLeft         1   19[BANK0 ] unsigned char 
  SaveCrit        1   18[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       4       0       0
      Temps:          0       2       0       0
      Totals:         0      10       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		___lbmod
		___wmul
 This function is called by:
		_ES_Run
		_ES_RecallEvents
 This function uses a non-reentrant model


 *************** function ___lbmod *****************
 Defined at:
		line 4 in file "/Applications/microchip/xc8/v1.38/sources/common/lbmod.c"
 Parameters:    Size  Location     Type
  dividend        1    wreg     unsigned char 
  divisor         1    0[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  dividend        1    1[BANK0 ] unsigned char 
  rem             1    3[BANK0 ] unsigned char 
  counter         1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       3       0       0
      Temps:          0       0       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ES_DeQueue
 This function uses a non-reentrant model


 *************** function _ES_CheckUserEvents *****************
 Defined at:
		line 46 in file "ES_CheckEvents.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1   37[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   11
 This function calls:
		_Check4Keystroke
		_CheckButtonEvents
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _Check4Keystroke *****************
 Defined at:
		line 62 in file "EventCheckers.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ES_CheckUserEvents
 This function uses a non-reentrant model


 *************** function _CheckButtonEvents *****************
 Defined at:
		line 44 in file "Button.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  ThisEvent       3   33[BANK0 ] struct ES_Event_t
  CurrentButto    1   36[BANK0 ] unsigned char 
  ReturnVal       1   32[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       5       0       0
      Temps:          0       0       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		_GetInputLine
		_PostButtonDebounceSM
 This function is called by:
		_ES_CheckUserEvents
 This function uses a non-reentrant model


 *************** function _ES_Initialize *****************
 Defined at:
		line 242 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
  NewRate         2   33[BANK0 ] enum E15422
 Auto vars:     Size  Location     Type
  i               1   35[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E15493
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		_ES_InitQueue
		_ES_Timer_Init
		_InitAnalogService
		_InitCan_XmitService
		_InitializeButtonDebounce
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _InitAnalogService *****************
 Defined at:
		line 31 in file "Analog_Service.c"
 Parameters:    Size  Location     Type
  Priority        1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  Priority        1   32[BANK0 ] unsigned char 
  ThisEvent       3   29[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       4       0       0
      Temps:          0       0       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_ES_PostToService
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function _InitCan_XmitService *****************
 Defined at:
		line 86 in file "Can_XmitService.c"
 Parameters:    Size  Location     Type
  Priority        1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  Priority        1   32[BANK0 ] unsigned char 
  ThisEvent       3   29[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       4       0       0
      Temps:          0       0       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_ES_PostToService
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function _InitializeButtonDebounce *****************
 Defined at:
		line 27 in file "Button.c"
 Parameters:    Size  Location     Type
  Priority        1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  Priority        1    5[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_ES_Timer_InitTimer
		_GetInputLine
		_InitButtonHW
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function _InitButtonHW *****************
 Defined at:
		line 134 in file "Button.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_InitializeButtonDebounce
 This function uses a non-reentrant model


 *************** function _GetInputLine *****************
 Defined at:
		line 129 in file "Button.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_InitializeButtonDebounce
		_CheckButtonEvents
 This function uses a non-reentrant model


 *************** function _ES_Timer_InitTimer *****************
 Defined at:
		line 229 in file "ES_Timers.c"
 Parameters:    Size  Location     Type
  Num             1    wreg     unsigned char 
  NewTime         2    0[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  Num             1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E15445
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       1       0       0
      Temps:          0       2       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_InitializeButtonDebounce
		_RunButtonDebounceSM
		_RunAnalogService
 This function uses a non-reentrant model


 *************** function _ES_PostToService *****************
 Defined at:
		line 351 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
  WhichService    1    wreg     unsigned char 
  TheEvent        3   23[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  WhichService    1   28[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       1       0       0
      Temps:          0       2       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_ES_EnQueueFIFO
 This function is called by:
		_PostButtonDebounceSM
		_InitCan_XmitService
		_InitAnalogService
		_PostAnalogService
 This function uses a non-reentrant model


 *************** function _ES_EnQueueFIFO *****************
 Defined at:
		line 85 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          2   12[BANK0 ] PTR struct ES_Event_t
		 -> Queue2(12), Queue1(12), Queue0(12), 
  Event2Add       3   14[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  pThisQueue      2   21[BANK0 ] PTR struct .
		 -> Queue2(12), Queue1(12), Queue0(12), 
  SaveCrit        1   20[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       5       0       0
      Locals:         0       3       0       0
      Temps:          0       3       0       0
      Totals:         0      11       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		___awmod
		___wmul
 This function is called by:
		_ES_PostAll
		_ES_PostToService
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "/Applications/microchip/xc8/v1.38/sources/common/Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    6[BANK0 ] unsigned int 
  multiplicand    2    8[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  product         2   10[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  2    6[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       2       0       0
      Temps:          0       0       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ES_EnQueueFIFO
		_ES_DeQueue
		_ES_EnQueueLIFO
 This function uses a non-reentrant model


 *************** function ___awmod *****************
 Defined at:
		line 8 in file "/Applications/microchip/xc8/v1.38/sources/common/awmod.c"
 Parameters:    Size  Location     Type
  dividend        2    0[BANK0 ] int 
  divisor         2    2[BANK0 ] int 
 Auto vars:     Size  Location     Type
  sign            1    5[BANK0 ] unsigned char 
  counter         1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       2       0       0
      Temps:          0       0       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ES_EnQueueFIFO
		i2_ES_EnQueueFIFO
 This function uses a non-reentrant model


 *************** function _ES_Timer_Init *****************
 Defined at:
		line 130 in file "ES_Timers.c"
 Parameters:    Size  Location     Type
  Rate            2    2[BANK0 ] enum E15422
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		__HW_Timer_Init
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function __HW_Timer_Init *****************
 Defined at:
		line 72 in file "ES_Port.c"
 Parameters:    Size  Location     Type
  Rate            2    0[BANK0 ] enum E15412
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ES_Timer_Init
 This function uses a non-reentrant model


 *************** function _ES_InitQueue *****************
 Defined at:
		line 58 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          2    0[BANK0 ] PTR struct ES_Event_t
		 -> Queue2(12), Queue1(12), Queue0(12), 
  BlockSize       1    2[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  pThisQueue      2    3[BANK0 ] PTR struct .
		 -> Queue2(12), Queue1(12), Queue0(12), 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       2       0       0
      Temps:          0       0       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 112 in file "ES_Port.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:         16       0       0       0
      Totals:        16       0       0       0
Total ram usage:       16 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_AnalogISR
		_BusErrorResponse
		_CanErrorResponse
		_CanRCVResponse
		_CanXmitResponse
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model


 *************** function _CanXmitResponse *****************
 Defined at:
		line 187 in file "Can_XmitService.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function _CanRCVResponse *****************
 Defined at:
		line 192 in file "Can_XmitService.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function _CanErrorResponse *****************
 Defined at:
		line 199 in file "Can_XmitService.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function _BusErrorResponse *****************
 Defined at:
		line 204 in file "Can_XmitService.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function _AnalogISR *****************
 Defined at:
		line 77 in file "Analog_Service.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  Event2Post      3   34[COMRAM] struct ES_Event_t
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         3       0       0       0
      Temps:          2       0       0       0
      Totals:         5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_PostCan_XmitService
		i2_ES_Timer_InitTimer
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function i2_ES_Timer_InitTimer *****************
 Defined at:
		line 229 in file "ES_Timers.c"
 Parameters:    Size  Location     Type
  Num             1    wreg     unsigned char 
  NewTime         2    0[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  Num             1    4[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E15445
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         1       0       0       0
      Temps:          2       0       0       0
      Totals:         5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_AnalogISR
 This function uses a non-reentrant model


 *************** function _PostCan_XmitService *****************
 Defined at:
		line 117 in file "Can_XmitService.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   29[COMRAM] struct ES_Event_t
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		i2_ES_PostToService
 This function is called by:
		_AnalogISR
		_PostToList
 This function uses a non-reentrant model


 *************** function i2_ES_PostToService *****************
 Defined at:
		line 351 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
  WhichService    1    wreg     unsigned char 
  TheEvent        3   23[COMRAM] struct ES_Event_t
 Auto vars:     Size  Location     Type
  WhichService    1   28[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         1       0       0       0
      Temps:          2       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		i2_ES_EnQueueFIFO
 This function is called by:
		_PostCan_XmitService
 This function uses a non-reentrant model


 *************** function i2_ES_EnQueueFIFO *****************
 Defined at:
		line 85 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          2   12[COMRAM] PTR struct ES_Event_t
		 -> Queue2(12), Queue1(12), Queue0(12), 
  Event2Add       3   14[COMRAM] struct ES_Event_t
 Auto vars:     Size  Location     Type
  ES_EnQueueFI    2   21[COMRAM] PTR struct .
		 -> Queue2(12), Queue1(12), Queue0(12), 
  ES_EnQueueFI    1   20[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         5       0       0       0
      Locals:         3       0       0       0
      Temps:          3       0       0       0
      Totals:        11       0       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i2___awmod
		i2___wmul
 This function is called by:
		i2_ES_PostToService
 This function uses a non-reentrant model


 *************** function i2___wmul *****************
 Defined at:
		line 15 in file "/Applications/microchip/xc8/v1.38/sources/common/Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    6[COMRAM] unsigned int 
  multiplicand    2    8[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  __wmul          2   10[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  2    6[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		i2_ES_EnQueueFIFO
 This function uses a non-reentrant model


 *************** function i2___awmod *****************
 Defined at:
		line 8 in file "/Applications/microchip/xc8/v1.38/sources/common/awmod.c"
 Parameters:    Size  Location     Type
  dividend        2    0[COMRAM] int 
  divisor         2    2[COMRAM] int 
 Auto vars:     Size  Location     Type
  __awmod         1    5[COMRAM] unsigned char 
  __awmod         1    4[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2    0[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		i2_ES_EnQueueFIFO
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
ES_Queue.c
		_ES_EnQueueFIFO		CODE           	07E4	0000	227
		_ES_DeQueue    		CODE           	03C6	0000	297
		_ES_InitQueue  		CODE           	131A	0000	61

ES_Queue.c estimated size: 585

ES_CheckEvents.c
		_ES_CheckUserEvents		CODE           	128C	0000	75

ES_CheckEvents.c estimated size: 75

/Applications/microchip/xc8/v1.38/sources/common/lbmod.c
		___lbmod       		CODE           	12D6	0000	69

/Applications/microchip/xc8/v1.38/sources/common/lbmod.c estimated size: 69

ES_LookupTables.c
		_ES_GetMSBitSet		CODE           	0B20	0000	165

ES_LookupTables.c estimated size: 165

EventCheckers.c
		_Check4Keystroke		CODE           	1596	0000	5

EventCheckers.c estimated size: 5

/Applications/microchip/xc8/v1.38/sources/common/Umul16.c
		___wmul        		CODE           	1356	0000	55

/Applications/microchip/xc8/v1.38/sources/common/Umul16.c estimated size: 55

Can_XmitService.c
		_InitCan_XmitService		CODE           	13F0	0000	49
		_RunCan_XmitService		CODE           	08C6	0000	217
		_InitPins      		CODE           	14E2	0000	27
		_CanXmitResponse		CODE           	1590	0000	7
		_CanRCVResponse		CODE           	1582	0000	9
		_BusErrorResponse		CODE           	159E	0000	3
		_PostCan_XmitService		CODE           	153E	0000	23
		_XmitData      		CODE           	0F20	0000	125
		_InitCanHardware		CODE           	0E1C	0000	133
		_CanErrorResponse		CODE           	159C	0000	3

Can_XmitService.c estimated size: 596

ES_Framework.c
		_ES_PostAll    		CODE           	0F9C	0000	121
		_ES_PostToService		CODE           	1014	0000	119
		_ES_Run        		CODE           	0604	0000	245
		_ES_Initialize 		CODE           	06F8	0000	237

ES_Framework.c estimated size: 722

Button.c
		_RunButtonDebounceSM		CODE           	0C66	0000	155
		_InitButtonHW  		CODE           	1562	0000	13
		_PostButtonDebounceSM		CODE           	1512	0000	23
		_GetInputLine  		CODE           	158A	0000	7
		_InitializeButtonDebounce		CODE           	1420	0000	47
		_CheckButtonEvents		CODE           	1168	0000	107

Button.c estimated size: 352

Analog_Service.c
		_PostAnalogService		CODE           	1528	0000	23
		_AnalogISR     		CODE           	0D94	0000	137
		_GetBrightness 		CODE           	1578	0000	11
		_GetLocation   		CODE           	156E	0000	11
		_RunAnalogService		CODE           	123C	0000	81
		_InitAnalogHW  		CODE           	144E	0000	43
		_InitAnalogService		CODE           	13C0	0000	49

Analog_Service.c estimated size: 355

shared
		_BitNum2SetMask		SMALLCONST     	0301	0000	33
		_DistList00    		SMALLCONST     	0369	0000	3
		i2_ES_EnQueueFIFO		CODE           	0A6C	0000	181
		_ES_EventList  		SMALLCONST     	0365	0000	5
		i2___wmul      		CODE           	149E	0000	39
		i2_ES_PostToService		CODE           	11D2	0000	107
		_Nybble2MSBitNum		SMALLCONST     	0341	0000	16
		_EventQueues   		SMALLCONST     	035C	0000	10
		__initialization		CODE           	1478	0000	25
		i2___awmod     		CODE           	108A	0000	113
		_Timer2PostFunc		SMALLCONST     	0321	0000	33
		_ServDescList  		SMALLCONST     	0350	0000	13
		i2_ES_Timer_InitTimer		CODE           	10FA	0000	111

shared estimated size: 689

ES_Port.c
		_ISR           		CODE           	0008	0000	221
		__HW_Process_Pending_Ints		CODE           	14FC	0000	23
		__HW_Timer_Init		CODE           	14C4	0000	31

ES_Port.c estimated size: 275

/Applications/microchip/xc8/v1.38/sources/common/awmod.c
		___awmod       		CODE           	0BC4	0000	163

/Applications/microchip/xc8/v1.38/sources/common/awmod.c estimated size: 163

/Applications/microchip/xc8/v1.38/sources/common/putch.c
		_putch         		CODE           	159A	0000	3

/Applications/microchip/xc8/v1.38/sources/common/putch.c estimated size: 3

ES_Timers.c
		_ES_Timer_Init 		CODE           	1554	0000	15
		_ES_Timer_InitTimer		CODE           	0EA0	0000	129
		_ES_Timer_Tick_Resp		CODE           	04EE	0000	279

ES_Timers.c estimated size: 423

main.c
		_main          		CODE           	0D00	0000	149

main.c estimated size: 149

/Applications/microchip/xc8/v1.38/sources/common/doprnt.c
		_printf        		CODE           	138C	0000	53

/Applications/microchip/xc8/v1.38/sources/common/doprnt.c estimated size: 53

