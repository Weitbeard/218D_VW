

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Thu Oct 20 02:07:20 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F1788
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	dabs	1,0x7E,2
    43  0000                     	;# 
    44  0001                     	;# 
    45  0002                     	;# 
    46  0003                     	;# 
    47  0004                     	;# 
    48  0005                     	;# 
    49  0006                     	;# 
    50  0007                     	;# 
    51  0008                     	;# 
    52  0009                     	;# 
    53  000A                     	;# 
    54  000B                     	;# 
    55  000C                     	;# 
    56  000D                     	;# 
    57  000E                     	;# 
    58  0010                     	;# 
    59  0011                     	;# 
    60  0012                     	;# 
    61  0015                     	;# 
    62  0016                     	;# 
    63  0016                     	;# 
    64  0017                     	;# 
    65  0018                     	;# 
    66  0019                     	;# 
    67  001A                     	;# 
    68  001B                     	;# 
    69  001C                     	;# 
    70  008C                     	;# 
    71  008D                     	;# 
    72  008E                     	;# 
    73  0090                     	;# 
    74  0091                     	;# 
    75  0092                     	;# 
    76  0095                     	;# 
    77  0096                     	;# 
    78  0097                     	;# 
    79  0099                     	;# 
    80  009A                     	;# 
    81  009B                     	;# 
    82  009B                     	;# 
    83  009C                     	;# 
    84  009D                     	;# 
    85  009E                     	;# 
    86  010C                     	;# 
    87  010D                     	;# 
    88  010E                     	;# 
    89  0116                     	;# 
    90  0117                     	;# 
    91  011D                     	;# 
    92  018C                     	;# 
    93  018D                     	;# 
    94  018E                     	;# 
    95  0191                     	;# 
    96  0191                     	;# 
    97  0192                     	;# 
    98  0193                     	;# 
    99  0193                     	;# 
   100  0194                     	;# 
   101  0195                     	;# 
   102  0196                     	;# 
   103  0197                     	;# 
   104  0199                     	;# 
   105  019A                     	;# 
   106  019B                     	;# 
   107  019B                     	;# 
   108  019B                     	;# 
   109  019B                     	;# 
   110  019C                     	;# 
   111  019C                     	;# 
   112  019D                     	;# 
   113  019E                     	;# 
   114  019F                     	;# 
   115  020D                     	;# 
   116  0210                     	;# 
   117  0211                     	;# 
   118  0211                     	;# 
   119  0212                     	;# 
   120  0212                     	;# 
   121  0213                     	;# 
   122  0213                     	;# 
   123  0214                     	;# 
   124  0214                     	;# 
   125  0215                     	;# 
   126  0215                     	;# 
   127  0215                     	;# 
   128  0216                     	;# 
   129  0216                     	;# 
   130  0217                     	;# 
   131  0217                     	;# 
   132  0291                     	;# 
   133  0291                     	;# 
   134  0292                     	;# 
   135  0293                     	;# 
   136  0298                     	;# 
   137  0298                     	;# 
   138  0299                     	;# 
   139  029A                     	;# 
   140  0394                     	;# 
   141  0395                     	;# 
   142  0396                     	;# 
   143  0FE4                     	;# 
   144  0FE5                     	;# 
   145  0FE6                     	;# 
   146  0FE7                     	;# 
   147  0FE8                     	;# 
   148  0FE9                     	;# 
   149  0FEA                     	;# 
   150  0FEB                     	;# 
   151  0FED                     	;# 
   152  0FEE                     	;# 
   153  0FEF                     	;# 
   154  0000                     	;# 
   155  0001                     	;# 
   156  0002                     	;# 
   157  0003                     	;# 
   158  0004                     	;# 
   159  0005                     	;# 
   160  0006                     	;# 
   161  0007                     	;# 
   162  0008                     	;# 
   163  0009                     	;# 
   164  000A                     	;# 
   165  000B                     	;# 
   166  000C                     	;# 
   167  000D                     	;# 
   168  000E                     	;# 
   169  0010                     	;# 
   170  0011                     	;# 
   171  0012                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0016                     	;# 
   175  0017                     	;# 
   176  0018                     	;# 
   177  0019                     	;# 
   178  001A                     	;# 
   179  001B                     	;# 
   180  001C                     	;# 
   181  008C                     	;# 
   182  008D                     	;# 
   183  008E                     	;# 
   184  0090                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  0116                     	;# 
   201  0117                     	;# 
   202  011D                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  018E                     	;# 
   206  0191                     	;# 
   207  0191                     	;# 
   208  0192                     	;# 
   209  0193                     	;# 
   210  0193                     	;# 
   211  0194                     	;# 
   212  0195                     	;# 
   213  0196                     	;# 
   214  0197                     	;# 
   215  0199                     	;# 
   216  019A                     	;# 
   217  019B                     	;# 
   218  019B                     	;# 
   219  019B                     	;# 
   220  019B                     	;# 
   221  019C                     	;# 
   222  019C                     	;# 
   223  019D                     	;# 
   224  019E                     	;# 
   225  019F                     	;# 
   226  020D                     	;# 
   227  0210                     	;# 
   228  0211                     	;# 
   229  0211                     	;# 
   230  0212                     	;# 
   231  0212                     	;# 
   232  0213                     	;# 
   233  0213                     	;# 
   234  0214                     	;# 
   235  0214                     	;# 
   236  0215                     	;# 
   237  0215                     	;# 
   238  0215                     	;# 
   239  0216                     	;# 
   240  0216                     	;# 
   241  0217                     	;# 
   242  0217                     	;# 
   243  0291                     	;# 
   244  0291                     	;# 
   245  0292                     	;# 
   246  0293                     	;# 
   247  0298                     	;# 
   248  0298                     	;# 
   249  0299                     	;# 
   250  029A                     	;# 
   251  0394                     	;# 
   252  0395                     	;# 
   253  0396                     	;# 
   254  0FE4                     	;# 
   255  0FE5                     	;# 
   256  0FE6                     	;# 
   257  0FE7                     	;# 
   258  0FE8                     	;# 
   259  0FE9                     	;# 
   260  0FEA                     	;# 
   261  0FEB                     	;# 
   262  0FED                     	;# 
   263  0FEE                     	;# 
   264  0FEF                     	;# 
   265  0000                     	;# 
   266  0001                     	;# 
   267  0002                     	;# 
   268  0003                     	;# 
   269  0004                     	;# 
   270  0005                     	;# 
   271  0006                     	;# 
   272  0007                     	;# 
   273  0008                     	;# 
   274  0009                     	;# 
   275  000A                     	;# 
   276  000B                     	;# 
   277  000C                     	;# 
   278  000D                     	;# 
   279  000E                     	;# 
   280  0010                     	;# 
   281  0011                     	;# 
   282  0012                     	;# 
   283  0015                     	;# 
   284  0016                     	;# 
   285  0016                     	;# 
   286  0017                     	;# 
   287  0018                     	;# 
   288  0019                     	;# 
   289  001A                     	;# 
   290  001B                     	;# 
   291  001C                     	;# 
   292  008C                     	;# 
   293  008D                     	;# 
   294  008E                     	;# 
   295  0090                     	;# 
   296  0091                     	;# 
   297  0092                     	;# 
   298  0095                     	;# 
   299  0096                     	;# 
   300  0097                     	;# 
   301  0099                     	;# 
   302  009A                     	;# 
   303  009B                     	;# 
   304  009B                     	;# 
   305  009C                     	;# 
   306  009D                     	;# 
   307  009E                     	;# 
   308  010C                     	;# 
   309  010D                     	;# 
   310  010E                     	;# 
   311  0116                     	;# 
   312  0117                     	;# 
   313  011D                     	;# 
   314  018C                     	;# 
   315  018D                     	;# 
   316  018E                     	;# 
   317  0191                     	;# 
   318  0191                     	;# 
   319  0192                     	;# 
   320  0193                     	;# 
   321  0193                     	;# 
   322  0194                     	;# 
   323  0195                     	;# 
   324  0196                     	;# 
   325  0197                     	;# 
   326  0199                     	;# 
   327  019A                     	;# 
   328  019B                     	;# 
   329  019B                     	;# 
   330  019B                     	;# 
   331  019B                     	;# 
   332  019C                     	;# 
   333  019C                     	;# 
   334  019D                     	;# 
   335  019E                     	;# 
   336  019F                     	;# 
   337  020D                     	;# 
   338  0210                     	;# 
   339  0211                     	;# 
   340  0211                     	;# 
   341  0212                     	;# 
   342  0212                     	;# 
   343  0213                     	;# 
   344  0213                     	;# 
   345  0214                     	;# 
   346  0214                     	;# 
   347  0215                     	;# 
   348  0215                     	;# 
   349  0215                     	;# 
   350  0216                     	;# 
   351  0216                     	;# 
   352  0217                     	;# 
   353  0217                     	;# 
   354  0291                     	;# 
   355  0291                     	;# 
   356  0292                     	;# 
   357  0293                     	;# 
   358  0298                     	;# 
   359  0298                     	;# 
   360  0299                     	;# 
   361  029A                     	;# 
   362  0394                     	;# 
   363  0395                     	;# 
   364  0396                     	;# 
   365  0FE4                     	;# 
   366  0FE5                     	;# 
   367  0FE6                     	;# 
   368  0FE7                     	;# 
   369  0FE8                     	;# 
   370  0FE9                     	;# 
   371  0FEA                     	;# 
   372  0FEB                     	;# 
   373  0FED                     	;# 
   374  0FEE                     	;# 
   375  0FEF                     	;# 
   376  0000                     	;# 
   377  0001                     	;# 
   378  0002                     	;# 
   379  0003                     	;# 
   380  0004                     	;# 
   381  0005                     	;# 
   382  0006                     	;# 
   383  0007                     	;# 
   384  0008                     	;# 
   385  0009                     	;# 
   386  000A                     	;# 
   387  000B                     	;# 
   388  000C                     	;# 
   389  000D                     	;# 
   390  000E                     	;# 
   391  0010                     	;# 
   392  0011                     	;# 
   393  0012                     	;# 
   394  0015                     	;# 
   395  0016                     	;# 
   396  0016                     	;# 
   397  0017                     	;# 
   398  0018                     	;# 
   399  0019                     	;# 
   400  001A                     	;# 
   401  001B                     	;# 
   402  001C                     	;# 
   403  008C                     	;# 
   404  008D                     	;# 
   405  008E                     	;# 
   406  0090                     	;# 
   407  0091                     	;# 
   408  0092                     	;# 
   409  0095                     	;# 
   410  0096                     	;# 
   411  0097                     	;# 
   412  0099                     	;# 
   413  009A                     	;# 
   414  009B                     	;# 
   415  009B                     	;# 
   416  009C                     	;# 
   417  009D                     	;# 
   418  009E                     	;# 
   419  010C                     	;# 
   420  010D                     	;# 
   421  010E                     	;# 
   422  0116                     	;# 
   423  0117                     	;# 
   424  011D                     	;# 
   425  018C                     	;# 
   426  018D                     	;# 
   427  018E                     	;# 
   428  0191                     	;# 
   429  0191                     	;# 
   430  0192                     	;# 
   431  0193                     	;# 
   432  0193                     	;# 
   433  0194                     	;# 
   434  0195                     	;# 
   435  0196                     	;# 
   436  0197                     	;# 
   437  0199                     	;# 
   438  019A                     	;# 
   439  019B                     	;# 
   440  019B                     	;# 
   441  019B                     	;# 
   442  019B                     	;# 
   443  019C                     	;# 
   444  019C                     	;# 
   445  019D                     	;# 
   446  019E                     	;# 
   447  019F                     	;# 
   448  020D                     	;# 
   449  0210                     	;# 
   450  0211                     	;# 
   451  0211                     	;# 
   452  0212                     	;# 
   453  0212                     	;# 
   454  0213                     	;# 
   455  0213                     	;# 
   456  0214                     	;# 
   457  0214                     	;# 
   458  0215                     	;# 
   459  0215                     	;# 
   460  0215                     	;# 
   461  0216                     	;# 
   462  0216                     	;# 
   463  0217                     	;# 
   464  0217                     	;# 
   465  0291                     	;# 
   466  0291                     	;# 
   467  0292                     	;# 
   468  0293                     	;# 
   469  0298                     	;# 
   470  0298                     	;# 
   471  0299                     	;# 
   472  029A                     	;# 
   473  0394                     	;# 
   474  0395                     	;# 
   475  0396                     	;# 
   476  0FE4                     	;# 
   477  0FE5                     	;# 
   478  0FE6                     	;# 
   479  0FE7                     	;# 
   480  0FE8                     	;# 
   481  0FE9                     	;# 
   482  0FEA                     	;# 
   483  0FEB                     	;# 
   484  0FED                     	;# 
   485  0FEE                     	;# 
   486  0FEF                     	;# 
   487  0000                     	;# 
   488  0001                     	;# 
   489  0002                     	;# 
   490  0003                     	;# 
   491  0004                     	;# 
   492  0005                     	;# 
   493  0006                     	;# 
   494  0007                     	;# 
   495  0008                     	;# 
   496  0009                     	;# 
   497  000A                     	;# 
   498  000B                     	;# 
   499  000C                     	;# 
   500  000D                     	;# 
   501  000E                     	;# 
   502  0010                     	;# 
   503  0011                     	;# 
   504  0012                     	;# 
   505  0015                     	;# 
   506  0016                     	;# 
   507  0016                     	;# 
   508  0017                     	;# 
   509  0018                     	;# 
   510  0019                     	;# 
   511  001A                     	;# 
   512  001B                     	;# 
   513  001C                     	;# 
   514  008C                     	;# 
   515  008D                     	;# 
   516  008E                     	;# 
   517  0090                     	;# 
   518  0091                     	;# 
   519  0092                     	;# 
   520  0095                     	;# 
   521  0096                     	;# 
   522  0097                     	;# 
   523  0099                     	;# 
   524  009A                     	;# 
   525  009B                     	;# 
   526  009B                     	;# 
   527  009C                     	;# 
   528  009D                     	;# 
   529  009E                     	;# 
   530  010C                     	;# 
   531  010D                     	;# 
   532  010E                     	;# 
   533  0116                     	;# 
   534  0117                     	;# 
   535  011D                     	;# 
   536  018C                     	;# 
   537  018D                     	;# 
   538  018E                     	;# 
   539  0191                     	;# 
   540  0191                     	;# 
   541  0192                     	;# 
   542  0193                     	;# 
   543  0193                     	;# 
   544  0194                     	;# 
   545  0195                     	;# 
   546  0196                     	;# 
   547  0197                     	;# 
   548  0199                     	;# 
   549  019A                     	;# 
   550  019B                     	;# 
   551  019B                     	;# 
   552  019B                     	;# 
   553  019B                     	;# 
   554  019C                     	;# 
   555  019C                     	;# 
   556  019D                     	;# 
   557  019E                     	;# 
   558  019F                     	;# 
   559  020D                     	;# 
   560  0210                     	;# 
   561  0211                     	;# 
   562  0211                     	;# 
   563  0212                     	;# 
   564  0212                     	;# 
   565  0213                     	;# 
   566  0213                     	;# 
   567  0214                     	;# 
   568  0214                     	;# 
   569  0215                     	;# 
   570  0215                     	;# 
   571  0215                     	;# 
   572  0216                     	;# 
   573  0216                     	;# 
   574  0217                     	;# 
   575  0217                     	;# 
   576  0291                     	;# 
   577  0291                     	;# 
   578  0292                     	;# 
   579  0293                     	;# 
   580  0298                     	;# 
   581  0298                     	;# 
   582  0299                     	;# 
   583  029A                     	;# 
   584  0394                     	;# 
   585  0395                     	;# 
   586  0396                     	;# 
   587  0FE4                     	;# 
   588  0FE5                     	;# 
   589  0FE6                     	;# 
   590  0FE7                     	;# 
   591  0FE8                     	;# 
   592  0FE9                     	;# 
   593  0FEA                     	;# 
   594  0FEB                     	;# 
   595  0FED                     	;# 
   596  0FEE                     	;# 
   597  0FEF                     	;# 
   598  0000                     	;# 
   599  0001                     	;# 
   600  0002                     	;# 
   601  0003                     	;# 
   602  0004                     	;# 
   603  0005                     	;# 
   604  0006                     	;# 
   605  0007                     	;# 
   606  0008                     	;# 
   607  0009                     	;# 
   608  000A                     	;# 
   609  000B                     	;# 
   610  000C                     	;# 
   611  000D                     	;# 
   612  000E                     	;# 
   613  0010                     	;# 
   614  0011                     	;# 
   615  0012                     	;# 
   616  0015                     	;# 
   617  0016                     	;# 
   618  0016                     	;# 
   619  0017                     	;# 
   620  0018                     	;# 
   621  0019                     	;# 
   622  001A                     	;# 
   623  001B                     	;# 
   624  001C                     	;# 
   625  008C                     	;# 
   626  008D                     	;# 
   627  008E                     	;# 
   628  0090                     	;# 
   629  0091                     	;# 
   630  0092                     	;# 
   631  0095                     	;# 
   632  0096                     	;# 
   633  0097                     	;# 
   634  0099                     	;# 
   635  009A                     	;# 
   636  009B                     	;# 
   637  009B                     	;# 
   638  009C                     	;# 
   639  009D                     	;# 
   640  009E                     	;# 
   641  010C                     	;# 
   642  010D                     	;# 
   643  010E                     	;# 
   644  0116                     	;# 
   645  0117                     	;# 
   646  011D                     	;# 
   647  018C                     	;# 
   648  018D                     	;# 
   649  018E                     	;# 
   650  0191                     	;# 
   651  0191                     	;# 
   652  0192                     	;# 
   653  0193                     	;# 
   654  0193                     	;# 
   655  0194                     	;# 
   656  0195                     	;# 
   657  0196                     	;# 
   658  0197                     	;# 
   659  0199                     	;# 
   660  019A                     	;# 
   661  019B                     	;# 
   662  019B                     	;# 
   663  019B                     	;# 
   664  019B                     	;# 
   665  019C                     	;# 
   666  019C                     	;# 
   667  019D                     	;# 
   668  019E                     	;# 
   669  019F                     	;# 
   670  020D                     	;# 
   671  0210                     	;# 
   672  0211                     	;# 
   673  0211                     	;# 
   674  0212                     	;# 
   675  0212                     	;# 
   676  0213                     	;# 
   677  0213                     	;# 
   678  0214                     	;# 
   679  0214                     	;# 
   680  0215                     	;# 
   681  0215                     	;# 
   682  0215                     	;# 
   683  0216                     	;# 
   684  0216                     	;# 
   685  0217                     	;# 
   686  0217                     	;# 
   687  0291                     	;# 
   688  0291                     	;# 
   689  0292                     	;# 
   690  0293                     	;# 
   691  0298                     	;# 
   692  0298                     	;# 
   693  0299                     	;# 
   694  029A                     	;# 
   695  0394                     	;# 
   696  0395                     	;# 
   697  0396                     	;# 
   698  0FE4                     	;# 
   699  0FE5                     	;# 
   700  0FE6                     	;# 
   701  0FE7                     	;# 
   702  0FE8                     	;# 
   703  0FE9                     	;# 
   704  0FEA                     	;# 
   705  0FEB                     	;# 
   706  0FED                     	;# 
   707  0FEE                     	;# 
   708  0FEF                     	;# 
   709  0000                     	;# 
   710  0001                     	;# 
   711  0002                     	;# 
   712  0003                     	;# 
   713  0004                     	;# 
   714  0005                     	;# 
   715  0006                     	;# 
   716  0007                     	;# 
   717  0008                     	;# 
   718  0009                     	;# 
   719  000A                     	;# 
   720  000B                     	;# 
   721  000C                     	;# 
   722  000D                     	;# 
   723  000E                     	;# 
   724  0010                     	;# 
   725  0011                     	;# 
   726  0012                     	;# 
   727  0015                     	;# 
   728  0016                     	;# 
   729  0016                     	;# 
   730  0017                     	;# 
   731  0018                     	;# 
   732  0019                     	;# 
   733  001A                     	;# 
   734  001B                     	;# 
   735  001C                     	;# 
   736  008C                     	;# 
   737  008D                     	;# 
   738  008E                     	;# 
   739  0090                     	;# 
   740  0091                     	;# 
   741  0092                     	;# 
   742  0095                     	;# 
   743  0096                     	;# 
   744  0097                     	;# 
   745  0099                     	;# 
   746  009A                     	;# 
   747  009B                     	;# 
   748  009B                     	;# 
   749  009C                     	;# 
   750  009D                     	;# 
   751  009E                     	;# 
   752  010C                     	;# 
   753  010D                     	;# 
   754  010E                     	;# 
   755  0116                     	;# 
   756  0117                     	;# 
   757  011D                     	;# 
   758  018C                     	;# 
   759  018D                     	;# 
   760  018E                     	;# 
   761  0191                     	;# 
   762  0191                     	;# 
   763  0192                     	;# 
   764  0193                     	;# 
   765  0193                     	;# 
   766  0194                     	;# 
   767  0195                     	;# 
   768  0196                     	;# 
   769  0197                     	;# 
   770  0199                     	;# 
   771  019A                     	;# 
   772  019B                     	;# 
   773  019B                     	;# 
   774  019B                     	;# 
   775  019B                     	;# 
   776  019C                     	;# 
   777  019C                     	;# 
   778  019D                     	;# 
   779  019E                     	;# 
   780  019F                     	;# 
   781  020D                     	;# 
   782  0210                     	;# 
   783  0211                     	;# 
   784  0211                     	;# 
   785  0212                     	;# 
   786  0212                     	;# 
   787  0213                     	;# 
   788  0213                     	;# 
   789  0214                     	;# 
   790  0214                     	;# 
   791  0215                     	;# 
   792  0215                     	;# 
   793  0215                     	;# 
   794  0216                     	;# 
   795  0216                     	;# 
   796  0217                     	;# 
   797  0217                     	;# 
   798  0291                     	;# 
   799  0291                     	;# 
   800  0292                     	;# 
   801  0293                     	;# 
   802  0298                     	;# 
   803  0298                     	;# 
   804  0299                     	;# 
   805  029A                     	;# 
   806  0394                     	;# 
   807  0395                     	;# 
   808  0396                     	;# 
   809  0FE4                     	;# 
   810  0FE5                     	;# 
   811  0FE6                     	;# 
   812  0FE7                     	;# 
   813  0FE8                     	;# 
   814  0FE9                     	;# 
   815  0FEA                     	;# 
   816  0FEB                     	;# 
   817  0FED                     	;# 
   818  0FEE                     	;# 
   819  0FEF                     	;# 
   820  0000                     	;# 
   821  0001                     	;# 
   822  0002                     	;# 
   823  0003                     	;# 
   824  0004                     	;# 
   825  0005                     	;# 
   826  0006                     	;# 
   827  0007                     	;# 
   828  0008                     	;# 
   829  0009                     	;# 
   830  000A                     	;# 
   831  000B                     	;# 
   832  000C                     	;# 
   833  000D                     	;# 
   834  000E                     	;# 
   835  0010                     	;# 
   836  0011                     	;# 
   837  0012                     	;# 
   838  0015                     	;# 
   839  0016                     	;# 
   840  0016                     	;# 
   841  0017                     	;# 
   842  0018                     	;# 
   843  0019                     	;# 
   844  001A                     	;# 
   845  001B                     	;# 
   846  001C                     	;# 
   847  008C                     	;# 
   848  008D                     	;# 
   849  008E                     	;# 
   850  0090                     	;# 
   851  0091                     	;# 
   852  0092                     	;# 
   853  0095                     	;# 
   854  0096                     	;# 
   855  0097                     	;# 
   856  0099                     	;# 
   857  009A                     	;# 
   858  009B                     	;# 
   859  009B                     	;# 
   860  009C                     	;# 
   861  009D                     	;# 
   862  009E                     	;# 
   863  010C                     	;# 
   864  010D                     	;# 
   865  010E                     	;# 
   866  0116                     	;# 
   867  0117                     	;# 
   868  011D                     	;# 
   869  018C                     	;# 
   870  018D                     	;# 
   871  018E                     	;# 
   872  0191                     	;# 
   873  0191                     	;# 
   874  0192                     	;# 
   875  0193                     	;# 
   876  0193                     	;# 
   877  0194                     	;# 
   878  0195                     	;# 
   879  0196                     	;# 
   880  0197                     	;# 
   881  0199                     	;# 
   882  019A                     	;# 
   883  019B                     	;# 
   884  019B                     	;# 
   885  019B                     	;# 
   886  019B                     	;# 
   887  019C                     	;# 
   888  019C                     	;# 
   889  019D                     	;# 
   890  019E                     	;# 
   891  019F                     	;# 
   892  020D                     	;# 
   893  0210                     	;# 
   894  0211                     	;# 
   895  0211                     	;# 
   896  0212                     	;# 
   897  0212                     	;# 
   898  0213                     	;# 
   899  0213                     	;# 
   900  0214                     	;# 
   901  0214                     	;# 
   902  0215                     	;# 
   903  0215                     	;# 
   904  0215                     	;# 
   905  0216                     	;# 
   906  0216                     	;# 
   907  0217                     	;# 
   908  0217                     	;# 
   909  0291                     	;# 
   910  0291                     	;# 
   911  0292                     	;# 
   912  0293                     	;# 
   913  0298                     	;# 
   914  0298                     	;# 
   915  0299                     	;# 
   916  029A                     	;# 
   917  0394                     	;# 
   918  0395                     	;# 
   919  0396                     	;# 
   920  0FE4                     	;# 
   921  0FE5                     	;# 
   922  0FE6                     	;# 
   923  0FE7                     	;# 
   924  0FE8                     	;# 
   925  0FE9                     	;# 
   926  0FEA                     	;# 
   927  0FEB                     	;# 
   928  0FED                     	;# 
   929  0FEE                     	;# 
   930  0FEF                     	;# 
   931  0000                     	;# 
   932  0001                     	;# 
   933  0002                     	;# 
   934  0003                     	;# 
   935  0004                     	;# 
   936  0005                     	;# 
   937  0006                     	;# 
   938  0007                     	;# 
   939  0008                     	;# 
   940  0009                     	;# 
   941  000A                     	;# 
   942  000B                     	;# 
   943  000C                     	;# 
   944  000D                     	;# 
   945  000E                     	;# 
   946  0010                     	;# 
   947  0011                     	;# 
   948  0012                     	;# 
   949  0015                     	;# 
   950  0016                     	;# 
   951  0016                     	;# 
   952  0017                     	;# 
   953  0018                     	;# 
   954  0019                     	;# 
   955  001A                     	;# 
   956  001B                     	;# 
   957  001C                     	;# 
   958  008C                     	;# 
   959  008D                     	;# 
   960  008E                     	;# 
   961  0090                     	;# 
   962  0091                     	;# 
   963  0092                     	;# 
   964  0095                     	;# 
   965  0096                     	;# 
   966  0097                     	;# 
   967  0099                     	;# 
   968  009A                     	;# 
   969  009B                     	;# 
   970  009B                     	;# 
   971  009C                     	;# 
   972  009D                     	;# 
   973  009E                     	;# 
   974  010C                     	;# 
   975  010D                     	;# 
   976  010E                     	;# 
   977  0116                     	;# 
   978  0117                     	;# 
   979  011D                     	;# 
   980  018C                     	;# 
   981  018D                     	;# 
   982  018E                     	;# 
   983  0191                     	;# 
   984  0191                     	;# 
   985  0192                     	;# 
   986  0193                     	;# 
   987  0193                     	;# 
   988  0194                     	;# 
   989  0195                     	;# 
   990  0196                     	;# 
   991  0197                     	;# 
   992  0199                     	;# 
   993  019A                     	;# 
   994  019B                     	;# 
   995  019B                     	;# 
   996  019B                     	;# 
   997  019B                     	;# 
   998  019C                     	;# 
   999  019C                     	;# 
  1000  019D                     	;# 
  1001  019E                     	;# 
  1002  019F                     	;# 
  1003  020D                     	;# 
  1004  0210                     	;# 
  1005  0211                     	;# 
  1006  0211                     	;# 
  1007  0212                     	;# 
  1008  0212                     	;# 
  1009  0213                     	;# 
  1010  0213                     	;# 
  1011  0214                     	;# 
  1012  0214                     	;# 
  1013  0215                     	;# 
  1014  0215                     	;# 
  1015  0215                     	;# 
  1016  0216                     	;# 
  1017  0216                     	;# 
  1018  0217                     	;# 
  1019  0217                     	;# 
  1020  0291                     	;# 
  1021  0291                     	;# 
  1022  0292                     	;# 
  1023  0293                     	;# 
  1024  0298                     	;# 
  1025  0298                     	;# 
  1026  0299                     	;# 
  1027  029A                     	;# 
  1028  0394                     	;# 
  1029  0395                     	;# 
  1030  0396                     	;# 
  1031  0FE4                     	;# 
  1032  0FE5                     	;# 
  1033  0FE6                     	;# 
  1034  0FE7                     	;# 
  1035  0FE8                     	;# 
  1036  0FE9                     	;# 
  1037  0FEA                     	;# 
  1038  0FEB                     	;# 
  1039  0FED                     	;# 
  1040  0FEE                     	;# 
  1041  0FEF                     	;# 
  1042  0000                     	;# 
  1043  0001                     	;# 
  1044  0002                     	;# 
  1045  0003                     	;# 
  1046  0004                     	;# 
  1047  0005                     	;# 
  1048  0006                     	;# 
  1049  0007                     	;# 
  1050  0008                     	;# 
  1051  0009                     	;# 
  1052  000A                     	;# 
  1053  000B                     	;# 
  1054  000C                     	;# 
  1055  000D                     	;# 
  1056  000E                     	;# 
  1057  0010                     	;# 
  1058  0011                     	;# 
  1059  0012                     	;# 
  1060  0015                     	;# 
  1061  0016                     	;# 
  1062  0016                     	;# 
  1063  0017                     	;# 
  1064  0018                     	;# 
  1065  0019                     	;# 
  1066  001A                     	;# 
  1067  001B                     	;# 
  1068  001C                     	;# 
  1069  008C                     	;# 
  1070  008D                     	;# 
  1071  008E                     	;# 
  1072  0090                     	;# 
  1073  0091                     	;# 
  1074  0092                     	;# 
  1075  0095                     	;# 
  1076  0096                     	;# 
  1077  0097                     	;# 
  1078  0099                     	;# 
  1079  009A                     	;# 
  1080  009B                     	;# 
  1081  009B                     	;# 
  1082  009C                     	;# 
  1083  009D                     	;# 
  1084  009E                     	;# 
  1085  010C                     	;# 
  1086  010D                     	;# 
  1087  010E                     	;# 
  1088  0116                     	;# 
  1089  0117                     	;# 
  1090  011D                     	;# 
  1091  018C                     	;# 
  1092  018D                     	;# 
  1093  018E                     	;# 
  1094  0191                     	;# 
  1095  0191                     	;# 
  1096  0192                     	;# 
  1097  0193                     	;# 
  1098  0193                     	;# 
  1099  0194                     	;# 
  1100  0195                     	;# 
  1101  0196                     	;# 
  1102  0197                     	;# 
  1103  0199                     	;# 
  1104  019A                     	;# 
  1105  019B                     	;# 
  1106  019B                     	;# 
  1107  019B                     	;# 
  1108  019B                     	;# 
  1109  019C                     	;# 
  1110  019C                     	;# 
  1111  019D                     	;# 
  1112  019E                     	;# 
  1113  019F                     	;# 
  1114  020D                     	;# 
  1115  0210                     	;# 
  1116  0211                     	;# 
  1117  0211                     	;# 
  1118  0212                     	;# 
  1119  0212                     	;# 
  1120  0213                     	;# 
  1121  0213                     	;# 
  1122  0214                     	;# 
  1123  0214                     	;# 
  1124  0215                     	;# 
  1125  0215                     	;# 
  1126  0215                     	;# 
  1127  0216                     	;# 
  1128  0216                     	;# 
  1129  0217                     	;# 
  1130  0217                     	;# 
  1131  0291                     	;# 
  1132  0291                     	;# 
  1133  0292                     	;# 
  1134  0293                     	;# 
  1135  0298                     	;# 
  1136  0298                     	;# 
  1137  0299                     	;# 
  1138  029A                     	;# 
  1139  0394                     	;# 
  1140  0395                     	;# 
  1141  0396                     	;# 
  1142  0FE4                     	;# 
  1143  0FE5                     	;# 
  1144  0FE6                     	;# 
  1145  0FE7                     	;# 
  1146  0FE8                     	;# 
  1147  0FE9                     	;# 
  1148  0FEA                     	;# 
  1149  0FEB                     	;# 
  1150  0FED                     	;# 
  1151  0FEE                     	;# 
  1152  0FEF                     	;# 
  1153  0000                     	;# 
  1154  0001                     	;# 
  1155  0002                     	;# 
  1156  0003                     	;# 
  1157  0004                     	;# 
  1158  0005                     	;# 
  1159  0006                     	;# 
  1160  0007                     	;# 
  1161  0008                     	;# 
  1162  0009                     	;# 
  1163  000A                     	;# 
  1164  000B                     	;# 
  1165  000C                     	;# 
  1166  000D                     	;# 
  1167  000E                     	;# 
  1168  0010                     	;# 
  1169  0011                     	;# 
  1170  0012                     	;# 
  1171  0015                     	;# 
  1172  0016                     	;# 
  1173  0016                     	;# 
  1174  0017                     	;# 
  1175  0018                     	;# 
  1176  0019                     	;# 
  1177  001A                     	;# 
  1178  001B                     	;# 
  1179  001C                     	;# 
  1180  008C                     	;# 
  1181  008D                     	;# 
  1182  008E                     	;# 
  1183  0090                     	;# 
  1184  0091                     	;# 
  1185  0092                     	;# 
  1186  0095                     	;# 
  1187  0096                     	;# 
  1188  0097                     	;# 
  1189  0099                     	;# 
  1190  009A                     	;# 
  1191  009B                     	;# 
  1192  009B                     	;# 
  1193  009C                     	;# 
  1194  009D                     	;# 
  1195  009E                     	;# 
  1196  010C                     	;# 
  1197  010D                     	;# 
  1198  010E                     	;# 
  1199  0116                     	;# 
  1200  0117                     	;# 
  1201  011D                     	;# 
  1202  018C                     	;# 
  1203  018D                     	;# 
  1204  018E                     	;# 
  1205  0191                     	;# 
  1206  0191                     	;# 
  1207  0192                     	;# 
  1208  0193                     	;# 
  1209  0193                     	;# 
  1210  0194                     	;# 
  1211  0195                     	;# 
  1212  0196                     	;# 
  1213  0197                     	;# 
  1214  0199                     	;# 
  1215  019A                     	;# 
  1216  019B                     	;# 
  1217  019B                     	;# 
  1218  019B                     	;# 
  1219  019B                     	;# 
  1220  019C                     	;# 
  1221  019C                     	;# 
  1222  019D                     	;# 
  1223  019E                     	;# 
  1224  019F                     	;# 
  1225  020D                     	;# 
  1226  0210                     	;# 
  1227  0211                     	;# 
  1228  0211                     	;# 
  1229  0212                     	;# 
  1230  0212                     	;# 
  1231  0213                     	;# 
  1232  0213                     	;# 
  1233  0214                     	;# 
  1234  0214                     	;# 
  1235  0215                     	;# 
  1236  0215                     	;# 
  1237  0215                     	;# 
  1238  0216                     	;# 
  1239  0216                     	;# 
  1240  0217                     	;# 
  1241  0217                     	;# 
  1242  0291                     	;# 
  1243  0291                     	;# 
  1244  0292                     	;# 
  1245  0293                     	;# 
  1246  0298                     	;# 
  1247  0298                     	;# 
  1248  0299                     	;# 
  1249  029A                     	;# 
  1250  0394                     	;# 
  1251  0395                     	;# 
  1252  0396                     	;# 
  1253  0FE4                     	;# 
  1254  0FE5                     	;# 
  1255  0FE6                     	;# 
  1256  0FE7                     	;# 
  1257  0FE8                     	;# 
  1258  0FE9                     	;# 
  1259  0FEA                     	;# 
  1260  0FEB                     	;# 
  1261  0FED                     	;# 
  1262  0FEE                     	;# 
  1263  0FEF                     	;# 
  1264  0000                     	;# 
  1265  0001                     	;# 
  1266  0002                     	;# 
  1267  0003                     	;# 
  1268  0004                     	;# 
  1269  0005                     	;# 
  1270  0006                     	;# 
  1271  0007                     	;# 
  1272  0008                     	;# 
  1273  0009                     	;# 
  1274  000A                     	;# 
  1275  000B                     	;# 
  1276  000C                     	;# 
  1277  000D                     	;# 
  1278  000E                     	;# 
  1279  0010                     	;# 
  1280  0011                     	;# 
  1281  0012                     	;# 
  1282  0013                     	;# 
  1283  0014                     	;# 
  1284  0015                     	;# 
  1285  0016                     	;# 
  1286  0016                     	;# 
  1287  0017                     	;# 
  1288  0018                     	;# 
  1289  0019                     	;# 
  1290  001A                     	;# 
  1291  001B                     	;# 
  1292  001C                     	;# 
  1293  008C                     	;# 
  1294  008D                     	;# 
  1295  008E                     	;# 
  1296  0090                     	;# 
  1297  0091                     	;# 
  1298  0092                     	;# 
  1299  0093                     	;# 
  1300  0094                     	;# 
  1301  0095                     	;# 
  1302  0096                     	;# 
  1303  0097                     	;# 
  1304  0098                     	;# 
  1305  0099                     	;# 
  1306  009A                     	;# 
  1307  009B                     	;# 
  1308  009B                     	;# 
  1309  009C                     	;# 
  1310  009D                     	;# 
  1311  009E                     	;# 
  1312  009F                     	;# 
  1313  010C                     	;# 
  1314  010D                     	;# 
  1315  010E                     	;# 
  1316  0111                     	;# 
  1317  0112                     	;# 
  1318  0113                     	;# 
  1319  0114                     	;# 
  1320  0115                     	;# 
  1321  0116                     	;# 
  1322  0117                     	;# 
  1323  0118                     	;# 
  1324  0119                     	;# 
  1325  011A                     	;# 
  1326  011B                     	;# 
  1327  011C                     	;# 
  1328  011D                     	;# 
  1329  011D                     	;# 
  1330  011D                     	;# 
  1331  011E                     	;# 
  1332  011F                     	;# 
  1333  018C                     	;# 
  1334  018D                     	;# 
  1335  018E                     	;# 
  1336  0191                     	;# 
  1337  0191                     	;# 
  1338  0192                     	;# 
  1339  0193                     	;# 
  1340  0193                     	;# 
  1341  0193                     	;# 
  1342  0194                     	;# 
  1343  0195                     	;# 
  1344  0196                     	;# 
  1345  0197                     	;# 
  1346  0199                     	;# 
  1347  0199                     	;# 
  1348  0199                     	;# 
  1349  019A                     	;# 
  1350  019A                     	;# 
  1351  019A                     	;# 
  1352  019B                     	;# 
  1353  019B                     	;# 
  1354  019B                     	;# 
  1355  019B                     	;# 
  1356  019B                     	;# 
  1357  019C                     	;# 
  1358  019C                     	;# 
  1359  019C                     	;# 
  1360  019D                     	;# 
  1361  019D                     	;# 
  1362  019D                     	;# 
  1363  019E                     	;# 
  1364  019E                     	;# 
  1365  019E                     	;# 
  1366  019F                     	;# 
  1367  019F                     	;# 
  1368  019F                     	;# 
  1369  019F                     	;# 
  1370  019F                     	;# 
  1371  020C                     	;# 
  1372  020D                     	;# 
  1373  020E                     	;# 
  1374  0210                     	;# 
  1375  0211                     	;# 
  1376  0211                     	;# 
  1377  0212                     	;# 
  1378  0212                     	;# 
  1379  0213                     	;# 
  1380  0213                     	;# 
  1381  0214                     	;# 
  1382  0214                     	;# 
  1383  0215                     	;# 
  1384  0215                     	;# 
  1385  0215                     	;# 
  1386  0215                     	;# 
  1387  0216                     	;# 
  1388  0216                     	;# 
  1389  0217                     	;# 
  1390  0217                     	;# 
  1391  028C                     	;# 
  1392  028D                     	;# 
  1393  028E                     	;# 
  1394  0291                     	;# 
  1395  0291                     	;# 
  1396  0292                     	;# 
  1397  0293                     	;# 
  1398  0298                     	;# 
  1399  0298                     	;# 
  1400  0299                     	;# 
  1401  029A                     	;# 
  1402  030C                     	;# 
  1403  030D                     	;# 
  1404  030E                     	;# 
  1405  0311                     	;# 
  1406  0311                     	;# 
  1407  0312                     	;# 
  1408  0313                     	;# 
  1409  038C                     	;# 
  1410  038D                     	;# 
  1411  038E                     	;# 
  1412  0390                     	;# 
  1413  0391                     	;# 
  1414  0392                     	;# 
  1415  0393                     	;# 
  1416  0394                     	;# 
  1417  0395                     	;# 
  1418  0396                     	;# 
  1419  0397                     	;# 
  1420  0398                     	;# 
  1421  0399                     	;# 
  1422  039D                     	;# 
  1423  039E                     	;# 
  1424  039F                     	;# 
  1425  0511                     	;# 
  1426  0513                     	;# 
  1427  051A                     	;# 
  1428  0591                     	;# 
  1429  0592                     	;# 
  1430  0592                     	;# 
  1431  0593                     	;# 
  1432  0594                     	;# 
  1433  0594                     	;# 
  1434  0595                     	;# 
  1435  0596                     	;# 
  1436  0596                     	;# 
  1437  0E91                     	;# 
  1438  0E92                     	;# 
  1439  0E93                     	;# 
  1440  0E94                     	;# 
  1441  0E95                     	;# 
  1442  0E96                     	;# 
  1443  0E97                     	;# 
  1444  0E98                     	;# 
  1445  0E99                     	;# 
  1446  0E9A                     	;# 
  1447  0E9B                     	;# 
  1448  0E9C                     	;# 
  1449  0E9D                     	;# 
  1450  0E9E                     	;# 
  1451  0E9F                     	;# 
  1452  0EA0                     	;# 
  1453  0EA1                     	;# 
  1454  0EA1                     	;# 
  1455  0EA2                     	;# 
  1456  0EA3                     	;# 
  1457  0EA3                     	;# 
  1458  0EA4                     	;# 
  1459  0EA5                     	;# 
  1460  0EA5                     	;# 
  1461  0EA6                     	;# 
  1462  0EA7                     	;# 
  1463  0EA7                     	;# 
  1464  0EA8                     	;# 
  1465  0EA9                     	;# 
  1466  0EAA                     	;# 
  1467  0EAB                     	;# 
  1468  0EAC                     	;# 
  1469  0EAD                     	;# 
  1470  0EAE                     	;# 
  1471  0EAF                     	;# 
  1472  0EB1                     	;# 
  1473  0EB2                     	;# 
  1474  0EB3                     	;# 
  1475  0EB4                     	;# 
  1476  0EB5                     	;# 
  1477  0EB6                     	;# 
  1478  0EB7                     	;# 
  1479  0EB8                     	;# 
  1480  0EB9                     	;# 
  1481  0EBA                     	;# 
  1482  0EBB                     	;# 
  1483  0EBC                     	;# 
  1484  0EBD                     	;# 
  1485  0EBE                     	;# 
  1486  0EBF                     	;# 
  1487  0EC0                     	;# 
  1488  0EC1                     	;# 
  1489  0EC1                     	;# 
  1490  0EC2                     	;# 
  1491  0EC3                     	;# 
  1492  0EC3                     	;# 
  1493  0EC4                     	;# 
  1494  0EC5                     	;# 
  1495  0EC5                     	;# 
  1496  0EC6                     	;# 
  1497  0EC7                     	;# 
  1498  0EC7                     	;# 
  1499  0EC8                     	;# 
  1500  0EC9                     	;# 
  1501  0ECA                     	;# 
  1502  0ECB                     	;# 
  1503  0ECC                     	;# 
  1504  0ECD                     	;# 
  1505  0ECE                     	;# 
  1506  0ECF                     	;# 
  1507  0ED1                     	;# 
  1508  0ED2                     	;# 
  1509  0ED3                     	;# 
  1510  0ED4                     	;# 
  1511  0ED5                     	;# 
  1512  0ED6                     	;# 
  1513  0ED7                     	;# 
  1514  0ED8                     	;# 
  1515  0ED9                     	;# 
  1516  0EDA                     	;# 
  1517  0EDB                     	;# 
  1518  0EDC                     	;# 
  1519  0EDD                     	;# 
  1520  0EDE                     	;# 
  1521  0EDF                     	;# 
  1522  0EE0                     	;# 
  1523  0EE1                     	;# 
  1524  0EE1                     	;# 
  1525  0EE2                     	;# 
  1526  0EE3                     	;# 
  1527  0EE3                     	;# 
  1528  0EE4                     	;# 
  1529  0EE5                     	;# 
  1530  0EE5                     	;# 
  1531  0EE6                     	;# 
  1532  0EE7                     	;# 
  1533  0EE7                     	;# 
  1534  0EE8                     	;# 
  1535  0EE9                     	;# 
  1536  0EEA                     	;# 
  1537  0EEB                     	;# 
  1538  0EEC                     	;# 
  1539  0EED                     	;# 
  1540  0EEE                     	;# 
  1541  0EEF                     	;# 
  1542  0F11                     	;# 
  1543  0F12                     	;# 
  1544  0F13                     	;# 
  1545  0F14                     	;# 
  1546  0F15                     	;# 
  1547  0F16                     	;# 
  1548  0F17                     	;# 
  1549  0F18                     	;# 
  1550  0F19                     	;# 
  1551  0F1A                     	;# 
  1552  0F1B                     	;# 
  1553  0F1C                     	;# 
  1554  0F1D                     	;# 
  1555  0F1E                     	;# 
  1556  0F1F                     	;# 
  1557  0F20                     	;# 
  1558  0F21                     	;# 
  1559  0F21                     	;# 
  1560  0F22                     	;# 
  1561  0F23                     	;# 
  1562  0F23                     	;# 
  1563  0F24                     	;# 
  1564  0F25                     	;# 
  1565  0F25                     	;# 
  1566  0F26                     	;# 
  1567  0F27                     	;# 
  1568  0F27                     	;# 
  1569  0F28                     	;# 
  1570  0F29                     	;# 
  1571  0F2A                     	;# 
  1572  0F2B                     	;# 
  1573  0F2C                     	;# 
  1574  0F2D                     	;# 
  1575  0F2E                     	;# 
  1576  0F2F                     	;# 
  1577  0FE4                     	;# 
  1578  0FE5                     	;# 
  1579  0FE6                     	;# 
  1580  0FE7                     	;# 
  1581  0FE8                     	;# 
  1582  0FE9                     	;# 
  1583  0FEA                     	;# 
  1584  0FEB                     	;# 
  1585  0FED                     	;# 
  1586  0FEE                     	;# 
  1587  0FEF                     	;# 
  1588  0000                     	;# 
  1589  0001                     	;# 
  1590  0002                     	;# 
  1591  0003                     	;# 
  1592  0004                     	;# 
  1593  0005                     	;# 
  1594  0006                     	;# 
  1595  0007                     	;# 
  1596  0008                     	;# 
  1597  0009                     	;# 
  1598  000A                     	;# 
  1599  000B                     	;# 
  1600  000C                     	;# 
  1601  000D                     	;# 
  1602  000E                     	;# 
  1603  0010                     	;# 
  1604  0011                     	;# 
  1605  0012                     	;# 
  1606  0015                     	;# 
  1607  0016                     	;# 
  1608  0016                     	;# 
  1609  0017                     	;# 
  1610  0018                     	;# 
  1611  0019                     	;# 
  1612  001A                     	;# 
  1613  001B                     	;# 
  1614  001C                     	;# 
  1615  008C                     	;# 
  1616  008D                     	;# 
  1617  008E                     	;# 
  1618  0090                     	;# 
  1619  0091                     	;# 
  1620  0092                     	;# 
  1621  0095                     	;# 
  1622  0096                     	;# 
  1623  0097                     	;# 
  1624  0099                     	;# 
  1625  009A                     	;# 
  1626  009B                     	;# 
  1627  009B                     	;# 
  1628  009C                     	;# 
  1629  009D                     	;# 
  1630  009E                     	;# 
  1631  010C                     	;# 
  1632  010D                     	;# 
  1633  010E                     	;# 
  1634  0116                     	;# 
  1635  0117                     	;# 
  1636  011D                     	;# 
  1637  018C                     	;# 
  1638  018D                     	;# 
  1639  018E                     	;# 
  1640  0191                     	;# 
  1641  0191                     	;# 
  1642  0192                     	;# 
  1643  0193                     	;# 
  1644  0193                     	;# 
  1645  0194                     	;# 
  1646  0195                     	;# 
  1647  0196                     	;# 
  1648  0197                     	;# 
  1649  0199                     	;# 
  1650  019A                     	;# 
  1651  019B                     	;# 
  1652  019B                     	;# 
  1653  019B                     	;# 
  1654  019B                     	;# 
  1655  019C                     	;# 
  1656  019C                     	;# 
  1657  019D                     	;# 
  1658  019E                     	;# 
  1659  019F                     	;# 
  1660  020D                     	;# 
  1661  0210                     	;# 
  1662  0211                     	;# 
  1663  0211                     	;# 
  1664  0212                     	;# 
  1665  0212                     	;# 
  1666  0213                     	;# 
  1667  0213                     	;# 
  1668  0214                     	;# 
  1669  0214                     	;# 
  1670  0215                     	;# 
  1671  0215                     	;# 
  1672  0215                     	;# 
  1673  0216                     	;# 
  1674  0216                     	;# 
  1675  0217                     	;# 
  1676  0217                     	;# 
  1677  0291                     	;# 
  1678  0291                     	;# 
  1679  0292                     	;# 
  1680  0293                     	;# 
  1681  0298                     	;# 
  1682  0298                     	;# 
  1683  0299                     	;# 
  1684  029A                     	;# 
  1685  0394                     	;# 
  1686  0395                     	;# 
  1687  0396                     	;# 
  1688  0FE4                     	;# 
  1689  0FE5                     	;# 
  1690  0FE6                     	;# 
  1691  0FE7                     	;# 
  1692  0FE8                     	;# 
  1693  0FE9                     	;# 
  1694  0FEA                     	;# 
  1695  0FEB                     	;# 
  1696  0FED                     	;# 
  1697  0FEE                     	;# 
  1698  0FEF                     	;# 
  1699  0000                     	;# 
  1700  0001                     	;# 
  1701  0002                     	;# 
  1702  0003                     	;# 
  1703  0004                     	;# 
  1704  0005                     	;# 
  1705  0006                     	;# 
  1706  0007                     	;# 
  1707  0008                     	;# 
  1708  0009                     	;# 
  1709  000A                     	;# 
  1710  000B                     	;# 
  1711  000C                     	;# 
  1712  000D                     	;# 
  1713  000E                     	;# 
  1714  0010                     	;# 
  1715  0011                     	;# 
  1716  0012                     	;# 
  1717  0015                     	;# 
  1718  0016                     	;# 
  1719  0016                     	;# 
  1720  0017                     	;# 
  1721  0018                     	;# 
  1722  0019                     	;# 
  1723  001A                     	;# 
  1724  001B                     	;# 
  1725  001C                     	;# 
  1726  008C                     	;# 
  1727  008D                     	;# 
  1728  008E                     	;# 
  1729  0090                     	;# 
  1730  0091                     	;# 
  1731  0092                     	;# 
  1732  0095                     	;# 
  1733  0096                     	;# 
  1734  0097                     	;# 
  1735  0099                     	;# 
  1736  009A                     	;# 
  1737  009B                     	;# 
  1738  009B                     	;# 
  1739  009C                     	;# 
  1740  009D                     	;# 
  1741  009E                     	;# 
  1742  010C                     	;# 
  1743  010D                     	;# 
  1744  010E                     	;# 
  1745  0116                     	;# 
  1746  0117                     	;# 
  1747  011D                     	;# 
  1748  018C                     	;# 
  1749  018D                     	;# 
  1750  018E                     	;# 
  1751  0191                     	;# 
  1752  0191                     	;# 
  1753  0192                     	;# 
  1754  0193                     	;# 
  1755  0193                     	;# 
  1756  0194                     	;# 
  1757  0195                     	;# 
  1758  0196                     	;# 
  1759  0197                     	;# 
  1760  0199                     	;# 
  1761  019A                     	;# 
  1762  019B                     	;# 
  1763  019B                     	;# 
  1764  019B                     	;# 
  1765  019B                     	;# 
  1766  019C                     	;# 
  1767  019C                     	;# 
  1768  019D                     	;# 
  1769  019E                     	;# 
  1770  019F                     	;# 
  1771  020D                     	;# 
  1772  0210                     	;# 
  1773  0211                     	;# 
  1774  0211                     	;# 
  1775  0212                     	;# 
  1776  0212                     	;# 
  1777  0213                     	;# 
  1778  0213                     	;# 
  1779  0214                     	;# 
  1780  0214                     	;# 
  1781  0215                     	;# 
  1782  0215                     	;# 
  1783  0215                     	;# 
  1784  0216                     	;# 
  1785  0216                     	;# 
  1786  0217                     	;# 
  1787  0217                     	;# 
  1788  0291                     	;# 
  1789  0291                     	;# 
  1790  0292                     	;# 
  1791  0293                     	;# 
  1792  0298                     	;# 
  1793  0298                     	;# 
  1794  0299                     	;# 
  1795  029A                     	;# 
  1796  0394                     	;# 
  1797  0395                     	;# 
  1798  0396                     	;# 
  1799  0FE4                     	;# 
  1800  0FE5                     	;# 
  1801  0FE6                     	;# 
  1802  0FE7                     	;# 
  1803  0FE8                     	;# 
  1804  0FE9                     	;# 
  1805  0FEA                     	;# 
  1806  0FEB                     	;# 
  1807  0FED                     	;# 
  1808  0FEE                     	;# 
  1809  0FEF                     	;# 
  1810                           
  1811                           	psect	stringtext
  1812  0052                     __pstringtext:	
  1813  0052                     _BitNum2SetMask:	
  1814  0052  3401               	retlw	1
  1815  0053  3400               	retlw	0
  1816  0054  3402               	retlw	2
  1817  0055  3400               	retlw	0
  1818  0056  3404               	retlw	4
  1819  0057  3400               	retlw	0
  1820  0058  3408               	retlw	8
  1821  0059  3400               	retlw	0
  1822  005A  3410               	retlw	16
  1823  005B  3400               	retlw	0
  1824  005C  3420               	retlw	32
  1825  005D  3400               	retlw	0
  1826  005E  3440               	retlw	64
  1827  005F  3400               	retlw	0
  1828  0060  3480               	retlw	128
  1829  0061  3400               	retlw	0
  1830  0062  3400               	retlw	0
  1831  0063  3401               	retlw	1
  1832  0064  3400               	retlw	0
  1833  0065  3402               	retlw	2
  1834  0066  3400               	retlw	0
  1835  0067  3404               	retlw	4
  1836  0068  3400               	retlw	0
  1837  0069  3408               	retlw	8
  1838  006A  3400               	retlw	0
  1839  006B  3410               	retlw	16
  1840  006C  3400               	retlw	0
  1841  006D  3420               	retlw	32
  1842  006E  3400               	retlw	0
  1843  006F  3440               	retlw	64
  1844  0070  3400               	retlw	0
  1845  0071  3480               	retlw	128
  1846  0072                     __end_of_BitNum2SetMask:	
  1847  0072                     _Timer2PostFunc:	
  1848  0072  34E4               	retlw	low _PostToggleService
  1849  0073  3405               	retlw	high _PostToggleService
  1850  0074  34D9               	retlw	low _PostSPI_Service
  1851  0075  3405               	retlw	high _PostSPI_Service
  1852  0076  3400               	retlw	0
  1853  0077  3400               	retlw	0
  1854  0078  3400               	retlw	0
  1855  0079  3400               	retlw	0
  1856  007A  3400               	retlw	0
  1857  007B  3400               	retlw	0
  1858  007C  3400               	retlw	0
  1859  007D  3400               	retlw	0
  1860  007E  3400               	retlw	0
  1861  007F  3400               	retlw	0
  1862  0080  3400               	retlw	0
  1863  0081  3400               	retlw	0
  1864  0082  3400               	retlw	0
  1865  0083  3400               	retlw	0
  1866  0084  3400               	retlw	0
  1867  0085  3400               	retlw	0
  1868  0086  3400               	retlw	0
  1869  0087  3400               	retlw	0
  1870  0088  3400               	retlw	0
  1871  0089  3400               	retlw	0
  1872  008A  3400               	retlw	0
  1873  008B  3400               	retlw	0
  1874  008C  3400               	retlw	0
  1875  008D  3400               	retlw	0
  1876  008E  3400               	retlw	0
  1877  008F  3400               	retlw	0
  1878  0090  3400               	retlw	0
  1879  0091  3400               	retlw	0
  1880  0092                     __end_of_Timer2PostFunc:	
  1881  0092                     _Nybble2MSBitNum:	
  1882  0092  3400               	retlw	0
  1883  0093  3401               	retlw	1
  1884  0094  3401               	retlw	1
  1885  0095  3402               	retlw	2
  1886  0096  3402               	retlw	2
  1887  0097  3402               	retlw	2
  1888  0098  3402               	retlw	2
  1889  0099  3403               	retlw	3
  1890  009A  3403               	retlw	3
  1891  009B  3403               	retlw	3
  1892  009C  3403               	retlw	3
  1893  009D  3403               	retlw	3
  1894  009E  3403               	retlw	3
  1895  009F  3403               	retlw	3
  1896  00A0  3403               	retlw	3
  1897  00A1                     __end_of_Nybble2MSBitNum:	
  1898  00A1                     _ServDescList:	
  1899  00A1  34B2               	retlw	low _InitToggleService
  1900  00A2  3404               	retlw	high _InitToggleService
  1901  00A3  34E0               	retlw	low _RunToggleService
  1902  00A4  3404               	retlw	high _RunToggleService
  1903  00A5  34EF               	retlw	low _InitSPI_Service
  1904  00A6  3405               	retlw	high _InitSPI_Service
  1905  00A7  3473               	retlw	low _RunSPI_Service
  1906  00A8  3405               	retlw	high _RunSPI_Service
  1907  00A9                     __end_of_ServDescList:	
  1908  00A9                     _EventQueues:	
  1909  00A9  34C0               	retlw	low (_Queue0| 0)
  1910  00AA  3406               	retlw	6
  1911  00AB  34D2               	retlw	low (_Queue1| 0)
  1912  00AC  3404               	retlw	4
  1913  00AD                     __end_of_EventQueues:	
  1914  00AD                     _ES_EventList:	
  1915  00AD  3406               	retlw	low _Check4Keystroke
  1916  00AE  3406               	retlw	high _Check4Keystroke
  1917  00AF                     __end_of_ES_EventList:	
  1918  00AF                     _DistList00:	
  1919  00AF  34E4               	retlw	low _PostToggleService
  1920  00B0  3405               	retlw	high _PostToggleService
  1921  00B1                     __end_of_DistList00:	
  1922  000B                     _INTCON	set	11
  1923  000C                     _PORTA	set	12
  1924  000E                     _PORTC	set	14
  1925  0018                     _T1CON	set	24
  1926  008A                     _CCP1IF	set	138
  1927  005F                     _GIE	set	95
  1928  0060                     _RA0	set	96
  1929  0061                     _RA1	set	97
  1930  008B                     _SSPIF	set	139
  1931  0091                     _PIE1	set	145
  1932  008C                     _TRISA	set	140
  1933  008E                     _TRISC	set	142
  1934  04CB                     _IRCF0	set	1227
  1935  04CC                     _IRCF1	set	1228
  1936  04CD                     _IRCF2	set	1229
  1937  04CE                     _IRCF3	set	1230
  1938  048B                     _SSPIE	set	1163
  1939  010C                     _LATA	set	268
  1940  010E                     _LATC	set	270
  1941  018C                     _ANSELA	set	396
  1942  018E                     _ANSELC	set	398
  1943  0212                     _SSPADD	set	530
  1944  0211                     _SSPBUF	set	529
  1945  0215                     _SSPCON1	set	533
  1946  0214                     _SSPSTAT	set	532
  1947  10A0                     _BF	set	4256
  1948  0293                     _CCP1CON	set	659
  1949  0292                     _CCPR1H	set	658
  1950  0291                     _CCPR1L	set	657
  1951  00B1                     STR_1:	
  1952  00B1  3446               	retlw	70	;'F'
  1953  00B2  3461               	retlw	97	;'a'
  1954  00B3  3469               	retlw	105	;'i'
  1955  00B4  346C               	retlw	108	;'l'
  1956  00B5  3465               	retlw	101	;'e'
  1957  00B6  3464               	retlw	100	;'d'
  1958  00B7  3420               	retlw	32	;' '
  1959  00B8  346F               	retlw	111	;'o'
  1960  00B9  346E               	retlw	110	;'n'
  1961  00BA  3420               	retlw	32	;' '
  1962  00BB  3461               	retlw	97	;'a'
  1963  00BC  3474               	retlw	116	;'t'
  1964  00BD  3474               	retlw	116	;'t'
  1965  00BE  3465               	retlw	101	;'e'
  1966  00BF  346D               	retlw	109	;'m'
  1967  00C0  3470               	retlw	112	;'p'
  1968  00C1  3474               	retlw	116	;'t'
  1969  00C2  3420               	retlw	32	;' '
  1970  00C3  3474               	retlw	116	;'t'
  1971  00C4  346F               	retlw	111	;'o'
  1972  00C5  3420               	retlw	32	;' '
  1973  00C6  3450               	retlw	80	;'P'
  1974  00C7  346F               	retlw	111	;'o'
  1975  00C8  3473               	retlw	115	;'s'
  1976  00C9  3474               	retlw	116	;'t'
  1977  00CA  340A               	retlw	10
  1978  00CB  3400               	retlw	0
  1979  00CC                     STR_2:	
  1980  00CC  3446               	retlw	70	;'F'
  1981  00CD  3461               	retlw	97	;'a'
  1982  00CE  3469               	retlw	105	;'i'
  1983  00CF  346C               	retlw	108	;'l'
  1984  00D0  3465               	retlw	101	;'e'
  1985  00D1  3464               	retlw	100	;'d'
  1986  00D2  3420               	retlw	32	;' '
  1987  00D3  346F               	retlw	111	;'o'
  1988  00D4  346E               	retlw	110	;'n'
  1989  00D5  3420               	retlw	32	;' '
  1990  00D6  344E               	retlw	78	;'N'
  1991  00D7  3455               	retlw	85	;'U'
  1992  00D8  344C               	retlw	76	;'L'
  1993  00D9  344C               	retlw	76	;'L'
  1994  00DA  3420               	retlw	32	;' '
  1995  00DB  3470               	retlw	112	;'p'
  1996  00DC  346F               	retlw	111	;'o'
  1997  00DD  3469               	retlw	105	;'i'
  1998  00DE  346E               	retlw	110	;'n'
  1999  00DF  3474               	retlw	116	;'t'
  2000  00E0  3465               	retlw	101	;'e'
  2001  00E1  3472               	retlw	114	;'r'
  2002  00E2  340A               	retlw	10
  2003  00E3  3400               	retlw	0
  2004  00E4                     STR_3:	
  2005  00E4  3446               	retlw	70	;'F'
  2006  00E5  3461               	retlw	97	;'a'
  2007  00E6  3469               	retlw	105	;'i'
  2008  00E7  346C               	retlw	108	;'l'
  2009  00E8  3465               	retlw	101	;'e'
  2010  00E9  3464               	retlw	100	;'d'
  2011  00EA  3420               	retlw	32	;' '
  2012  00EB  3449               	retlw	73	;'I'
  2013  00EC  346E               	retlw	110	;'n'
  2014  00ED  3469               	retlw	105	;'i'
  2015  00EE  3474               	retlw	116	;'t'
  2016  00EF  3469               	retlw	105	;'i'
  2017  00F0  3461               	retlw	97	;'a'
  2018  00F1  346C               	retlw	108	;'l'
  2019  00F2  3469               	retlw	105	;'i'
  2020  00F3  347A               	retlw	122	;'z'
  2021  00F4  3461               	retlw	97	;'a'
  2022  00F5  3474               	retlw	116	;'t'
  2023  00F6  3469               	retlw	105	;'i'
  2024  00F7  346F               	retlw	111	;'o'
  2025  00F8  346E               	retlw	110	;'n'
  2026  00F9  340A               	retlw	10
  2027  00FA  3400               	retlw	0
  2028  00FB                     STR_4:	
  2029  00FB  344F               	retlw	79	;'O'
  2030  00FC  3474               	retlw	116	;'t'
  2031  00FD  3468               	retlw	104	;'h'
  2032  00FE  3465               	retlw	101	;'e'
  2033  00FF  3472               	retlw	114	;'r'
  2034  0100  3420               	retlw	32	;' '
  2035  0101  3446               	retlw	70	;'F'
  2036  0102  3461               	retlw	97	;'a'
  2037  0103  3469               	retlw	105	;'i'
  2038  0104  346C               	retlw	108	;'l'
  2039  0105  3475               	retlw	117	;'u'
  2040  0106  3472               	retlw	114	;'r'
  2041  0107  3465               	retlw	101	;'e'
  2042  0108  340A               	retlw	10
  2043  0109  3400               	retlw	0
  2044                           
  2045                           ; #config settings
  2046  0000                     
  2047                           	psect	cinit
  2048  003A                     start_initialization:	
  2049  003A                     __initialization:	
  2050                           
  2051                           ; Clear objects allocated to COMMON
  2052  003A  01F9               	clrf	__pbssCOMMON& (0+127)
  2053  003B  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  2054  003C  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
  2055  003D  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
  2056  003E  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
  2057                           
  2058                           ; Clear objects allocated to BANK0
  2059  003F  304E               	movlw	low __pbssBANK0
  2060  0040  0084               	movwf	4
  2061  0041  3000               	movlw	high __pbssBANK0
  2062  0042  0085               	movwf	5
  2063  0043  3018               	movlw	24
  2064  0044  3186  2600  3180   	fcall	clear_ram0
  2065                           
  2066                           ; Clear objects allocated to BANK1
  2067  0047  30A0               	movlw	low __pbssBANK1
  2068  0048  0084               	movwf	4
  2069  0049  3000               	movlw	high __pbssBANK1
  2070  004A  0085               	movwf	5
  2071  004B  303E               	movlw	62
  2072  004C  3186  2600         	fcall	clear_ram0
  2073  004E                     end_of_initialization:	
  2074                           ;End of C runtime variable initialization code
  2075                           
  2076  004E                     __end_of__initialization:	
  2077  004E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2078  004F  0020               	movlb	0
  2079  0050  3183  2B36         	ljmp	_main	;jump to C main() function
  2080                           
  2081                           	psect	bssCOMMON
  2082  0079                     __pbssCOMMON:	
  2083  0079                     TemplateService@MyPriority:	
  2084  0079                     	ds	1
  2085  007A                     _AccelerometerIOC:	
  2086  007A                     	ds	1
  2087  007B                     _CurrentState:	
  2088  007B                     	ds	1
  2089  007C                     _MyPriority:	
  2090  007C                     	ds	1
  2091  007D                     _PacketReceived:	
  2092  007D                     	ds	1
  2093                           
  2094                           	psect	bssBANK0
  2095  004E                     __pbssBANK0:	
  2096  004E                     ES_Timer_Tick_Resp@NewEvent:	
  2097  004E                     	ds	3
  2098  0051                     ES_Timer_Tick_Resp@NeedsProcessing:	
  2099  0051                     	ds	2
  2100  0053                     ISR@LastTime:	
  2101  0053                     	ds	2
  2102  0055                     ISR@NextTime:	
  2103  0055                     	ds	2
  2104  0057                     _Ready:	
  2105  0057                     	ds	2
  2106  0059                     _SysTickCounter:	
  2107  0059                     	ds	2
  2108  005B                     _TMR_ActiveFlags:	
  2109  005B                     	ds	2
  2110  005D                     __PRIMASK_temp:	
  2111  005D                     	ds	2
  2112  005F                     ES_Timer_Tick_Resp@NextTimer2Process:	
  2113  005F                     	ds	1
  2114  0060                     SPI_Service@MyPriority:	
  2115  0060                     	ds	1
  2116  0061                     ToggleService@MyPriority:	
  2117  0061                     	ds	1
  2118  0062                     _TickCount:	
  2119  0062                     	ds	1
  2120  0063                     ES_Run@ThisEvent:	
  2121  0063                     	ds	3
  2122                           
  2123                           	psect	bssBANK1
  2124  00A0                     __pbssBANK1:	
  2125  00A0                     _TMR_TimerArray:	
  2126  00A0                     	ds	32
  2127  00C0                     _Queue0:	
  2128  00C0                     	ds	18
  2129  00D2                     _Queue1:	
  2130  00D2                     	ds	12
  2131                           
  2132                           	psect	clrtext
  2133  0600                     clear_ram0:	
  2134                           ;	Called with FSR0 containing the base address, and
  2135                           ;	WREG with the size to clear
  2136                           
  2137  0600  0064               	clrwdt	;clear the watchdog before getting into this loop
  2138  0601                     clrloop0:	
  2139  0601  0180               	clrf	0	;clear RAM location pointed to by FSR
  2140  0602  3101               	addfsr 0,1
  2141  0603  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2142  0604  2E01               	goto	clrloop0	;have we reached the end yet?
  2143  0605  3400               	retlw	0	;all done for this memory range, return
  2144                           
  2145                           	psect	cstackCOMMON
  2146  0070                     __pcstackCOMMON:	
  2147  0070                     ?_Check4Keystroke:	
  2148  0070                     ?__HW_Process_Pending_Ints:	
  2149                           ; 1 bytes @ 0x0
  2150                           
  2151  0070                     ?_EOTResponse:	
  2152                           ; 1 bytes @ 0x0
  2153                           
  2154  0070                     ?_ES_Timer_Tick_Resp:	
  2155                           ; 1 bytes @ 0x0
  2156                           
  2157  0070                     ?_InitSPI:	
  2158                           ; 1 bytes @ 0x0
  2159                           
  2160  0070                     ?_putch:	
  2161                           ; 1 bytes @ 0x0
  2162                           
  2163  0070                     ?_ES_CheckUserEvents:	
  2164                           ; 1 bytes @ 0x0
  2165                           
  2166  0070                     ?_ES_Run:	
  2167                           ; 1 bytes @ 0x0
  2168                           
  2169  0070                     ?_ISR:	
  2170                           ; 1 bytes @ 0x0
  2171                           
  2172  0070                     ?i1_ES_Timer_InitTimer:	
  2173                           ; 1 bytes @ 0x0
  2174                           
  2175  0070                     ?_main:	
  2176                           ; 1 bytes @ 0x0
  2177                           
  2178  0070                     putch@c:	
  2179                           ; 2 bytes @ 0x0
  2180                           
  2181  0070                     i1ES_Timer_InitTimer@NewTime:	
  2182                           ; 1 bytes @ 0x0
  2183                           
  2184                           
  2185                           ; 2 bytes @ 0x0
  2186  0070                     	ds	2
  2187  0072                     ??i1_ES_Timer_InitTimer:	
  2188                           
  2189                           ; 1 bytes @ 0x2
  2190  0072                     	ds	4
  2191  0076                     i1ES_Timer_InitTimer@Num:	
  2192                           
  2193                           ; 1 bytes @ 0x6
  2194  0076                     	ds	1
  2195  0077                     ??_EOTResponse:	
  2196  0077                     ??_ISR:	
  2197                           ; 1 bytes @ 0x7
  2198                           
  2199                           
  2200                           ; 1 bytes @ 0x7
  2201  0077                     	ds	2
  2202                           
  2203                           	psect	cstackBANK0
  2204  0020                     __pcstackBANK0:	
  2205  0020                     ??_Check4Keystroke:	
  2206  0020                     ?_ES_InitQueue:	
  2207                           ; 1 bytes @ 0x0
  2208                           
  2209  0020                     ?_ES_GetMSBitSet:	
  2210                           ; 1 bytes @ 0x0
  2211                           
  2212  0020                     ??_InitSPI:	
  2213                           ; 1 bytes @ 0x0
  2214                           
  2215  0020                     ??_putch:	
  2216                           ; 1 bytes @ 0x0
  2217                           
  2218  0020                     ??_ES_CheckUserEvents:	
  2219                           ; 1 bytes @ 0x0
  2220                           
  2221  0020                     ?__HW_Timer_Init:	
  2222                           ; 1 bytes @ 0x0
  2223                           
  2224  0020                     ?_ES_Timer_InitTimer:	
  2225                           ; 1 bytes @ 0x0
  2226                           
  2227  0020                     ?___lbmod:	
  2228                           ; 1 bytes @ 0x0
  2229                           
  2230  0020                     ?_printf:	
  2231                           ; 1 bytes @ 0x0
  2232                           
  2233  0020                     ?___awmod:	
  2234                           ; 2 bytes @ 0x0
  2235                           
  2236  0020                     ES_InitQueue@BlockSize:	
  2237                           ; 2 bytes @ 0x0
  2238                           
  2239  0020                     ___lbmod@divisor:	
  2240                           ; 1 bytes @ 0x0
  2241                           
  2242  0020                     ES_GetMSBitSet@Val2Check:	
  2243                           ; 1 bytes @ 0x0
  2244                           
  2245  0020                     __HW_Timer_Init@Rate:	
  2246                           ; 2 bytes @ 0x0
  2247                           
  2248  0020                     ES_Timer_InitTimer@NewTime:	
  2249                           ; 2 bytes @ 0x0
  2250                           
  2251  0020                     printf@f:	
  2252                           ; 2 bytes @ 0x0
  2253                           
  2254  0020                     ___awmod@divisor:	
  2255                           ; 2 bytes @ 0x0
  2256                           
  2257                           
  2258                           ; 2 bytes @ 0x0
  2259  0020                     	ds	1
  2260  0021                     ??_ES_InitQueue:	
  2261  0021                     ??___lbmod:	
  2262                           ; 1 bytes @ 0x1
  2263                           
  2264                           
  2265                           ; 1 bytes @ 0x1
  2266  0021                     	ds	1
  2267  0022                     ?_ES_Timer_Init:	
  2268  0022                     ??_ES_GetMSBitSet:	
  2269                           ; 1 bytes @ 0x2
  2270                           
  2271  0022                     ??_printf:	
  2272                           ; 1 bytes @ 0x2
  2273                           
  2274  0022                     ??__HW_Timer_Init:	
  2275                           ; 1 bytes @ 0x2
  2276                           
  2277  0022                     ??_ES_Timer_InitTimer:	
  2278                           ; 1 bytes @ 0x2
  2279                           
  2280  0022                     ES_CheckUserEvents@i:	
  2281                           ; 1 bytes @ 0x2
  2282                           
  2283  0022                     ES_InitQueue@pBlock:	
  2284                           ; 1 bytes @ 0x2
  2285                           
  2286  0022                     ES_Timer_Init@Rate:	
  2287                           ; 1 bytes @ 0x2
  2288                           
  2289  0022                     ___awmod@dividend:	
  2290                           ; 2 bytes @ 0x2
  2291                           
  2292                           
  2293                           ; 2 bytes @ 0x2
  2294  0022                     	ds	1
  2295  0023                     ES_InitQueue@pThisQueue:	
  2296  0023                     ___lbmod@dividend:	
  2297                           ; 1 bytes @ 0x3
  2298                           
  2299                           
  2300                           ; 1 bytes @ 0x3
  2301  0023                     	ds	1
  2302  0024                     ??_ES_Timer_Init:	
  2303  0024                     ??___awmod:	
  2304                           ; 1 bytes @ 0x4
  2305                           
  2306  0024                     ___lbmod@counter:	
  2307                           ; 1 bytes @ 0x4
  2308                           
  2309                           
  2310                           ; 1 bytes @ 0x4
  2311  0024                     	ds	1
  2312  0025                     printf@ap:	
  2313  0025                     ___awmod@counter:	
  2314                           ; 1 bytes @ 0x5
  2315                           
  2316  0025                     ___lbmod@rem:	
  2317                           ; 1 bytes @ 0x5
  2318                           
  2319                           
  2320                           ; 1 bytes @ 0x5
  2321  0025                     	ds	1
  2322  0026                     ES_GetMSBitSet@ReturnVal:	
  2323  0026                     ES_Timer_InitTimer@Num:	
  2324                           ; 1 bytes @ 0x6
  2325                           
  2326  0026                     printf@c:	
  2327                           ; 1 bytes @ 0x6
  2328                           
  2329  0026                     ___awmod@sign:	
  2330                           ; 1 bytes @ 0x6
  2331                           
  2332                           
  2333                           ; 1 bytes @ 0x6
  2334  0026                     	ds	1
  2335  0027                     ?___bmul:	
  2336  0027                     ?_RunToggleService:	
  2337                           ; 1 bytes @ 0x7
  2338                           
  2339  0027                     ?_RunSPI_Service:	
  2340                           ; 3 bytes @ 0x7
  2341                           
  2342  0027                     ES_GetMSBitSet@Nybble2Test:	
  2343                           ; 3 bytes @ 0x7
  2344                           
  2345  0027                     ___bmul@multiplicand:	
  2346                           ; 1 bytes @ 0x7
  2347                           
  2348  0027                     RunToggleService@ThisEvent:	
  2349                           ; 1 bytes @ 0x7
  2350                           
  2351  0027                     RunSPI_Service@ThisEvent:	
  2352                           ; 3 bytes @ 0x7
  2353                           
  2354                           
  2355                           ; 3 bytes @ 0x7
  2356  0027                     	ds	1
  2357  0028                     ??___bmul:	
  2358  0028                     ES_GetMSBitSet@LoopCntr:	
  2359                           ; 1 bytes @ 0x8
  2360                           
  2361                           
  2362                           ; 1 bytes @ 0x8
  2363  0028                     	ds	1
  2364  0029                     ___bmul@product:	
  2365                           
  2366                           ; 1 bytes @ 0x9
  2367  0029                     	ds	1
  2368  002A                     ??_RunToggleService:	
  2369  002A                     ??_RunSPI_Service:	
  2370                           ; 1 bytes @ 0xA
  2371                           
  2372  002A                     ___bmul@multiplier:	
  2373                           ; 1 bytes @ 0xA
  2374                           
  2375  002A                     RunToggleService@ReturnEvent:	
  2376                           ; 1 bytes @ 0xA
  2377                           
  2378  002A                     RunSPI_Service@ReturnEvent:	
  2379                           ; 3 bytes @ 0xA
  2380                           
  2381                           
  2382                           ; 3 bytes @ 0xA
  2383  002A                     	ds	1
  2384  002B                     ?_ES_DeQueue:	
  2385  002B                     ?_ES_EnQueueFIFO:	
  2386                           ; 1 bytes @ 0xB
  2387                           
  2388  002B                     ES_DeQueue@pReturnEvent:	
  2389                           ; 1 bytes @ 0xB
  2390                           
  2391  002B                     ES_EnQueueFIFO@Event2Add:	
  2392                           ; 1 bytes @ 0xB
  2393                           
  2394                           
  2395                           ; 3 bytes @ 0xB
  2396  002B                     	ds	1
  2397  002C                     ??_ES_DeQueue:	
  2398                           
  2399                           ; 1 bytes @ 0xC
  2400  002C                     	ds	2
  2401  002E                     ??_ES_EnQueueFIFO:	
  2402                           
  2403                           ; 1 bytes @ 0xE
  2404  002E                     	ds	3
  2405  0031                     ES_DeQueue@SaveCrit:	
  2406                           
  2407                           ; 1 bytes @ 0x11
  2408  0031                     	ds	1
  2409  0032                     ES_EnQueueFIFO@SaveCrit:	
  2410  0032                     ES_DeQueue@NumLeft:	
  2411                           ; 1 bytes @ 0x12
  2412                           
  2413                           
  2414                           ; 1 bytes @ 0x12
  2415  0032                     	ds	1
  2416  0033                     ES_EnQueueFIFO@pBlock:	
  2417  0033                     ES_DeQueue@pBlock:	
  2418                           ; 1 bytes @ 0x13
  2419                           
  2420                           
  2421                           ; 1 bytes @ 0x13
  2422  0033                     	ds	1
  2423  0034                     ES_EnQueueFIFO@pThisQueue:	
  2424  0034                     ES_DeQueue@pThisQueue:	
  2425                           ; 1 bytes @ 0x14
  2426                           
  2427                           
  2428                           ; 1 bytes @ 0x14
  2429  0034                     	ds	1
  2430  0035                     ?_ES_PostToService:	
  2431  0035                     ES_PostToService@TheEvent:	
  2432                           ; 1 bytes @ 0x15
  2433                           
  2434                           
  2435                           ; 3 bytes @ 0x15
  2436  0035                     	ds	3
  2437  0038                     ??_ES_PostToService:	
  2438                           
  2439                           ; 1 bytes @ 0x18
  2440  0038                     	ds	4
  2441  003C                     ES_PostToService@WhichService:	
  2442                           
  2443                           ; 1 bytes @ 0x1C
  2444  003C                     	ds	1
  2445  003D                     ?_InitToggleService:	
  2446  003D                     ?_InitSPI_Service:	
  2447                           ; 1 bytes @ 0x1D
  2448                           
  2449  003D                     ?_PostToggleService:	
  2450                           ; 1 bytes @ 0x1D
  2451                           
  2452  003D                     ?_PostSPI_Service:	
  2453                           ; 1 bytes @ 0x1D
  2454                           
  2455  003D                     InitToggleService@Priority:	
  2456                           ; 1 bytes @ 0x1D
  2457                           
  2458  003D                     InitSPI_Service@Priority:	
  2459                           ; 1 bytes @ 0x1D
  2460                           
  2461  003D                     PostToggleService@ThisEvent:	
  2462                           ; 1 bytes @ 0x1D
  2463                           
  2464  003D                     PostSPI_Service@ThisEvent:	
  2465                           ; 3 bytes @ 0x1D
  2466                           
  2467                           
  2468                           ; 3 bytes @ 0x1D
  2469  003D                     	ds	1
  2470  003E                     ??_InitToggleService:	
  2471  003E                     ??_InitSPI_Service:	
  2472                           ; 1 bytes @ 0x1E
  2473                           
  2474                           
  2475                           ; 1 bytes @ 0x1E
  2476  003E                     	ds	1
  2477  003F                     InitToggleService@ThisEvent:	
  2478                           
  2479                           ; 3 bytes @ 0x1F
  2480  003F                     	ds	1
  2481  0040                     ??_ES_Timer_Tick_Resp:	
  2482  0040                     ??_PostToggleService:	
  2483                           ; 1 bytes @ 0x20
  2484                           
  2485  0040                     ??_PostSPI_Service:	
  2486                           ; 1 bytes @ 0x20
  2487                           
  2488                           
  2489                           ; 1 bytes @ 0x20
  2490  0040                     	ds	2
  2491  0042                     ?_ES_Initialize:	
  2492  0042                     ES_Initialize@NewRate:	
  2493                           ; 1 bytes @ 0x22
  2494                           
  2495                           
  2496                           ; 2 bytes @ 0x22
  2497  0042                     	ds	2
  2498  0044                     ??__HW_Process_Pending_Ints:	
  2499  0044                     ??_ES_Initialize:	
  2500                           ; 1 bytes @ 0x24
  2501                           
  2502  0044                     ??_ES_Run:	
  2503                           ; 1 bytes @ 0x24
  2504                           
  2505                           
  2506                           ; 1 bytes @ 0x24
  2507  0044                     	ds	4
  2508  0048                     ES_Run@HighestPrior:	
  2509                           
  2510                           ; 1 bytes @ 0x28
  2511  0048                     	ds	3
  2512  004B                     ES_Initialize@i:	
  2513                           
  2514                           ; 1 bytes @ 0x2B
  2515  004B                     	ds	1
  2516  004C                     ??_main:	
  2517                           
  2518                           ; 1 bytes @ 0x2C
  2519  004C                     	ds	1
  2520  004D                     main@ErrorType:	
  2521                           
  2522                           ; 1 bytes @ 0x2D
  2523  004D                     	ds	1
  2524                           
  2525                           	psect	maintext
  2526  0336                     __pmaintext:	
  2527 ;;
  2528 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2529 ;;
  2530 ;; *************** function _main *****************
  2531 ;; Defined at:
  2532 ;;		line 24 in file "main.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;		None
  2535 ;; Auto vars:     Size  Location     Type
  2536 ;;  ErrorType       1   45[BANK0 ] enum E8473
  2537 ;; Return value:  Size  Location     Type
  2538 ;;                  2  341[None  ] int 
  2539 ;; Registers used:
  2540 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2541 ;; Tracked objects:
  2542 ;;		On entry : B1F/0
  2543 ;;		On exit  : 0/0
  2544 ;;		Unchanged: 0/0
  2545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2547 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2548 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2549 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2550 ;;Total ram usage:        2 bytes
  2551 ;; Hardware stack levels required when called:   10
  2552 ;; This function calls:
  2553 ;;		_ES_Initialize
  2554 ;;		_ES_Run
  2555 ;;		_printf
  2556 ;; This function is called by:
  2557 ;;		Startup code after reset
  2558 ;; This function uses a non-reentrant model
  2559 ;;
  2560                           
  2561                           
  2562                           ;psect for function _main
  2563  0336                     _main:	
  2564                           
  2565                           ;main.c: 27: IRCF0 = 1;
  2566                           
  2567                           ;incstack = 0
  2568                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2569  0336  0021               	movlb	1	; select bank1
  2570  0337  1599               	bsf	25,3	;volatile
  2571                           
  2572                           ;main.c: 28: IRCF1 = 1;
  2573  0338  1619               	bsf	25,4	;volatile
  2574                           
  2575                           ;main.c: 29: IRCF2 = 1;
  2576  0339  1699               	bsf	25,5	;volatile
  2577                           
  2578                           ;main.c: 30: IRCF3 = 1;
  2579  033A  1719               	bsf	25,6	;volatile
  2580                           
  2581                           ;main.c: 37: ES_Return_t ErrorType;
  2582                           ;main.c: 53: ErrorType = ES_Initialize(ES_Timer_RATE_1mS);
  2583  033B  303F               	movlw	63
  2584  033C  0020               	movlb	0	; select bank0
  2585  033D  00C2               	movwf	ES_Initialize@NewRate
  2586  033E  309C               	movlw	156
  2587  033F  00C3               	movwf	ES_Initialize@NewRate+1
  2588  0340  3181  210A  3183   	fcall	_ES_Initialize
  2589  0343  0020               	movlb	0	; select bank0
  2590  0344  00CC               	movwf	??_main
  2591  0345  084C               	movf	??_main,w
  2592  0346  00CD               	movwf	main@ErrorType
  2593                           
  2594                           ;main.c: 54: if ( ErrorType == Success ) {
  2595  0347  084D               	movf	main@ErrorType,w
  2596  0348  1D03               	btfss	3,2
  2597  0349  2B75               	goto	l2177
  2598                           
  2599                           ;main.c: 56: ErrorType = ES_Run();
  2600  034A  3182  2277  3183   	fcall	_ES_Run
  2601  034D  0020               	movlb	0	; select bank0
  2602  034E  00CC               	movwf	??_main
  2603  034F  084C               	movf	??_main,w
  2604  0350  00CD               	movwf	main@ErrorType
  2605                           
  2606                           ;main.c: 58: }
  2607                           ;main.c: 60: switch (ErrorType){
  2608  0351  2B75               	goto	l2177
  2609  0352                     l2167:	
  2610                           ;main.c: 61: case FailedPost:
  2611                           
  2612                           
  2613                           ;main.c: 62: printf("Failed on attempt to Post\n");
  2614  0352  30B1               	movlw	low (STR_1| (0+32768))
  2615  0353  00A0               	movwf	printf@f
  2616  0354  3080               	movlw	high (STR_1| (0+32768))
  2617  0355  00A1               	movwf	printf@f+1
  2618  0356  3185  253E  3183   	fcall	_printf
  2619                           
  2620                           ;main.c: 63: break;
  2621  0359  2B81               	goto	l349
  2622  035A                     l2169:	
  2623                           ;main.c: 64: case FailedPointer:
  2624                           
  2625                           
  2626                           ;main.c: 65: printf("Failed on NULL pointer\n");
  2627  035A  30CC               	movlw	low (STR_2| (0+32768))
  2628  035B  0020               	movlb	0	; select bank0
  2629  035C  00A0               	movwf	printf@f
  2630  035D  3080               	movlw	high (STR_2| (0+32768))
  2631  035E  00A1               	movwf	printf@f+1
  2632  035F  3185  253E  3183   	fcall	_printf
  2633                           
  2634                           ;main.c: 66: break;
  2635  0362  2B81               	goto	l349
  2636  0363                     l2171:	
  2637                           ;main.c: 67: case FailedInit:
  2638                           
  2639                           
  2640                           ;main.c: 68: printf("Failed Initialization\n");
  2641  0363  30E4               	movlw	low (STR_3| (0+32768))
  2642  0364  0020               	movlb	0	; select bank0
  2643  0365  00A0               	movwf	printf@f
  2644  0366  3080               	movlw	high (STR_3| (0+32768))
  2645  0367  00A1               	movwf	printf@f+1
  2646  0368  3185  253E  3183   	fcall	_printf
  2647                           
  2648                           ;main.c: 69: break;
  2649  036B  2B81               	goto	l349
  2650  036C                     l2173:	
  2651                           ;main.c: 70: default:
  2652                           
  2653                           
  2654                           ;main.c: 71: printf("Other Failure\n");
  2655  036C  30FB               	movlw	low (STR_4| (0+32768))
  2656  036D  0020               	movlb	0	; select bank0
  2657  036E  00A0               	movwf	printf@f
  2658  036F  3080               	movlw	high (STR_4| (0+32768))
  2659  0370  00A1               	movwf	printf@f+1
  2660  0371  3185  253E  3183   	fcall	_printf
  2661                           
  2662                           ;main.c: 73: }
  2663                           
  2664                           ;main.c: 72: break;
  2665  0374  2B81               	goto	l349
  2666  0375                     l2177:	
  2667  0375  0020               	movlb	0	; select bank0
  2668  0376  084D               	movf	main@ErrorType,w
  2669                           
  2670                           ; Switch size 1, requested type "space"
  2671                           ; Number of cases is 3, Range of values is 1 to 5
  2672                           ; switch strategies available:
  2673                           ; Name         Instructions Cycles
  2674                           ; simple_byte           10     6 (average)
  2675                           ; direct_byte           19     9 (fixed)
  2676                           ; jumptable            263     9 (fixed)
  2677                           ;	Chosen strategy is simple_byte
  2678  0377  3A01               	xorlw	1	; case 1
  2679  0378  1903               	skipnz
  2680  0379  2B52               	goto	l2167
  2681  037A  3A02               	xorlw	2	; case 3
  2682  037B  1903               	skipnz
  2683  037C  2B5A               	goto	l2169
  2684  037D  3A06               	xorlw	6	; case 5
  2685  037E  1903               	skipnz
  2686  037F  2B63               	goto	l2171
  2687  0380  2B6C               	goto	l2173
  2688  0381                     l349:	
  2689                           ;main.c: 74: for(;;)
  2690                           
  2691                           
  2692                           ;main.c: 75: ;
  2693  0381  2B81               	goto	l349
  2694  0382                     __end_of_main:	
  2695                           
  2696                           	psect	text1
  2697  053E                     __ptext1:	
  2698 ;; *************** function _printf *****************
  2699 ;; Defined at:
  2700 ;;		line 464 in file "/Applications/microchip/xc8/v1.38/sources/common/doprnt.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  2703 ;;		 -> STR_4(15), STR_3(23), STR_2(24), STR_1(27), 
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;  tmpval          4    0        struct .
  2706 ;;  cp              2    0        PTR const unsigned char 
  2707 ;;  len             2    0        unsigned int 
  2708 ;;  val             2    0        unsigned int 
  2709 ;;  c               1    6[BANK0 ] char 
  2710 ;;  ap              1    5[BANK0 ] PTR void [1]
  2711 ;;		 -> ?_printf(2), 
  2712 ;;  flag            1    0        unsigned char 
  2713 ;;  prec            1    0        char 
  2714 ;; Return value:  Size  Location     Type
  2715 ;;                  2    0[BANK0 ] int 
  2716 ;; Registers used:
  2717 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2718 ;; Tracked objects:
  2719 ;;		On entry : 0/0
  2720 ;;		On exit  : 0/0
  2721 ;;		Unchanged: 0/0
  2722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2723 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2724 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2725 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2726 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2727 ;;Total ram usage:        7 bytes
  2728 ;; Hardware stack levels used:    1
  2729 ;; Hardware stack levels required when called:    4
  2730 ;; This function calls:
  2731 ;;		_putch
  2732 ;; This function is called by:
  2733 ;;		_main
  2734 ;; This function uses a non-reentrant model
  2735 ;;
  2736                           
  2737                           
  2738                           ;psect for function _printf
  2739  053E                     _printf:	
  2740                           
  2741                           ;doprnt.c: 466: va_list ap;
  2742                           ;doprnt.c: 499: signed char c;
  2743                           ;doprnt.c: 506: signed char prec;
  2744                           ;doprnt.c: 508: unsigned char flag;
  2745                           ;doprnt.c: 523: union {
  2746                           ;doprnt.c: 524: unsigned long vd;
  2747                           ;doprnt.c: 525: double integ;
  2748                           ;doprnt.c: 526: } tmpval;
  2749                           ;doprnt.c: 528: unsigned int val;
  2750                           ;doprnt.c: 529: unsigned len;
  2751                           ;doprnt.c: 530: const char * cp;
  2752                           ;doprnt.c: 533: *ap = __va_start();
  2753                           
  2754                           ;incstack = 0
  2755                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2756  053E  3022               	movlw	(low ((?_printf| 0+2)))& (0+255)
  2757  053F  0020               	movlb	0	; select bank0
  2758  0540  00A2               	movwf	??_printf
  2759  0541  0822               	movf	??_printf,w
  2760  0542  00A5               	movwf	printf@ap
  2761  0543                     l1973:	
  2762                           ;doprnt.c: 543: }
  2763                           ;doprnt.c: 1422: {
  2764                           
  2765                           ;doprnt.c: 542: continue;
  2766                           
  2767                           ;doprnt.c: 536: while(c = *f++) {
  2768                           
  2769  0543  0020               	movlb	0	; select bank0
  2770  0544  0821               	movf	printf@f+1,w
  2771  0545  00A3               	movwf	??_printf+1
  2772  0546  0820               	movf	printf@f,w
  2773  0547  00A2               	movwf	??_printf
  2774  0548  0AA0               	incf	printf@f,f
  2775  0549  1903               	skipnz
  2776  054A  0AA1               	incf	printf@f+1,f
  2777  054B  0822               	movf	??_printf,w
  2778  054C  0084               	movwf	4
  2779  054D  0823               	movf	??_printf+1,w
  2780  054E  0085               	movwf	5
  2781  054F  0800               	movf	0,w	;code access
  2782  0550  00A4               	movwf	??_printf+2
  2783  0551  0824               	movf	??_printf+2,w
  2784  0552  00A6               	movwf	printf@c
  2785  0553  0826               	movf	printf@c,w
  2786  0554  1903               	btfsc	3,2
  2787  0555  0008               	return
  2788                           
  2789                           ;doprnt.c: 540: {
  2790                           ;doprnt.c: 541: (putch(c) );
  2791  0556  0826               	movf	printf@c,w
  2792  0557  3186  2608  3185   	fcall	_putch
  2793  055A  2D43               	goto	l1973
  2794  055B                     __end_of_printf:	
  2795                           ;doprnt.c: 1469: }
  2796                           ;doprnt.c: 1533: }
  2797                           ;doprnt.c: 1540: return 0;
  2798                           ;	Return value of _printf is never used
  2799                           
  2800                           
  2801                           	psect	text2
  2802  0608                     __ptext2:	
  2803 ;; *************** function _putch *****************
  2804 ;; Defined at:
  2805 ;;		line 7 in file "/Applications/microchip/xc8/v1.38/sources/common/putch.c"
  2806 ;; Parameters:    Size  Location     Type
  2807 ;;  c               1    wreg     unsigned char 
  2808 ;; Auto vars:     Size  Location     Type
  2809 ;;  c               1    0[COMMON] unsigned char 
  2810 ;; Return value:  Size  Location     Type
  2811 ;;                  1    wreg      void 
  2812 ;; Registers used:
  2813 ;;		wreg
  2814 ;; Tracked objects:
  2815 ;;		On entry : 0/0
  2816 ;;		On exit  : 0/0
  2817 ;;		Unchanged: 0/0
  2818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2823 ;;Total ram usage:        0 bytes
  2824 ;; Hardware stack levels used:    1
  2825 ;; Hardware stack levels required when called:    3
  2826 ;; This function calls:
  2827 ;;		Nothing
  2828 ;; This function is called by:
  2829 ;;		_printf
  2830 ;; This function uses a non-reentrant model
  2831 ;;
  2832                           
  2833                           
  2834                           ;psect for function _putch
  2835  0608                     _putch:	
  2836                           
  2837                           ;incstack = 0
  2838                           ; Regs used in _putch: [wreg]
  2839  0608  0008               	return
  2840  0609                     __end_of_putch:	
  2841                           
  2842                           	psect	text3
  2843  0277                     __ptext3:	
  2844 ;; *************** function _ES_Run *****************
  2845 ;; Defined at:
  2846 ;;		line 277 in file "ES_Framework.c"
  2847 ;; Parameters:    Size  Location     Type
  2848 ;;		None
  2849 ;; Auto vars:     Size  Location     Type
  2850 ;;  HighestPrior    1   40[BANK0 ] unsigned char 
  2851 ;; Return value:  Size  Location     Type
  2852 ;;                  1    wreg      enum E1983
  2853 ;; Registers used:
  2854 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2855 ;; Tracked objects:
  2856 ;;		On entry : 0/0
  2857 ;;		On exit  : 0/0
  2858 ;;		Unchanged: 0/0
  2859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2861 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2862 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2863 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2864 ;;Total ram usage:        5 bytes
  2865 ;; Hardware stack levels used:    1
  2866 ;; Hardware stack levels required when called:    9
  2867 ;; This function calls:
  2868 ;;		_ES_CheckUserEvents
  2869 ;;		_ES_DeQueue
  2870 ;;		_ES_GetMSBitSet
  2871 ;;		_RunSPI_Service
  2872 ;;		_RunToggleService
  2873 ;;		__HW_Process_Pending_Ints
  2874 ;; This function is called by:
  2875 ;;		_main
  2876 ;; This function uses a non-reentrant model
  2877 ;;
  2878                           
  2879                           
  2880                           ;psect for function _ES_Run
  2881  0277                     _ES_Run:	
  2882                           
  2883                           ;ES_Framework.c: 287: while( (_HW_Process_Pending_Ints()) && (Ready != 0)){
  2884                           
  2885                           ;incstack = 0
  2886                           ; Regs used in _ES_Run: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2887                           ;ES_Framework.c: 279: uint8_t HighestPrior;
  2888                           ;ES_Framework.c: 280: static ES_Event ThisEvent;
  2889                           ;ES_Framework.c: 282: while(1){
  2890  0277  2AD5               	goto	l1949
  2891  0278                     l1937:	
  2892                           
  2893                           ;ES_Framework.c: 288: HighestPrior = ES_GetMSBitSet(Ready);
  2894  0278  0020               	movlb	0	; select bank0
  2895  0279  0858               	movf	_Ready+1,w
  2896  027A  00A1               	movwf	ES_GetMSBitSet@Val2Check+1
  2897  027B  0857               	movf	_Ready,w
  2898  027C  00A0               	movwf	ES_GetMSBitSet@Val2Check
  2899  027D  3183  2382  3182   	fcall	_ES_GetMSBitSet
  2900  0280  0020               	movlb	0	; select bank0
  2901  0281  00C4               	movwf	??_ES_Run
  2902  0282  0844               	movf	??_ES_Run,w
  2903  0283  00C8               	movwf	ES_Run@HighestPrior
  2904                           
  2905                           ;ES_Framework.c: 289: if ( ES_DeQueue( EventQueues[HighestPrior].pMem, &ThisEvent ) == 0
      +                           ){
  2906  0284  3063               	movlw	(low (ES_Run@ThisEvent| 0))& (0+255)
  2907  0285  00C4               	movwf	??_ES_Run
  2908  0286  0844               	movf	??_ES_Run,w
  2909  0287  00AB               	movwf	ES_DeQueue@pReturnEvent
  2910  0288  0848               	movf	ES_Run@HighestPrior,w
  2911  0289  00C5               	movwf	??_ES_Run+1
  2912  028A  01C6               	clrf	??_ES_Run+2
  2913  028B  35C5               	lslf	??_ES_Run+1,f
  2914  028C  0DC6               	rlf	??_ES_Run+2,f
  2915  028D  30A9               	movlw	low (_EventQueues| (0+32768))
  2916  028E  0745               	addwf	??_ES_Run+1,w
  2917  028F  0084               	movwf	4
  2918  0290  3080               	movlw	high (_EventQueues| (0+32768))
  2919  0291  3D46               	addwfc	??_ES_Run+2,w
  2920  0292  0085               	movwf	5
  2921  0293  0800               	movf	0,w	;code access
  2922  0294  3182  2204  3182   	fcall	_ES_DeQueue
  2923  0297  3A00               	xorlw	0
  2924  0298  1D03               	skipz
  2925  0299  2AB0               	goto	l1943
  2926                           
  2927                           ;ES_Framework.c: 290: Ready &= ~BitNum2SetMask[HighestPrior];
  2928  029A  0020               	movlb	0	; select bank0
  2929  029B  0848               	movf	ES_Run@HighestPrior,w
  2930  029C  00C4               	movwf	??_ES_Run
  2931  029D  01C5               	clrf	??_ES_Run+1
  2932  029E  35C4               	lslf	??_ES_Run,f
  2933  029F  0DC5               	rlf	??_ES_Run+1,f
  2934  02A0  3052               	movlw	low (_BitNum2SetMask| (0+32768))
  2935  02A1  0744               	addwf	??_ES_Run,w
  2936  02A2  0084               	movwf	4
  2937  02A3  3080               	movlw	high (_BitNum2SetMask| (0+32768))
  2938  02A4  3D45               	addwfc	??_ES_Run+1,w
  2939  02A5  0085               	movwf	5
  2940  02A6  3F00               	moviw [0]fsr0
  2941  02A7  00C6               	movwf	??_ES_Run+2
  2942  02A8  3F01               	moviw [1]fsr0
  2943  02A9  00C7               	movwf	??_ES_Run+3
  2944  02AA  09C6               	comf	??_ES_Run+2,f
  2945  02AB  09C7               	comf	??_ES_Run+3,f
  2946  02AC  0846               	movf	??_ES_Run+2,w
  2947  02AD  05D7               	andwf	_Ready,f
  2948  02AE  0847               	movf	??_ES_Run+3,w
  2949  02AF  05D8               	andwf	_Ready+1,f
  2950  02B0                     l1943:	
  2951                           
  2952                           ;ES_Framework.c: 291: }
  2953                           ;ES_Framework.c: 292: if( ServDescList[HighestPrior].RunFunc(ThisEvent).EventType !=
  2954                           ;ES_Framework.c: 293: ES_NO_EVENT) {
  2955  02B0  0020               	movlb	0	; select bank0
  2956  02B1  0863               	movf	ES_Run@ThisEvent,w
  2957  02B2  00A7               	movwf	RunSPI_Service@ThisEvent
  2958  02B3  0864               	movf	ES_Run@ThisEvent+1,w
  2959  02B4  00A8               	movwf	RunSPI_Service@ThisEvent+1
  2960  02B5  0865               	movf	ES_Run@ThisEvent+2,w
  2961  02B6  00A9               	movwf	RunSPI_Service@ThisEvent+2
  2962  02B7  0848               	movf	ES_Run@HighestPrior,w
  2963  02B8  00C4               	movwf	??_ES_Run
  2964  02B9  01C5               	clrf	??_ES_Run+1
  2965  02BA  35C4               	lslf	??_ES_Run,f
  2966  02BB  0DC5               	rlf	??_ES_Run+1,f
  2967  02BC  35C4               	lslf	??_ES_Run,f
  2968  02BD  0DC5               	rlf	??_ES_Run+1,f
  2969  02BE  0844               	movf	??_ES_Run,w
  2970  02BF  3E02               	addlw	2
  2971  02C0  00C6               	movwf	??_ES_Run+2
  2972  02C1  3000               	movlw	0
  2973  02C2  3D45               	addwfc	??_ES_Run+1,w
  2974  02C3  00C7               	movwf	??_ES_Run+3
  2975  02C4  30A1               	movlw	low (_ServDescList| (0+32768))
  2976  02C5  0746               	addwf	??_ES_Run+2,w
  2977  02C6  0084               	movwf	4
  2978  02C7  3080               	movlw	high (_ServDescList| (0+32768))
  2979  02C8  3D47               	addwfc	??_ES_Run+3,w
  2980  02C9  0085               	movwf	5
  2981  02CA  3F01               	moviw [1]fsr0
  2982  02CB  008A               	movwf	10
  2983  02CC  3F00               	moviw [0]fsr0
  2984  02CD  000A               	callw
  2985  02CE  3182               	pagesel	$
  2986  02CF  0020               	movlb	0	; select bank0
  2987  02D0  0827               	movf	?_RunSPI_Service,w
  2988  02D1  1903               	btfsc	3,2
  2989  02D2  2AD5               	goto	l1949
  2990                           
  2991                           ;ES_Framework.c: 294: return FailedRun;
  2992  02D3  3002               	movlw	2
  2993  02D4  0008               	return
  2994  02D5                     l1949:	
  2995  02D5  3185  25CC  3182   	fcall	__HW_Process_Pending_Ints
  2996  02D8  3A00               	xorlw	0
  2997  02D9  1903               	skipnz
  2998  02DA  2AE0               	goto	l1953
  2999  02DB  0020               	movlb	0	; select bank0
  3000  02DC  0857               	movf	_Ready,w
  3001  02DD  0458               	iorwf	_Ready+1,w
  3002  02DE  1D03               	btfss	3,2
  3003  02DF  2A78               	goto	l1937
  3004  02E0                     l1953:	
  3005                           
  3006                           ;ES_Framework.c: 295: }
  3007                           ;ES_Framework.c: 296: }
  3008                           ;ES_Framework.c: 299: ES_CheckUserEvents();
  3009  02E0  3185  2520  3182   	fcall	_ES_CheckUserEvents
  3010  02E3  2AD5               	goto	l1949
  3011  02E4                     __end_of_ES_Run:	
  3012                           ;ES_Framework.c: 300: }
  3013                           ;ES_Framework.c: 302: return Success;
  3014                           
  3015                           
  3016                           	psect	text4
  3017  05CC                     __ptext4:	
  3018 ;; *************** function __HW_Process_Pending_Ints *****************
  3019 ;; Defined at:
  3020 ;;		line 212 in file "ES_Port.c"
  3021 ;; Parameters:    Size  Location     Type
  3022 ;;		None
  3023 ;; Auto vars:     Size  Location     Type
  3024 ;;		None
  3025 ;; Return value:  Size  Location     Type
  3026 ;;                  1    wreg      unsigned char 
  3027 ;; Registers used:
  3028 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3029 ;; Tracked objects:
  3030 ;;		On entry : 0/0
  3031 ;;		On exit  : 0/0
  3032 ;;		Unchanged: 0/0
  3033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3038 ;;Total ram usage:        0 bytes
  3039 ;; Hardware stack levels used:    1
  3040 ;; Hardware stack levels required when called:    8
  3041 ;; This function calls:
  3042 ;;		_ES_Timer_Tick_Resp
  3043 ;; This function is called by:
  3044 ;;		_ES_Run
  3045 ;; This function uses a non-reentrant model
  3046 ;;
  3047                           
  3048                           
  3049                           ;psect for function __HW_Process_Pending_Ints
  3050  05CC                     __HW_Process_Pending_Ints:	
  3051  05CC                     l1821:	
  3052                           ;ES_Port.c: 214: while (TickCount > 0)
  3053                           
  3054                           ;incstack = 0
  3055                           ; Regs used in __HW_Process_Pending_Ints: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3056                           
  3057  05CC  0020               	movlb	0	; select bank0
  3058  05CD  0862               	movf	_TickCount,w	;volatile
  3059  05CE  1903               	btfsc	3,2
  3060  05CF  2DD7               	goto	l1823
  3061                           
  3062                           ;ES_Port.c: 215: {
  3063                           ;ES_Port.c: 217: ES_Timer_Tick_Resp();
  3064  05D0  3181  2191  3185   	fcall	_ES_Timer_Tick_Resp
  3065                           
  3066                           ;ES_Port.c: 218: TickCount--;
  3067  05D3  3001               	movlw	1
  3068  05D4  0020               	movlb	0	; select bank0
  3069  05D5  02E2               	subwf	_TickCount,f	;volatile
  3070  05D6  2DCC               	goto	l1821
  3071  05D7                     l1823:	
  3072                           
  3073                           ;ES_Port.c: 219: }
  3074                           ;ES_Port.c: 221: return 1;
  3075  05D7  3001               	movlw	1
  3076  05D8  0008               	return
  3077  05D9                     __end_of__HW_Process_Pending_Ints:	
  3078                           
  3079                           	psect	text5
  3080  0191                     __ptext5:	
  3081 ;; *************** function _ES_Timer_Tick_Resp *****************
  3082 ;; Defined at:
  3083 ;;		line 284 in file "ES_Timers.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;		None
  3086 ;; Auto vars:     Size  Location     Type
  3087 ;;		None
  3088 ;; Return value:  Size  Location     Type
  3089 ;;                  1    wreg      void 
  3090 ;; Registers used:
  3091 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3092 ;; Tracked objects:
  3093 ;;		On entry : 0/0
  3094 ;;		On exit  : 0/0
  3095 ;;		Unchanged: 0/0
  3096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3099 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3100 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3101 ;;Total ram usage:        4 bytes
  3102 ;; Hardware stack levels used:    1
  3103 ;; Hardware stack levels required when called:    7
  3104 ;; This function calls:
  3105 ;;		Absolute function
  3106 ;;		_ES_GetMSBitSet
  3107 ;;		_PostSPI_Service
  3108 ;;		_PostToggleService
  3109 ;; This function is called by:
  3110 ;;		__HW_Process_Pending_Ints
  3111 ;; This function uses a non-reentrant model
  3112 ;;
  3113                           
  3114                           
  3115                           ;psect for function _ES_Timer_Tick_Resp
  3116  0191                     _ES_Timer_Tick_Resp:	
  3117                           
  3118                           ;ES_Timers.c: 286: static Tflag_t NeedsProcessing;
  3119                           ;ES_Timers.c: 287: static uint8_t NextTimer2Process;
  3120                           ;ES_Timers.c: 288: static ES_Event NewEvent;
  3121                           ;ES_Timers.c: 290: if (TMR_ActiveFlags != 0)
  3122                           
  3123                           ;incstack = 0
  3124                           ; Regs used in _ES_Timer_Tick_Resp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3125  0191  0020               	movlb	0	; select bank0
  3126  0192  085B               	movf	_TMR_ActiveFlags,w
  3127  0193  045C               	iorwf	_TMR_ActiveFlags+1,w
  3128  0194  1903               	btfsc	3,2
  3129  0195  0008               	return
  3130                           
  3131                           ;ES_Timers.c: 291: {
  3132                           ;ES_Timers.c: 293: NeedsProcessing = TMR_ActiveFlags;
  3133  0196  085C               	movf	_TMR_ActiveFlags+1,w
  3134  0197  00D2               	movwf	ES_Timer_Tick_Resp@NeedsProcessing+1
  3135  0198  085B               	movf	_TMR_ActiveFlags,w
  3136  0199  00D1               	movwf	ES_Timer_Tick_Resp@NeedsProcessing
  3137  019A                     l1699:	
  3138                           ;ES_Timers.c: 294: do{
  3139                           
  3140                           
  3141                           ;ES_Timers.c: 296: NextTimer2Process = ES_GetMSBitSet(NeedsProcessing);
  3142  019A  0852               	movf	ES_Timer_Tick_Resp@NeedsProcessing+1,w
  3143  019B  00A1               	movwf	ES_GetMSBitSet@Val2Check+1
  3144  019C  0851               	movf	ES_Timer_Tick_Resp@NeedsProcessing,w
  3145  019D  00A0               	movwf	ES_GetMSBitSet@Val2Check
  3146  019E  3183  2382  3181   	fcall	_ES_GetMSBitSet
  3147  01A1  0020               	movlb	0	; select bank0
  3148  01A2  00C0               	movwf	??_ES_Timer_Tick_Resp
  3149  01A3  0840               	movf	??_ES_Timer_Tick_Resp,w
  3150  01A4  00DF               	movwf	ES_Timer_Tick_Resp@NextTimer2Process
  3151                           
  3152                           ;ES_Timers.c: 298: if(--TMR_TimerArray[NextTimer2Process] == 0)
  3153  01A5  355F               	lslf	ES_Timer_Tick_Resp@NextTimer2Process,w
  3154  01A6  3EA0               	addlw	(low (_TMR_TimerArray| 0))& (0+255)
  3155  01A7  0086               	movwf	6
  3156  01A8  0187               	clrf	7
  3157  01A9  3001               	movlw	1
  3158  01AA  0281               	subwf	1,f
  3159  01AB  3141               	addfsr 1,1
  3160  01AC  3000               	movlw	0
  3161  01AD  3B81               	subwfb	1,f
  3162  01AE  317F               	addfsr 1,-1
  3163  01AF  0016               	moviw fsr1++
  3164  01B0  0401               	iorwf	1,w
  3165  01B1  1D03               	btfss	3,2
  3166  01B2  29EA               	goto	l1709
  3167                           
  3168                           ;ES_Timers.c: 299: {
  3169                           ;ES_Timers.c: 300: NewEvent.EventType = ES_TIMEOUT;
  3170  01B3  3003               	movlw	3
  3171  01B4  00C0               	movwf	??_ES_Timer_Tick_Resp
  3172  01B5  0840               	movf	??_ES_Timer_Tick_Resp,w
  3173  01B6  00CE               	movwf	ES_Timer_Tick_Resp@NewEvent
  3174                           
  3175                           ;ES_Timers.c: 301: NewEvent.EventParam = NextTimer2Process;
  3176  01B7  085F               	movf	ES_Timer_Tick_Resp@NextTimer2Process,w
  3177  01B8  00C0               	movwf	??_ES_Timer_Tick_Resp
  3178  01B9  01C1               	clrf	??_ES_Timer_Tick_Resp+1
  3179  01BA  0840               	movf	??_ES_Timer_Tick_Resp,w
  3180  01BB  00CF               	movwf	ES_Timer_Tick_Resp@NewEvent+1
  3181  01BC  0841               	movf	??_ES_Timer_Tick_Resp+1,w
  3182  01BD  00D0               	movwf	ES_Timer_Tick_Resp@NewEvent+2
  3183                           
  3184                           ;ES_Timers.c: 303: Timer2PostFunc[NextTimer2Process](NewEvent);
  3185  01BE  084E               	movf	ES_Timer_Tick_Resp@NewEvent,w
  3186  01BF  00BD               	movwf	PostSPI_Service@ThisEvent
  3187  01C0  084F               	movf	ES_Timer_Tick_Resp@NewEvent+1,w
  3188  01C1  00BE               	movwf	PostSPI_Service@ThisEvent+1
  3189  01C2  0850               	movf	ES_Timer_Tick_Resp@NewEvent+2,w
  3190  01C3  00BF               	movwf	PostSPI_Service@ThisEvent+2
  3191  01C4  085F               	movf	ES_Timer_Tick_Resp@NextTimer2Process,w
  3192  01C5  00C0               	movwf	??_ES_Timer_Tick_Resp
  3193  01C6  01C1               	clrf	??_ES_Timer_Tick_Resp+1
  3194  01C7  35C0               	lslf	??_ES_Timer_Tick_Resp,f
  3195  01C8  0DC1               	rlf	??_ES_Timer_Tick_Resp+1,f
  3196  01C9  3072               	movlw	low (_Timer2PostFunc| (0+32768))
  3197  01CA  0740               	addwf	??_ES_Timer_Tick_Resp,w
  3198  01CB  0084               	movwf	4
  3199  01CC  3080               	movlw	high (_Timer2PostFunc| (0+32768))
  3200  01CD  3D41               	addwfc	??_ES_Timer_Tick_Resp+1,w
  3201  01CE  0085               	movwf	5
  3202  01CF  3F01               	moviw [1]fsr0
  3203  01D0  008A               	movwf	10
  3204  01D1  3F00               	moviw [0]fsr0
  3205  01D2  000A               	callw
  3206  01D3  3181               	pagesel	$
  3207                           
  3208                           ;ES_Timers.c: 305: TMR_ActiveFlags &= ~BitNum2SetMask[NextTimer2Process];
  3209  01D4  0020               	movlb	0	; select bank0
  3210  01D5  085F               	movf	ES_Timer_Tick_Resp@NextTimer2Process,w
  3211  01D6  00C0               	movwf	??_ES_Timer_Tick_Resp
  3212  01D7  01C1               	clrf	??_ES_Timer_Tick_Resp+1
  3213  01D8  35C0               	lslf	??_ES_Timer_Tick_Resp,f
  3214  01D9  0DC1               	rlf	??_ES_Timer_Tick_Resp+1,f
  3215  01DA  3052               	movlw	low (_BitNum2SetMask| (0+32768))
  3216  01DB  0740               	addwf	??_ES_Timer_Tick_Resp,w
  3217  01DC  0084               	movwf	4
  3218  01DD  3080               	movlw	high (_BitNum2SetMask| (0+32768))
  3219  01DE  3D41               	addwfc	??_ES_Timer_Tick_Resp+1,w
  3220  01DF  0085               	movwf	5
  3221  01E0  3F00               	moviw [0]fsr0
  3222  01E1  00C2               	movwf	??_ES_Timer_Tick_Resp+2
  3223  01E2  3F01               	moviw [1]fsr0
  3224  01E3  00C3               	movwf	??_ES_Timer_Tick_Resp+3
  3225  01E4  09C2               	comf	??_ES_Timer_Tick_Resp+2,f
  3226  01E5  09C3               	comf	??_ES_Timer_Tick_Resp+3,f
  3227  01E6  0842               	movf	??_ES_Timer_Tick_Resp+2,w
  3228  01E7  05DB               	andwf	_TMR_ActiveFlags,f
  3229  01E8  0843               	movf	??_ES_Timer_Tick_Resp+3,w
  3230  01E9  05DC               	andwf	_TMR_ActiveFlags+1,f
  3231  01EA                     l1709:	
  3232                           
  3233                           ;ES_Timers.c: 306: }
  3234                           ;ES_Timers.c: 308: NeedsProcessing &= ~BitNum2SetMask[NextTimer2Process];
  3235  01EA  085F               	movf	ES_Timer_Tick_Resp@NextTimer2Process,w
  3236  01EB  00C0               	movwf	??_ES_Timer_Tick_Resp
  3237  01EC  01C1               	clrf	??_ES_Timer_Tick_Resp+1
  3238  01ED  35C0               	lslf	??_ES_Timer_Tick_Resp,f
  3239  01EE  0DC1               	rlf	??_ES_Timer_Tick_Resp+1,f
  3240  01EF  3052               	movlw	low (_BitNum2SetMask| (0+32768))
  3241  01F0  0740               	addwf	??_ES_Timer_Tick_Resp,w
  3242  01F1  0084               	movwf	4
  3243  01F2  3080               	movlw	high (_BitNum2SetMask| (0+32768))
  3244  01F3  3D41               	addwfc	??_ES_Timer_Tick_Resp+1,w
  3245  01F4  0085               	movwf	5
  3246  01F5  3F00               	moviw [0]fsr0
  3247  01F6  00C2               	movwf	??_ES_Timer_Tick_Resp+2
  3248  01F7  3F01               	moviw [1]fsr0
  3249  01F8  00C3               	movwf	??_ES_Timer_Tick_Resp+3
  3250  01F9  09C2               	comf	??_ES_Timer_Tick_Resp+2,f
  3251  01FA  09C3               	comf	??_ES_Timer_Tick_Resp+3,f
  3252  01FB  0842               	movf	??_ES_Timer_Tick_Resp+2,w
  3253  01FC  05D1               	andwf	ES_Timer_Tick_Resp@NeedsProcessing,f
  3254  01FD  0843               	movf	??_ES_Timer_Tick_Resp+3,w
  3255  01FE  05D2               	andwf	ES_Timer_Tick_Resp@NeedsProcessing+1,f
  3256                           
  3257                           ;ES_Timers.c: 309: }while(NeedsProcessing != 0);
  3258  01FF  0851               	movf	ES_Timer_Tick_Resp@NeedsProcessing,w
  3259  0200  0452               	iorwf	ES_Timer_Tick_Resp@NeedsProcessing+1,w
  3260  0201  1903               	btfsc	3,2
  3261  0202  0008               	return
  3262  0203  299A               	goto	l1699
  3263  0204                     __end_of_ES_Timer_Tick_Resp:	
  3264                           
  3265                           	psect	text6
  3266  05D9                     __ptext6:	
  3267 ;; *************** function _PostSPI_Service *****************
  3268 ;; Defined at:
  3269 ;;		line 68 in file "SPI_Service.c"
  3270 ;; Parameters:    Size  Location     Type
  3271 ;;  ThisEvent       3   29[BANK0 ] struct ES_Event_t
  3272 ;; Auto vars:     Size  Location     Type
  3273 ;;		None
  3274 ;; Return value:  Size  Location     Type
  3275 ;;                  1    wreg      unsigned char 
  3276 ;; Registers used:
  3277 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3278 ;; Tracked objects:
  3279 ;;		On entry : 0/0
  3280 ;;		On exit  : 0/0
  3281 ;;		Unchanged: 0/0
  3282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3283 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3286 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3287 ;;Total ram usage:        3 bytes
  3288 ;; Hardware stack levels used:    1
  3289 ;; Hardware stack levels required when called:    6
  3290 ;; This function calls:
  3291 ;;		_ES_PostToService
  3292 ;; This function is called by:
  3293 ;;		_ES_Timer_Tick_Resp
  3294 ;; This function uses a non-reentrant model
  3295 ;;
  3296                           
  3297                           
  3298                           ;psect for function _PostSPI_Service
  3299  05D9                     _PostSPI_Service:	
  3300                           
  3301                           ;SPI_Service.c: 70: return ES_PostToService( MyPriority, ThisEvent);
  3302                           ;	Return value of _PostSPI_Service is never used
  3303                           
  3304                           ;incstack = 0
  3305                           ; Regs used in _PostSPI_Service: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3306  05D9  0020               	movlb	0	; select bank0
  3307  05DA  083D               	movf	PostSPI_Service@ThisEvent,w
  3308  05DB  00B5               	movwf	ES_PostToService@TheEvent
  3309  05DC  083E               	movf	PostSPI_Service@ThisEvent+1,w
  3310  05DD  00B6               	movwf	ES_PostToService@TheEvent+1
  3311  05DE  083F               	movf	PostSPI_Service@ThisEvent+2,w
  3312  05DF  00B7               	movwf	ES_PostToService@TheEvent+2
  3313  05E0  0860               	movf	SPI_Service@MyPriority,w
  3314  05E1  3184  247C         	fcall	_ES_PostToService
  3315  05E3  0008               	return
  3316  05E4                     __end_of_PostSPI_Service:	
  3317                           
  3318                           	psect	text7
  3319  05E4                     __ptext7:	
  3320 ;; *************** function _PostToggleService *****************
  3321 ;; Defined at:
  3322 ;;		line 106 in file "ToggleService.c"
  3323 ;; Parameters:    Size  Location     Type
  3324 ;;  ThisEvent       3   29[BANK0 ] struct ES_Event_t
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;		None
  3327 ;; Return value:  Size  Location     Type
  3328 ;;                  1    wreg      unsigned char 
  3329 ;; Registers used:
  3330 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3331 ;; Tracked objects:
  3332 ;;		On entry : 0/0
  3333 ;;		On exit  : 0/0
  3334 ;;		Unchanged: 0/0
  3335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3336 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3339 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3340 ;;Total ram usage:        3 bytes
  3341 ;; Hardware stack levels used:    1
  3342 ;; Hardware stack levels required when called:    6
  3343 ;; This function calls:
  3344 ;;		_ES_PostToService
  3345 ;; This function is called by:
  3346 ;;		_ES_Timer_Tick_Resp
  3347 ;;		_PostToList
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350                           
  3351                           
  3352                           ;psect for function _PostToggleService
  3353  05E4                     _PostToggleService:	
  3354                           
  3355                           ;ToggleService.c: 108: return ES_PostToService( MyPriority, ThisEvent);
  3356                           
  3357                           ;incstack = 0
  3358                           ; Regs used in _PostToggleService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3359  05E4  0020               	movlb	0	; select bank0
  3360  05E5  083D               	movf	PostToggleService@ThisEvent,w
  3361  05E6  00B5               	movwf	ES_PostToService@TheEvent
  3362  05E7  083E               	movf	PostToggleService@ThisEvent+1,w
  3363  05E8  00B6               	movwf	ES_PostToService@TheEvent+1
  3364  05E9  083F               	movf	PostToggleService@ThisEvent+2,w
  3365  05EA  00B7               	movwf	ES_PostToService@TheEvent+2
  3366  05EB  0861               	movf	ToggleService@MyPriority,w
  3367  05EC  3184  247C         	fcall	_ES_PostToService
  3368  05EE  0008               	return
  3369  05EF                     __end_of_PostToggleService:	
  3370                           
  3371                           	psect	text8
  3372  0382                     __ptext8:	
  3373 ;; *************** function _ES_GetMSBitSet *****************
  3374 ;; Defined at:
  3375 ;;		line 79 in file "ES_LookupTables.c"
  3376 ;; Parameters:    Size  Location     Type
  3377 ;;  Val2Check       2    0[BANK0 ] unsigned int 
  3378 ;; Auto vars:     Size  Location     Type
  3379 ;;  LoopCntr        1    8[BANK0 ] char 
  3380 ;;  Nybble2Test     1    7[BANK0 ] unsigned char 
  3381 ;;  ReturnVal       1    6[BANK0 ] unsigned char 
  3382 ;; Return value:  Size  Location     Type
  3383 ;;                  1    wreg      unsigned char 
  3384 ;; Registers used:
  3385 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3386 ;; Tracked objects:
  3387 ;;		On entry : 0/0
  3388 ;;		On exit  : 0/0
  3389 ;;		Unchanged: 0/0
  3390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3391 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3392 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3393 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3394 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3395 ;;Total ram usage:        9 bytes
  3396 ;; Hardware stack levels used:    1
  3397 ;; Hardware stack levels required when called:    3
  3398 ;; This function calls:
  3399 ;;		Nothing
  3400 ;; This function is called by:
  3401 ;;		_ES_Run
  3402 ;;		_ES_Timer_Tick_Resp
  3403 ;; This function uses a non-reentrant model
  3404 ;;
  3405                           
  3406                           
  3407                           ;psect for function _ES_GetMSBitSet
  3408  0382                     _ES_GetMSBitSet:	
  3409                           
  3410                           ;ES_LookupTables.c: 81: int8_t LoopCntr;
  3411                           ;ES_LookupTables.c: 82: uint8_t Nybble2Test;
  3412                           ;ES_LookupTables.c: 83: uint8_t ReturnVal = 128;
  3413                           
  3414                           ;incstack = 0
  3415                           ; Regs used in _ES_GetMSBitSet: [wreg-fsr0h+status,2+status,0+pclath]
  3416  0382  3080               	movlw	128
  3417  0383  0020               	movlb	0	; select bank0
  3418  0384  00A2               	movwf	??_ES_GetMSBitSet
  3419  0385  0822               	movf	??_ES_GetMSBitSet,w
  3420  0386  00A6               	movwf	ES_GetMSBitSet@ReturnVal
  3421                           
  3422                           ;ES_LookupTables.c: 86: for( LoopCntr = sizeof(Val2Check) * (8/4)-1;
  3423  0387  3003               	movlw	3
  3424  0388  00A2               	movwf	??_ES_GetMSBitSet
  3425  0389  0822               	movf	??_ES_GetMSBitSet,w
  3426  038A  00A8               	movwf	ES_GetMSBitSet@LoopCntr
  3427                           
  3428                           ;ES_LookupTables.c: 87: LoopCntr >= 0; LoopCntr--) {
  3429  038B  1BA8               	btfsc	ES_GetMSBitSet@LoopCntr,7
  3430  038C  2BC6               	goto	l1675
  3431  038D                     l1667:	
  3432                           
  3433                           ;ES_LookupTables.c: 89: Nybble2Test = (uint8_t)
  3434                           ;ES_LookupTables.c: 90: ((Val2Check >> (uint8_t)(LoopCntr * 4)) &
  3435                           ;ES_LookupTables.c: 91: 0x0F);
  3436  038D  0821               	movf	ES_GetMSBitSet@Val2Check+1,w
  3437  038E  00A3               	movwf	??_ES_GetMSBitSet+1
  3438  038F  0820               	movf	ES_GetMSBitSet@Val2Check,w
  3439  0390  00A2               	movwf	??_ES_GetMSBitSet
  3440  0391  0828               	movf	ES_GetMSBitSet@LoopCntr,w
  3441  0392  00A4               	movwf	??_ES_GetMSBitSet+2
  3442  0393  3001               	movlw	1
  3443  0394                     u1035:	
  3444  0394  35A4               	lslf	??_ES_GetMSBitSet+2,f
  3445  0395  3EFF               	addlw	-1
  3446  0396  1D03               	skipz
  3447  0397  2B94               	goto	u1035
  3448  0398  3524               	lslf	??_ES_GetMSBitSet+2,w
  3449  0399  0A89               	incf	9,f
  3450  039A  2B9D               	goto	u1044
  3451  039B                     u1045:	
  3452  039B  36A3               	lsrf	??_ES_GetMSBitSet+1,f
  3453  039C  0CA2               	rrf	??_ES_GetMSBitSet,f
  3454  039D                     u1044:	
  3455  039D  0B89               	decfsz	9,f
  3456  039E  2B9B               	goto	u1045
  3457  039F  0822               	movf	??_ES_GetMSBitSet,w
  3458  03A0  390F               	andlw	15
  3459  03A1  00A5               	movwf	??_ES_GetMSBitSet+3
  3460  03A2  0825               	movf	??_ES_GetMSBitSet+3,w
  3461  03A3  00A7               	movwf	ES_GetMSBitSet@Nybble2Test
  3462                           
  3463                           ;ES_LookupTables.c: 92: if ( Nybble2Test != 0){
  3464  03A4  0827               	movf	ES_GetMSBitSet@Nybble2Test,w
  3465  03A5  1903               	btfsc	3,2
  3466  03A6  2BC0               	goto	l1671
  3467                           
  3468                           ;ES_LookupTables.c: 94: ReturnVal = Nybble2MSBitNum[Nybble2Test-1] +
  3469                           ;ES_LookupTables.c: 95: (LoopCntr * 4);
  3470  03A7  0828               	movf	ES_GetMSBitSet@LoopCntr,w
  3471  03A8  00A2               	movwf	??_ES_GetMSBitSet
  3472  03A9  3002               	movlw	2
  3473  03AA                     u1065:	
  3474  03AA  35A2               	lslf	??_ES_GetMSBitSet,f
  3475  03AB  0B89               	decfsz	9,f
  3476  03AC  2BAA               	goto	u1065
  3477  03AD  0827               	movf	ES_GetMSBitSet@Nybble2Test,w
  3478  03AE  3EFF               	addlw	255
  3479  03AF  00A3               	movwf	??_ES_GetMSBitSet+1
  3480  03B0  30FF               	movlw	255
  3481  03B1  1803               	skipnc
  3482  03B2  3000               	movlw	0
  3483  03B3  00A4               	movwf	??_ES_GetMSBitSet+2
  3484  03B4  3092               	movlw	low (_Nybble2MSBitNum| (0+32768))
  3485  03B5  0723               	addwf	??_ES_GetMSBitSet+1,w
  3486  03B6  0084               	movwf	4
  3487  03B7  3080               	movlw	high (_Nybble2MSBitNum| (0+32768))
  3488  03B8  3D24               	addwfc	??_ES_GetMSBitSet+2,w
  3489  03B9  0085               	movwf	5
  3490  03BA  0800               	movf	0,w	;code access
  3491  03BB  0722               	addwf	??_ES_GetMSBitSet,w
  3492  03BC  00A5               	movwf	??_ES_GetMSBitSet+3
  3493  03BD  0825               	movf	??_ES_GetMSBitSet+3,w
  3494  03BE  00A6               	movwf	ES_GetMSBitSet@ReturnVal
  3495                           
  3496                           ;ES_LookupTables.c: 96: break;
  3497  03BF  2BC6               	goto	l1675
  3498  03C0                     l1671:	
  3499  03C0  30FF               	movlw	255
  3500  03C1  00A2               	movwf	??_ES_GetMSBitSet
  3501  03C2  0822               	movf	??_ES_GetMSBitSet,w
  3502  03C3  07A8               	addwf	ES_GetMSBitSet@LoopCntr,f
  3503  03C4  1FA8               	btfss	ES_GetMSBitSet@LoopCntr,7
  3504  03C5  2B8D               	goto	l1667
  3505  03C6                     l1675:	
  3506                           
  3507                           ;ES_LookupTables.c: 97: }
  3508                           ;ES_LookupTables.c: 98: }
  3509                           ;ES_LookupTables.c: 99: return ReturnVal;
  3510  03C6  0826               	movf	ES_GetMSBitSet@ReturnVal,w
  3511  03C7  0008               	return
  3512  03C8                     __end_of_ES_GetMSBitSet:	
  3513                           
  3514                           	psect	text9
  3515  0573                     __ptext9:	
  3516 ;; *************** function _RunSPI_Service *****************
  3517 ;; Defined at:
  3518 ;;		line 84 in file "SPI_Service.c"
  3519 ;; Parameters:    Size  Location     Type
  3520 ;;  ThisEvent       3    7[BANK0 ] struct ES_Event_t
  3521 ;; Auto vars:     Size  Location     Type
  3522 ;;  ReturnEvent     3   10[BANK0 ] struct ES_Event_t
  3523 ;; Return value:  Size  Location     Type
  3524 ;;                  3    7[BANK0 ] struct ES_Event_t
  3525 ;; Registers used:
  3526 ;;		wreg, status,2, status,0
  3527 ;; Tracked objects:
  3528 ;;		On entry : 0/0
  3529 ;;		On exit  : 0/0
  3530 ;;		Unchanged: 0/0
  3531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3532 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3533 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3535 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3536 ;;Total ram usage:        6 bytes
  3537 ;; Hardware stack levels used:    1
  3538 ;; Hardware stack levels required when called:    3
  3539 ;; This function calls:
  3540 ;;		Nothing
  3541 ;; This function is called by:
  3542 ;;		_ES_Run
  3543 ;; This function uses a non-reentrant model
  3544 ;;
  3545                           
  3546                           
  3547                           ;psect for function _RunSPI_Service
  3548  0573                     _RunSPI_Service:	
  3549                           
  3550                           ;SPI_Service.c: 86: ES_Event ReturnEvent;
  3551                           ;SPI_Service.c: 87: if (ThisEvent.EventType == ES_TIMEOUT) {
  3552                           
  3553                           ;incstack = 0
  3554                           ; Regs used in _RunSPI_Service: [wreg+status,2+status,0]
  3555  0573  3003               	movlw	3
  3556  0574  0020               	movlb	0	; select bank0
  3557  0575  0627               	xorwf	RunSPI_Service@ThisEvent,w
  3558  0576  1D03               	btfss	3,2
  3559  0577  2D7F               	goto	l1889
  3560                           
  3561                           ;SPI_Service.c: 88: if (ThisEvent.EventParam == 1){
  3562  0578  0328               	decf	RunSPI_Service@ThisEvent+1,w
  3563  0579  0429               	iorwf	RunSPI_Service@ThisEvent+2,w
  3564  057A  1D03               	btfss	3,2
  3565  057B  2D7F               	goto	l1889
  3566                           
  3567                           ;SPI_Service.c: 89: SSPBUF = 0xAA;
  3568  057C  30AA               	movlw	170
  3569  057D  0024               	movlb	4	; select bank4
  3570  057E  0091               	movwf	17	;volatile
  3571  057F                     l1889:	
  3572                           
  3573                           ;SPI_Service.c: 90: }
  3574                           ;SPI_Service.c: 91: }
  3575                           ;SPI_Service.c: 92: ReturnEvent.EventType = ES_NO_EVENT;
  3576  057F  0020               	movlb	0	; select bank0
  3577  0580  01AA               	clrf	RunSPI_Service@ReturnEvent
  3578                           
  3579                           ;SPI_Service.c: 93: return(ReturnEvent);
  3580  0581  082A               	movf	RunSPI_Service@ReturnEvent,w
  3581  0582  00A7               	movwf	?_RunSPI_Service
  3582  0583  082B               	movf	RunSPI_Service@ReturnEvent+1,w
  3583  0584  00A8               	movwf	?_RunSPI_Service+1
  3584  0585  082C               	movf	RunSPI_Service@ReturnEvent+2,w
  3585  0586  00A9               	movwf	?_RunSPI_Service+2
  3586  0587  0008               	return
  3587  0588                     __end_of_RunSPI_Service:	
  3588                           
  3589                           	psect	text10
  3590  04E0                     __ptext10:	
  3591 ;; *************** function _RunToggleService *****************
  3592 ;; Defined at:
  3593 ;;		line 128 in file "ToggleService.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;  ThisEvent       3    7[BANK0 ] struct ES_Event_t
  3596 ;; Auto vars:     Size  Location     Type
  3597 ;;  ReturnEvent     3   10[BANK0 ] struct ES_Event_t
  3598 ;; Return value:  Size  Location     Type
  3599 ;;                  3    7[BANK0 ] struct ES_Event_t
  3600 ;; Registers used:
  3601 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3602 ;; Tracked objects:
  3603 ;;		On entry : 0/0
  3604 ;;		On exit  : 0/0
  3605 ;;		Unchanged: 0/0
  3606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3607 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3608 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3610 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3611 ;;Total ram usage:        6 bytes
  3612 ;; Hardware stack levels used:    1
  3613 ;; Hardware stack levels required when called:    4
  3614 ;; This function calls:
  3615 ;;		_ES_Timer_InitTimer
  3616 ;; This function is called by:
  3617 ;;		_ES_Run
  3618 ;; This function uses a non-reentrant model
  3619 ;;
  3620                           
  3621                           
  3622                           ;psect for function _RunToggleService
  3623  04E0                     _RunToggleService:	
  3624                           
  3625                           ;ToggleService.c: 130: ES_Event ReturnEvent;
  3626                           ;ToggleService.c: 131: ReturnEvent.EventType = ES_NO_EVENT;
  3627                           
  3628                           ;incstack = 0
  3629                           ; Regs used in _RunToggleService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3630  04E0  0020               	movlb	0	; select bank0
  3631  04E1  01AA               	clrf	RunToggleService@ReturnEvent
  3632                           
  3633                           ;ToggleService.c: 135: if (ThisEvent.EventType == ES_TIMEOUT) {
  3634  04E2  3003               	movlw	3
  3635  04E3  0627               	xorwf	RunToggleService@ThisEvent,w
  3636  04E4  1D03               	btfss	3,2
  3637  04E5  2CF8               	goto	l1871
  3638                           
  3639                           ;ToggleService.c: 136: if (ThisEvent.EventParam == 0) {
  3640  04E6  0828               	movf	RunToggleService@ThisEvent+1,w
  3641  04E7  0429               	iorwf	RunToggleService@ThisEvent+2,w
  3642  04E8  1D03               	btfss	3,2
  3643  04E9  2CF8               	goto	l1871
  3644                           
  3645                           ;ToggleService.c: 137: if (RA1 == 1) {
  3646  04EA  1C8C               	btfss	12,1	;volatile
  3647  04EB  2CEE               	goto	l382
  3648                           
  3649                           ;ToggleService.c: 138: RA1 = 0;
  3650  04EC  108C               	bcf	12,1	;volatile
  3651                           
  3652                           ;ToggleService.c: 139: } else if (RA1 == 0) {
  3653  04ED  2CF1               	goto	l1869
  3654  04EE                     l382:	
  3655  04EE  188C               	btfsc	12,1	;volatile
  3656  04EF  2CF1               	goto	l1869
  3657                           
  3658                           ;ToggleService.c: 140: RA1 = 1;
  3659  04F0  148C               	bsf	12,1	;volatile
  3660  04F1                     l1869:	
  3661                           
  3662                           ;ToggleService.c: 141: }
  3663                           ;ToggleService.c: 142: ES_Timer_InitTimer(0,100);
  3664  04F1  3064               	movlw	100
  3665  04F2  00A0               	movwf	ES_Timer_InitTimer@NewTime
  3666  04F3  3000               	movlw	0
  3667  04F4  00A1               	movwf	ES_Timer_InitTimer@NewTime+1
  3668  04F5  3000               	movlw	0
  3669  04F6  3184  240E         	fcall	_ES_Timer_InitTimer
  3670  04F8                     l1871:	
  3671                           
  3672                           ;ToggleService.c: 143: }
  3673                           ;ToggleService.c: 144: }
  3674                           ;ToggleService.c: 145: return ReturnEvent;
  3675  04F8  0020               	movlb	0	; select bank0
  3676  04F9  082A               	movf	RunToggleService@ReturnEvent,w
  3677  04FA  00A7               	movwf	?_RunToggleService
  3678  04FB  082B               	movf	RunToggleService@ReturnEvent+1,w
  3679  04FC  00A8               	movwf	?_RunToggleService+1
  3680  04FD  082C               	movf	RunToggleService@ReturnEvent+2,w
  3681  04FE  00A9               	movwf	?_RunToggleService+2
  3682  04FF  0008               	return
  3683  0500                     __end_of_RunToggleService:	
  3684                           
  3685                           	psect	text11
  3686  0204                     __ptext11:	
  3687 ;; *************** function _ES_DeQueue *****************
  3688 ;; Defined at:
  3689 ;;		line 164 in file "ES_Queue.c"
  3690 ;; Parameters:    Size  Location     Type
  3691 ;;  pBlock          1    wreg     PTR struct ES_Event_t
  3692 ;;		 -> Queue1(12), Queue0(18), 
  3693 ;;  pReturnEvent    1   11[BANK0 ] PTR struct ES_Event_t
  3694 ;;		 -> ES_Run@ThisEvent(3), ES_RecallEvents@RecalledEvent(3), 
  3695 ;; Auto vars:     Size  Location     Type
  3696 ;;  pBlock          1   19[BANK0 ] PTR struct ES_Event_t
  3697 ;;		 -> Queue1(12), Queue0(18), 
  3698 ;;  pThisQueue      1   20[BANK0 ] PTR struct .
  3699 ;;		 -> Queue1(12), Queue0(18), 
  3700 ;;  NumLeft         1   18[BANK0 ] unsigned char 
  3701 ;;  SaveCrit        1   17[BANK0 ] unsigned char 
  3702 ;; Return value:  Size  Location     Type
  3703 ;;                  1    wreg      unsigned char 
  3704 ;; Registers used:
  3705 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3706 ;; Tracked objects:
  3707 ;;		On entry : 0/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3711 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3712 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3713 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3714 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3715 ;;Total ram usage:       10 bytes
  3716 ;; Hardware stack levels used:    1
  3717 ;; Hardware stack levels required when called:    4
  3718 ;; This function calls:
  3719 ;;		___bmul
  3720 ;;		___lbmod
  3721 ;; This function is called by:
  3722 ;;		_ES_Run
  3723 ;;		_ES_RecallEvents
  3724 ;; This function uses a non-reentrant model
  3725 ;;
  3726                           
  3727                           
  3728                           ;psect for function _ES_DeQueue
  3729  0204                     _ES_DeQueue:	
  3730                           
  3731                           ;incstack = 0
  3732                           ; Regs used in _ES_DeQueue: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3733                           ;ES_DeQueue@pBlock stored from wreg
  3734  0204  0020               	movlb	0	; select bank0
  3735  0205  00B3               	movwf	ES_DeQueue@pBlock
  3736                           
  3737                           ;ES_Queue.c: 166: unsigned char SaveCrit;
  3738                           ;ES_Queue.c: 167: pQueue_t pThisQueue;
  3739                           ;ES_Queue.c: 168: uint8_t NumLeft;
  3740                           ;ES_Queue.c: 170: pThisQueue = (pQueue_t)pBlock;
  3741  0206  0833               	movf	ES_DeQueue@pBlock,w
  3742  0207  00AC               	movwf	??_ES_DeQueue
  3743  0208  082C               	movf	??_ES_DeQueue,w
  3744  0209  00B4               	movwf	ES_DeQueue@pThisQueue
  3745                           
  3746                           ;ES_Queue.c: 171: if ( pThisQueue->NumEntries > 0)
  3747  020A  0834               	movf	ES_DeQueue@pThisQueue,w
  3748  020B  3E02               	addlw	2
  3749  020C  0086               	movwf	6
  3750  020D  0187               	clrf	7
  3751  020E  0801               	movf	1,w
  3752  020F  1903               	btfsc	3,2
  3753  0210  2A6A               	goto	l1795
  3754                           
  3755                           ;ES_Queue.c: 172: {
  3756                           ;ES_Queue.c: 173: do{ SaveCrit = INTCON; GIE = 0;}while(0);
  3757  0211  080B               	movf	11,w	;volatile
  3758  0212  00AC               	movwf	??_ES_DeQueue
  3759  0213  082C               	movf	??_ES_DeQueue,w
  3760  0214  00B1               	movwf	ES_DeQueue@SaveCrit
  3761  0215  138B               	bcf	11,7	;volatile
  3762                           
  3763                           ;ES_Queue.c: 174: *pReturnEvent = pBlock[ 1 + pThisQueue->CurrentIndex ];
  3764  0216  3003               	movlw	3
  3765  0217  00AC               	movwf	??_ES_DeQueue
  3766  0218  082C               	movf	??_ES_DeQueue,w
  3767  0219  00A7               	movwf	___bmul@multiplicand
  3768  021A  0A34               	incf	ES_DeQueue@pThisQueue,w
  3769  021B  0086               	movwf	6
  3770  021C  0187               	clrf	7
  3771  021D  0801               	movf	1,w
  3772  021E  3E01               	addlw	1
  3773  021F  3185  259C  3182   	fcall	___bmul
  3774  0222  0020               	movlb	0	; select bank0
  3775  0223  0733               	addwf	ES_DeQueue@pBlock,w
  3776  0224  00AD               	movwf	??_ES_DeQueue+1
  3777  0225  082D               	movf	??_ES_DeQueue+1,w
  3778  0226  0086               	movwf	6
  3779  0227  0187               	clrf	7
  3780  0228  3F40               	moviw [0]fsr1
  3781  0229  00AE               	movwf	??_ES_DeQueue+2
  3782  022A  3F41               	moviw [1]fsr1
  3783  022B  00AF               	movwf	??_ES_DeQueue+3
  3784  022C  3F42               	moviw [2]fsr1
  3785  022D  00B0               	movwf	??_ES_DeQueue+4
  3786  022E  082B               	movf	ES_DeQueue@pReturnEvent,w
  3787  022F  0086               	movwf	6
  3788  0230  0187               	clrf	7
  3789  0231  082E               	movf	??_ES_DeQueue+2,w
  3790  0232  3FC0               	movwi [0]fsr1
  3791  0233  082F               	movf	??_ES_DeQueue+3,w
  3792  0234  3FC1               	movwi [1]fsr1
  3793  0235  0830               	movf	??_ES_DeQueue+4,w
  3794  0236  3FC2               	movwi [2]fsr1
  3795                           
  3796                           ;ES_Queue.c: 176: pThisQueue->CurrentIndex++;
  3797  0237  3001               	movlw	1
  3798  0238  00AC               	movwf	??_ES_DeQueue
  3799  0239  0A34               	incf	ES_DeQueue@pThisQueue,w
  3800  023A  0086               	movwf	6
  3801  023B  0187               	clrf	7
  3802  023C  082C               	movf	??_ES_DeQueue,w
  3803  023D  0781               	addwf	1,f
  3804                           
  3805                           ;ES_Queue.c: 178: if (pThisQueue->CurrentIndex >= pThisQueue->QueueSize)
  3806  023E  0A34               	incf	ES_DeQueue@pThisQueue,w
  3807  023F  0086               	movwf	6
  3808  0240  0187               	clrf	7
  3809  0241  0834               	movf	ES_DeQueue@pThisQueue,w
  3810  0242  0084               	movwf	4
  3811  0243  0185               	clrf	5
  3812  0244  0800               	movf	0,w
  3813  0245  0201               	subwf	1,w
  3814  0246  1C03               	skipc
  3815  0247  2A5D               	goto	l1791
  3816                           
  3817                           ;ES_Queue.c: 179: pThisQueue->CurrentIndex = (uint8_t)(pThisQueue->CurrentIndex % pThisQ
      +                          ueue->QueueSize);
  3818  0248  0834               	movf	ES_DeQueue@pThisQueue,w
  3819  0249  0086               	movwf	6
  3820  024A  0187               	clrf	7
  3821  024B  0801               	movf	1,w
  3822  024C  00AC               	movwf	??_ES_DeQueue
  3823  024D  082C               	movf	??_ES_DeQueue,w
  3824  024E  00A0               	movwf	___lbmod@divisor
  3825  024F  0A34               	incf	ES_DeQueue@pThisQueue,w
  3826  0250  0086               	movwf	6
  3827  0251  0187               	clrf	7
  3828  0252  0801               	movf	1,w
  3829  0253  3185  2500  3182   	fcall	___lbmod
  3830  0256  0020               	movlb	0	; select bank0
  3831  0257  00AD               	movwf	??_ES_DeQueue+1
  3832  0258  0A34               	incf	ES_DeQueue@pThisQueue,w
  3833  0259  0086               	movwf	6
  3834  025A  0187               	clrf	7
  3835  025B  082D               	movf	??_ES_DeQueue+1,w
  3836  025C  0081               	movwf	1
  3837  025D                     l1791:	
  3838                           
  3839                           ;ES_Queue.c: 181: NumLeft = --pThisQueue->NumEntries;
  3840  025D  0834               	movf	ES_DeQueue@pThisQueue,w
  3841  025E  3E02               	addlw	2
  3842  025F  0086               	movwf	6
  3843  0260  0187               	clrf	7
  3844  0261  3F40               	moviw [0]fsr1
  3845  0262  0309               	decf	9,w
  3846  0263  3FC0               	movwi [0]fsr1
  3847  0264  00AC               	movwf	??_ES_DeQueue
  3848  0265  082C               	movf	??_ES_DeQueue,w
  3849  0266  00B2               	movwf	ES_DeQueue@NumLeft
  3850                           
  3851                           ;ES_Queue.c: 182: {INTCON = SaveCrit;};
  3852  0267  0831               	movf	ES_DeQueue@SaveCrit,w
  3853  0268  008B               	movwf	11	;volatile
  3854                           
  3855                           ;ES_Queue.c: 183: }else {
  3856  0269  2A75               	goto	l1799
  3857  026A                     l1795:	
  3858                           
  3859                           ;ES_Queue.c: 184: (*pReturnEvent).EventType = ES_NO_EVENT;
  3860  026A  082B               	movf	ES_DeQueue@pReturnEvent,w
  3861  026B  0086               	movwf	6
  3862  026C  0187               	clrf	7
  3863  026D  0181               	clrf	1
  3864                           
  3865                           ;ES_Queue.c: 185: (*pReturnEvent).EventParam = 0;
  3866  026E  0A2B               	incf	ES_DeQueue@pReturnEvent,w
  3867  026F  0086               	movwf	6
  3868  0270  0187               	clrf	7
  3869  0271  3000               	movlw	0
  3870  0272  3FC0               	movwi [0]fsr1
  3871  0273  3FC1               	movwi [1]fsr1
  3872                           
  3873                           ;ES_Queue.c: 186: NumLeft = 0;
  3874  0274  01B2               	clrf	ES_DeQueue@NumLeft
  3875  0275                     l1799:	
  3876                           
  3877                           ;ES_Queue.c: 187: }
  3878                           ;ES_Queue.c: 188: return NumLeft;
  3879  0275  0832               	movf	ES_DeQueue@NumLeft,w
  3880  0276  0008               	return
  3881  0277                     __end_of_ES_DeQueue:	
  3882                           
  3883                           	psect	text12
  3884  0500                     __ptext12:	
  3885 ;; *************** function ___lbmod *****************
  3886 ;; Defined at:
  3887 ;;		line 4 in file "/Applications/microchip/xc8/v1.38/sources/common/lbmod.c"
  3888 ;; Parameters:    Size  Location     Type
  3889 ;;  dividend        1    wreg     unsigned char 
  3890 ;;  divisor         1    0[BANK0 ] unsigned char 
  3891 ;; Auto vars:     Size  Location     Type
  3892 ;;  dividend        1    3[BANK0 ] unsigned char 
  3893 ;;  rem             1    5[BANK0 ] unsigned char 
  3894 ;;  counter         1    4[BANK0 ] unsigned char 
  3895 ;; Return value:  Size  Location     Type
  3896 ;;                  1    wreg      unsigned char 
  3897 ;; Registers used:
  3898 ;;		wreg, status,2, status,0
  3899 ;; Tracked objects:
  3900 ;;		On entry : 0/0
  3901 ;;		On exit  : 0/0
  3902 ;;		Unchanged: 0/0
  3903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3904 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3905 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3906 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3907 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3908 ;;Total ram usage:        6 bytes
  3909 ;; Hardware stack levels used:    1
  3910 ;; Hardware stack levels required when called:    3
  3911 ;; This function calls:
  3912 ;;		Nothing
  3913 ;; This function is called by:
  3914 ;;		_ES_DeQueue
  3915 ;; This function uses a non-reentrant model
  3916 ;;
  3917                           
  3918                           
  3919                           ;psect for function ___lbmod
  3920  0500                     ___lbmod:	
  3921                           
  3922                           ;incstack = 0
  3923                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  3924                           ;___lbmod@dividend stored from wreg
  3925  0500  0020               	movlb	0	; select bank0
  3926  0501  00A3               	movwf	___lbmod@dividend
  3927  0502  3008               	movlw	8
  3928  0503  00A1               	movwf	??___lbmod
  3929  0504  0821               	movf	??___lbmod,w
  3930  0505  00A4               	movwf	___lbmod@counter
  3931  0506  01A5               	clrf	___lbmod@rem
  3932  0507                     l1745:	
  3933  0507  0823               	movf	___lbmod@dividend,w
  3934  0508  00A1               	movwf	??___lbmod
  3935  0509  3007               	movlw	7
  3936  050A                     u1145:	
  3937  050A  36A1               	lsrf	??___lbmod,f
  3938  050B  0B89               	decfsz	9,f
  3939  050C  2D0A               	goto	u1145
  3940  050D  3525               	lslf	___lbmod@rem,w
  3941  050E  0421               	iorwf	??___lbmod,w
  3942  050F  00A2               	movwf	??___lbmod+1
  3943  0510  0822               	movf	??___lbmod+1,w
  3944  0511  00A5               	movwf	___lbmod@rem
  3945  0512  1003               	clrc
  3946  0513  0DA3               	rlf	___lbmod@dividend,f
  3947  0514  0820               	movf	___lbmod@divisor,w
  3948  0515  0225               	subwf	___lbmod@rem,w
  3949  0516  1C03               	skipc
  3950  0517  2D1A               	goto	l795
  3951  0518  0820               	movf	___lbmod@divisor,w
  3952  0519  02A5               	subwf	___lbmod@rem,f
  3953  051A                     l795:	
  3954  051A  3001               	movlw	1
  3955  051B  02A4               	subwf	___lbmod@counter,f
  3956  051C  1D03               	btfss	3,2
  3957  051D  2D07               	goto	l1745
  3958  051E  0825               	movf	___lbmod@rem,w
  3959  051F  0008               	return
  3960  0520                     __end_of___lbmod:	
  3961                           
  3962                           	psect	text13
  3963  0520                     __ptext13:	
  3964 ;; *************** function _ES_CheckUserEvents *****************
  3965 ;; Defined at:
  3966 ;;		line 46 in file "ES_CheckEvents.c"
  3967 ;; Parameters:    Size  Location     Type
  3968 ;;		None
  3969 ;; Auto vars:     Size  Location     Type
  3970 ;;  i               1    2[BANK0 ] unsigned char 
  3971 ;; Return value:  Size  Location     Type
  3972 ;;                  1    wreg      unsigned char 
  3973 ;; Registers used:
  3974 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3975 ;; Tracked objects:
  3976 ;;		On entry : 0/0
  3977 ;;		On exit  : 0/0
  3978 ;;		Unchanged: 0/0
  3979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3981 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3982 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3983 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3984 ;;Total ram usage:        3 bytes
  3985 ;; Hardware stack levels used:    1
  3986 ;; Hardware stack levels required when called:    4
  3987 ;; This function calls:
  3988 ;;		_Check4Keystroke
  3989 ;; This function is called by:
  3990 ;;		_ES_Run
  3991 ;; This function uses a non-reentrant model
  3992 ;;
  3993                           
  3994                           
  3995                           ;psect for function _ES_CheckUserEvents
  3996  0520                     _ES_CheckUserEvents:	
  3997                           
  3998                           ;ES_CheckEvents.c: 48: uint8_t i;
  3999                           ;ES_CheckEvents.c: 50: for ( i=0; i< (sizeof(ES_EventList)/sizeof(ES_EventList[0])); i++
      +                          ) {
  4000                           
  4001                           ;incstack = 0
  4002                           ; Regs used in _ES_CheckUserEvents: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4003  0520  0020               	movlb	0	; select bank0
  4004  0521  01A2               	clrf	ES_CheckUserEvents@i
  4005  0522                     L1:	
  4006  0522  0822               	movf	ES_CheckUserEvents@i,w
  4007  0523  1D03               	btfss	3,2
  4008  0524  0008               	return
  4009                           
  4010                           ;ES_CheckEvents.c: 51: if ( ES_EventList[i]() == 1 )
  4011  0525  0822               	movf	ES_CheckUserEvents@i,w
  4012  0526  00A0               	movwf	??_ES_CheckUserEvents
  4013  0527  01A1               	clrf	??_ES_CheckUserEvents+1
  4014  0528  35A0               	lslf	??_ES_CheckUserEvents,f
  4015  0529  0DA1               	rlf	??_ES_CheckUserEvents+1,f
  4016  052A  30AD               	movlw	low (_ES_EventList| (0+32768))
  4017  052B  0720               	addwf	??_ES_CheckUserEvents,w
  4018  052C  0084               	movwf	4
  4019  052D  3080               	movlw	high (_ES_EventList| (0+32768))
  4020  052E  3D21               	addwfc	??_ES_CheckUserEvents+1,w
  4021  052F  0085               	movwf	5
  4022  0530  3F01               	moviw [1]fsr0
  4023  0531  008A               	movwf	10
  4024  0532  3F00               	moviw [0]fsr0
  4025  0533  000A               	callw
  4026  0534  3185               	pagesel	$
  4027  0535  3A01               	xorlw	1
  4028  0536  1903               	btfsc	3,2
  4029  0537  0008               	return
  4030                           
  4031                           ;ES_CheckEvents.c: 52: break;
  4032  0538  3001               	movlw	1
  4033  0539  0020               	movlb	0	; select bank0
  4034  053A  00A0               	movwf	??_ES_CheckUserEvents
  4035  053B  0820               	movf	??_ES_CheckUserEvents,w
  4036  053C  07A2               	addwf	ES_CheckUserEvents@i,f
  4037  053D  2D22               	goto	L1
  4038  053E                     __end_of_ES_CheckUserEvents:	
  4039                           ;ES_CheckEvents.c: 56: else
  4040                           ;ES_CheckEvents.c: 57: return(1);
  4041                           ;	Return value of _ES_CheckUserEvents is never used
  4042                           
  4043                           ;ES_CheckEvents.c: 55: return (0);
  4044                           ;	Return value of _ES_CheckUserEvents is never used
  4045                           
  4046                           
  4047                           	psect	text14
  4048  0606                     __ptext14:	
  4049 ;; *************** function _Check4Keystroke *****************
  4050 ;; Defined at:
  4051 ;;		line 108 in file "EventCheckers.c"
  4052 ;; Parameters:    Size  Location     Type
  4053 ;;		None
  4054 ;; Auto vars:     Size  Location     Type
  4055 ;;		None
  4056 ;; Return value:  Size  Location     Type
  4057 ;;                  1    wreg      unsigned char 
  4058 ;; Registers used:
  4059 ;;		wreg
  4060 ;; Tracked objects:
  4061 ;;		On entry : 0/0
  4062 ;;		On exit  : 0/0
  4063 ;;		Unchanged: 0/0
  4064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4069 ;;Total ram usage:        0 bytes
  4070 ;; Hardware stack levels used:    1
  4071 ;; Hardware stack levels required when called:    3
  4072 ;; This function calls:
  4073 ;;		Nothing
  4074 ;; This function is called by:
  4075 ;;		_ES_CheckUserEvents
  4076 ;; This function uses a non-reentrant model
  4077 ;;
  4078                           
  4079                           
  4080                           ;psect for function _Check4Keystroke
  4081  0606                     _Check4Keystroke:	
  4082                           
  4083                           ;EventCheckers.c: 124: return 0;
  4084                           
  4085                           ;incstack = 0
  4086                           ; Regs used in _Check4Keystroke: [wreg]
  4087  0606  3000               	movlw	0
  4088  0607  0008               	return
  4089  0608                     __end_of_Check4Keystroke:	
  4090                           
  4091                           	psect	text15
  4092  010A                     __ptext15:	
  4093 ;; *************** function _ES_Initialize *****************
  4094 ;; Defined at:
  4095 ;;		line 242 in file "ES_Framework.c"
  4096 ;; Parameters:    Size  Location     Type
  4097 ;;  NewRate         2   34[BANK0 ] enum E1912
  4098 ;; Auto vars:     Size  Location     Type
  4099 ;;  i               1   43[BANK0 ] unsigned char 
  4100 ;; Return value:  Size  Location     Type
  4101 ;;                  1    wreg      enum E1983
  4102 ;; Registers used:
  4103 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4104 ;; Tracked objects:
  4105 ;;		On entry : 0/0
  4106 ;;		On exit  : 0/0
  4107 ;;		Unchanged: 0/0
  4108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4109 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4110 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4111 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4112 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4113 ;;Total ram usage:       10 bytes
  4114 ;; Hardware stack levels used:    1
  4115 ;; Hardware stack levels required when called:    7
  4116 ;; This function calls:
  4117 ;;		_ES_InitQueue
  4118 ;;		_ES_Timer_Init
  4119 ;;		_InitSPI_Service
  4120 ;;		_InitToggleService
  4121 ;; This function is called by:
  4122 ;;		_main
  4123 ;; This function uses a non-reentrant model
  4124 ;;
  4125                           
  4126                           
  4127                           ;psect for function _ES_Initialize
  4128  010A                     _ES_Initialize:	
  4129                           
  4130                           ;ES_Framework.c: 243: uint8_t i;
  4131                           ;ES_Framework.c: 244: ES_Timer_Init( NewRate);
  4132                           
  4133                           ;incstack = 0
  4134                           ; Regs used in _ES_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4135  010A  0020               	movlb	0	; select bank0
  4136  010B  0843               	movf	ES_Initialize@NewRate+1,w
  4137  010C  00A3               	movwf	ES_Timer_Init@Rate+1
  4138  010D  0842               	movf	ES_Initialize@NewRate,w
  4139  010E  00A2               	movwf	ES_Timer_Init@Rate
  4140  010F  3185  25F8  3181   	fcall	_ES_Timer_Init
  4141                           
  4142                           ;ES_Framework.c: 246: for ( i=0; i< (sizeof(ServDescList)/sizeof(ServDescList[0])); i++)
      +                           {
  4143  0112  0020               	movlb	0	; select bank0
  4144  0113  01CB               	clrf	ES_Initialize@i
  4145  0114  3002               	movlw	2
  4146  0115  024B               	subwf	ES_Initialize@i,w
  4147  0116  1803               	btfsc	3,0
  4148  0117  298F               	goto	l1933
  4149  0118                     l1915:	
  4150                           
  4151                           ;ES_Framework.c: 247: if ( (ServDescList[i].InitFunc == (pInitFunc)0) ||
  4152                           ;ES_Framework.c: 248: (ServDescList[i].RunFunc == (pRunFunc)0) )
  4153  0118  084B               	movf	ES_Initialize@i,w
  4154  0119  00C4               	movwf	??_ES_Initialize
  4155  011A  01C5               	clrf	??_ES_Initialize+1
  4156  011B  35C4               	lslf	??_ES_Initialize,f
  4157  011C  0DC5               	rlf	??_ES_Initialize+1,f
  4158  011D  35C4               	lslf	??_ES_Initialize,f
  4159  011E  0DC5               	rlf	??_ES_Initialize+1,f
  4160  011F  30A1               	movlw	low (_ServDescList| (0+32768))
  4161  0120  0744               	addwf	??_ES_Initialize,w
  4162  0121  0084               	movwf	4
  4163  0122  3080               	movlw	high (_ServDescList| (0+32768))
  4164  0123  3D45               	addwfc	??_ES_Initialize+1,w
  4165  0124  0085               	movwf	5
  4166  0125  0012               	moviw fsr0++
  4167  0126  00C6               	movwf	??_ES_Initialize+2
  4168  0127  0012               	moviw fsr0++
  4169  0128  04C6               	iorwf	??_ES_Initialize+2,f
  4170  0129  1903               	btfsc	3,2
  4171  012A  2944               	goto	l1919
  4172  012B  084B               	movf	ES_Initialize@i,w
  4173  012C  00C4               	movwf	??_ES_Initialize
  4174  012D  01C5               	clrf	??_ES_Initialize+1
  4175  012E  35C4               	lslf	??_ES_Initialize,f
  4176  012F  0DC5               	rlf	??_ES_Initialize+1,f
  4177  0130  35C4               	lslf	??_ES_Initialize,f
  4178  0131  0DC5               	rlf	??_ES_Initialize+1,f
  4179  0132  0844               	movf	??_ES_Initialize,w
  4180  0133  3E02               	addlw	2
  4181  0134  00C6               	movwf	??_ES_Initialize+2
  4182  0135  3000               	movlw	0
  4183  0136  3D45               	addwfc	??_ES_Initialize+1,w
  4184  0137  00C7               	movwf	??_ES_Initialize+3
  4185  0138  30A1               	movlw	low (_ServDescList| (0+32768))
  4186  0139  0746               	addwf	??_ES_Initialize+2,w
  4187  013A  0084               	movwf	4
  4188  013B  3080               	movlw	high (_ServDescList| (0+32768))
  4189  013C  3D47               	addwfc	??_ES_Initialize+3,w
  4190  013D  0085               	movwf	5
  4191  013E  0012               	moviw fsr0++
  4192  013F  00C8               	movwf	??_ES_Initialize+4
  4193  0140  0012               	moviw fsr0++
  4194  0141  04C8               	iorwf	??_ES_Initialize+4,f
  4195  0142  1D03               	btfss	3,2
  4196  0143  2946               	goto	l1923
  4197  0144                     l1919:	
  4198                           
  4199                           ;ES_Framework.c: 249: return FailedPointer;
  4200  0144  3003               	movlw	3
  4201  0145  0008               	return
  4202  0146                     l1923:	
  4203                           
  4204                           ;ES_Framework.c: 251: ES_InitQueue( EventQueues[i].pMem, EventQueues[i].Size );
  4205  0146  084B               	movf	ES_Initialize@i,w
  4206  0147  00C4               	movwf	??_ES_Initialize
  4207  0148  01C5               	clrf	??_ES_Initialize+1
  4208  0149  35C4               	lslf	??_ES_Initialize,f
  4209  014A  0DC5               	rlf	??_ES_Initialize+1,f
  4210  014B  0844               	movf	??_ES_Initialize,w
  4211  014C  3E01               	addlw	1
  4212  014D  00C6               	movwf	??_ES_Initialize+2
  4213  014E  3000               	movlw	0
  4214  014F  3D45               	addwfc	??_ES_Initialize+1,w
  4215  0150  00C7               	movwf	??_ES_Initialize+3
  4216  0151  30A9               	movlw	low (_EventQueues| (0+32768))
  4217  0152  0746               	addwf	??_ES_Initialize+2,w
  4218  0153  0084               	movwf	4
  4219  0154  3080               	movlw	high (_EventQueues| (0+32768))
  4220  0155  3D47               	addwfc	??_ES_Initialize+3,w
  4221  0156  0085               	movwf	5
  4222  0157  0800               	movf	0,w	;code access
  4223  0158  00C8               	movwf	??_ES_Initialize+4
  4224  0159  0848               	movf	??_ES_Initialize+4,w
  4225  015A  00A0               	movwf	ES_InitQueue@BlockSize
  4226  015B  084B               	movf	ES_Initialize@i,w
  4227  015C  00C9               	movwf	??_ES_Initialize+5
  4228  015D  01CA               	clrf	??_ES_Initialize+6
  4229  015E  35C9               	lslf	??_ES_Initialize+5,f
  4230  015F  0DCA               	rlf	??_ES_Initialize+6,f
  4231  0160  30A9               	movlw	low (_EventQueues| (0+32768))
  4232  0161  0749               	addwf	??_ES_Initialize+5,w
  4233  0162  0084               	movwf	4
  4234  0163  3080               	movlw	high (_EventQueues| (0+32768))
  4235  0164  3D4A               	addwfc	??_ES_Initialize+6,w
  4236  0165  0085               	movwf	5
  4237  0166  0800               	movf	0,w	;code access
  4238  0167  3185  255B  3181   	fcall	_ES_InitQueue
  4239                           
  4240                           ;ES_Framework.c: 253: if ( ServDescList[i].InitFunc(i) != 1 )
  4241  016A  0020               	movlb	0	; select bank0
  4242  016B  084B               	movf	ES_Initialize@i,w
  4243  016C  00C4               	movwf	??_ES_Initialize
  4244  016D  0844               	movf	??_ES_Initialize,w
  4245  016E  00BD               	movwf	InitSPI_Service@Priority
  4246  016F  084B               	movf	ES_Initialize@i,w
  4247  0170  00C5               	movwf	??_ES_Initialize+1
  4248  0171  01C6               	clrf	??_ES_Initialize+2
  4249  0172  35C5               	lslf	??_ES_Initialize+1,f
  4250  0173  0DC6               	rlf	??_ES_Initialize+2,f
  4251  0174  35C5               	lslf	??_ES_Initialize+1,f
  4252  0175  0DC6               	rlf	??_ES_Initialize+2,f
  4253  0176  30A1               	movlw	low (_ServDescList| (0+32768))
  4254  0177  0745               	addwf	??_ES_Initialize+1,w
  4255  0178  0084               	movwf	4
  4256  0179  3080               	movlw	high (_ServDescList| (0+32768))
  4257  017A  3D46               	addwfc	??_ES_Initialize+2,w
  4258  017B  0085               	movwf	5
  4259  017C  3F01               	moviw [1]fsr0
  4260  017D  008A               	movwf	10
  4261  017E  3F00               	moviw [0]fsr0
  4262  017F  000A               	callw
  4263  0180  3181               	pagesel	$
  4264  0181  3A01               	xorlw	1
  4265  0182  1903               	skipnz
  4266  0183  2986               	goto	l1929
  4267                           
  4268                           ;ES_Framework.c: 254: return FailedInit;
  4269  0184  3005               	movlw	5
  4270  0185  0008               	return
  4271  0186                     l1929:	
  4272  0186  3001               	movlw	1
  4273  0187  0020               	movlb	0	; select bank0
  4274  0188  00C4               	movwf	??_ES_Initialize
  4275  0189  0844               	movf	??_ES_Initialize,w
  4276  018A  07CB               	addwf	ES_Initialize@i,f
  4277  018B  3002               	movlw	2
  4278  018C  024B               	subwf	ES_Initialize@i,w
  4279  018D  1C03               	skipc
  4280  018E  2918               	goto	l1915
  4281  018F                     l1933:	
  4282                           
  4283                           ;ES_Framework.c: 255: }
  4284                           ;ES_Framework.c: 256: return Success;
  4285  018F  3000               	movlw	0
  4286  0190  0008               	return
  4287  0191                     __end_of_ES_Initialize:	
  4288                           
  4289                           	psect	text16
  4290  05EF                     __ptext16:	
  4291 ;; *************** function _InitSPI_Service *****************
  4292 ;; Defined at:
  4293 ;;		line 47 in file "SPI_Service.c"
  4294 ;; Parameters:    Size  Location     Type
  4295 ;;  Priority        1   29[BANK0 ] unsigned char 
  4296 ;; Auto vars:     Size  Location     Type
  4297 ;;		None
  4298 ;; Return value:  Size  Location     Type
  4299 ;;                  1    wreg      unsigned char 
  4300 ;; Registers used:
  4301 ;;		wreg, status,2, status,0, pclath, cstack
  4302 ;; Tracked objects:
  4303 ;;		On entry : 0/0
  4304 ;;		On exit  : 0/0
  4305 ;;		Unchanged: 0/0
  4306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4307 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4309 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4310 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4311 ;;Total ram usage:        2 bytes
  4312 ;; Hardware stack levels used:    1
  4313 ;; Hardware stack levels required when called:    4
  4314 ;; This function calls:
  4315 ;;		_InitSPI
  4316 ;; This function is called by:
  4317 ;;		_ES_Initialize
  4318 ;; This function uses a non-reentrant model
  4319 ;;
  4320                           
  4321                           
  4322                           ;psect for function _InitSPI_Service
  4323  05EF                     _InitSPI_Service:	
  4324                           
  4325                           ;SPI_Service.c: 50: MyPriority = Priority;
  4326                           
  4327                           ;incstack = 0
  4328                           ; Regs used in _InitSPI_Service: [wreg+status,2+status,0+pclath+cstack]
  4329  05EF  0020               	movlb	0	; select bank0
  4330  05F0  083D               	movf	InitSPI_Service@Priority,w
  4331  05F1  00BE               	movwf	??_InitSPI_Service
  4332  05F2  083E               	movf	??_InitSPI_Service,w
  4333  05F3  00E0               	movwf	SPI_Service@MyPriority
  4334                           
  4335                           ;SPI_Service.c: 51: InitSPI();
  4336  05F4  3185  2588         	fcall	_InitSPI
  4337                           
  4338                           ;SPI_Service.c: 52: return 1;
  4339  05F6  3001               	movlw	1
  4340  05F7  0008               	return
  4341  05F8                     __end_of_InitSPI_Service:	
  4342                           
  4343                           	psect	text17
  4344  04B2                     __ptext17:	
  4345 ;; *************** function _InitToggleService *****************
  4346 ;; Defined at:
  4347 ;;		line 62 in file "ToggleService.c"
  4348 ;; Parameters:    Size  Location     Type
  4349 ;;  Priority        1   29[BANK0 ] unsigned char 
  4350 ;; Auto vars:     Size  Location     Type
  4351 ;;  ThisEvent       3   31[BANK0 ] struct ES_Event_t
  4352 ;; Return value:  Size  Location     Type
  4353 ;;                  1    wreg      unsigned char 
  4354 ;; Registers used:
  4355 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4356 ;; Tracked objects:
  4357 ;;		On entry : 0/0
  4358 ;;		On exit  : 0/0
  4359 ;;		Unchanged: 0/0
  4360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4361 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4362 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4363 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4364 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4365 ;;Total ram usage:        5 bytes
  4366 ;; Hardware stack levels used:    1
  4367 ;; Hardware stack levels required when called:    6
  4368 ;; This function calls:
  4369 ;;		_ES_PostToService
  4370 ;;		_ES_Timer_InitTimer
  4371 ;; This function is called by:
  4372 ;;		_ES_Initialize
  4373 ;; This function uses a non-reentrant model
  4374 ;;
  4375                           
  4376                           
  4377                           ;psect for function _InitToggleService
  4378  04B2                     _InitToggleService:	
  4379                           
  4380                           ;ToggleService.c: 64: ES_Event ThisEvent;
  4381                           ;ToggleService.c: 66: MyPriority = Priority;
  4382                           
  4383                           ;incstack = 0
  4384                           ; Regs used in _InitToggleService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4385  04B2  0020               	movlb	0	; select bank0
  4386  04B3  083D               	movf	InitToggleService@Priority,w
  4387  04B4  00BE               	movwf	??_InitToggleService
  4388  04B5  083E               	movf	??_InitToggleService,w
  4389  04B6  00E1               	movwf	ToggleService@MyPriority
  4390                           
  4391                           ;ToggleService.c: 70: PORTA = 0x00;
  4392  04B7  018C               	clrf	12	;volatile
  4393                           
  4394                           ;ToggleService.c: 71: LATA = 0x00;
  4395  04B8  0022               	movlb	2	; select bank2
  4396  04B9  018C               	clrf	12	;volatile
  4397                           
  4398                           ;ToggleService.c: 72: ANSELA = 0x00;
  4399  04BA  0023               	movlb	3	; select bank3
  4400  04BB  018C               	clrf	12	;volatile
  4401                           
  4402                           ;ToggleService.c: 73: TRISA = 0b11111100;
  4403  04BC  30FC               	movlw	252
  4404  04BD  0021               	movlb	1	; select bank1
  4405  04BE  008C               	movwf	12	;volatile
  4406                           
  4407                           ;ToggleService.c: 74: RA1 = 1;
  4408  04BF  0020               	movlb	0	; select bank0
  4409  04C0  148C               	bsf	12,1	;volatile
  4410                           
  4411                           ;ToggleService.c: 75: RA0 = 0;
  4412  04C1  100C               	bcf	12,0	;volatile
  4413                           
  4414                           ;ToggleService.c: 76: ES_Timer_InitTimer(0,100);
  4415  04C2  3064               	movlw	100
  4416  04C3  00A0               	movwf	ES_Timer_InitTimer@NewTime
  4417  04C4  3000               	movlw	0
  4418  04C5  00A1               	movwf	ES_Timer_InitTimer@NewTime+1
  4419  04C6  3000               	movlw	0
  4420  04C7  3184  240E  3184   	fcall	_ES_Timer_InitTimer
  4421                           
  4422                           ;ToggleService.c: 79: ThisEvent.EventType = ES_INIT;
  4423  04CA  3002               	movlw	2
  4424  04CB  0020               	movlb	0	; select bank0
  4425  04CC  00BE               	movwf	??_InitToggleService
  4426  04CD  083E               	movf	??_InitToggleService,w
  4427  04CE  00BF               	movwf	InitToggleService@ThisEvent
  4428                           
  4429                           ;ToggleService.c: 80: if (ES_PostToService( MyPriority, ThisEvent) == 1)
  4430  04CF  083F               	movf	InitToggleService@ThisEvent,w
  4431  04D0  00B5               	movwf	ES_PostToService@TheEvent
  4432  04D1  0840               	movf	InitToggleService@ThisEvent+1,w
  4433  04D2  00B6               	movwf	ES_PostToService@TheEvent+1
  4434  04D3  0841               	movf	InitToggleService@ThisEvent+2,w
  4435  04D4  00B7               	movwf	ES_PostToService@TheEvent+2
  4436  04D5  0861               	movf	ToggleService@MyPriority,w
  4437  04D6  3184  247C  3184   	fcall	_ES_PostToService
  4438  04D9  3A01               	xorlw	1
  4439  04DA  1D03               	skipz
  4440  04DB  2CDE               	goto	l1853
  4441                           
  4442                           ;ToggleService.c: 81: {
  4443                           ;ToggleService.c: 82: return 1;
  4444  04DC  3001               	movlw	1
  4445                           
  4446                           ;ToggleService.c: 83: }else
  4447  04DD  0008               	return
  4448  04DE                     l1853:	
  4449                           
  4450                           ;ToggleService.c: 84: {
  4451                           ;ToggleService.c: 85: return 0;
  4452  04DE  3000               	movlw	0
  4453  04DF  0008               	return
  4454  04E0                     __end_of_InitToggleService:	
  4455                           
  4456                           	psect	text18
  4457  040E                     __ptext18:	
  4458 ;; *************** function _ES_Timer_InitTimer *****************
  4459 ;; Defined at:
  4460 ;;		line 229 in file "ES_Timers.c"
  4461 ;; Parameters:    Size  Location     Type
  4462 ;;  Num             1    wreg     unsigned char 
  4463 ;;  NewTime         2    0[BANK0 ] unsigned int 
  4464 ;; Auto vars:     Size  Location     Type
  4465 ;;  Num             1    6[BANK0 ] unsigned char 
  4466 ;; Return value:  Size  Location     Type
  4467 ;;                  1    wreg      enum E1961
  4468 ;; Registers used:
  4469 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  4470 ;; Tracked objects:
  4471 ;;		On entry : 0/0
  4472 ;;		On exit  : 0/0
  4473 ;;		Unchanged: 0/0
  4474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4475 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4476 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4477 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4478 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4479 ;;Total ram usage:        7 bytes
  4480 ;; Hardware stack levels used:    1
  4481 ;; Hardware stack levels required when called:    3
  4482 ;; This function calls:
  4483 ;;		Nothing
  4484 ;; This function is called by:
  4485 ;;		_InitToggleService
  4486 ;;		_RunToggleService
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490                           
  4491                           ;psect for function _ES_Timer_InitTimer
  4492  040E                     _ES_Timer_InitTimer:	
  4493                           
  4494                           ;incstack = 0
  4495                           ; Regs used in _ES_Timer_InitTimer: [wreg-fsr1h+status,2+status,0+pclath]
  4496                           ;ES_Timer_InitTimer@Num stored from wreg
  4497  040E  0020               	movlb	0	; select bank0
  4498  040F  00A6               	movwf	ES_Timer_InitTimer@Num
  4499                           
  4500                           ;ES_Timers.c: 232: if( (Num >= (sizeof(TMR_TimerArray)/sizeof(TMR_TimerArray[0]))) ||
  4501                           ;ES_Timers.c: 234: (Timer2PostFunc[Num] == ((pPostFunc)0)) ||
  4502                           ;ES_Timers.c: 236: (NewTime == 0) )
  4503  0410  3010               	movlw	16
  4504  0411  0226               	subwf	ES_Timer_InitTimer@Num,w
  4505  0412  1803               	skipnc
  4506  0413  0008               	return
  4507  0414  0826               	movf	ES_Timer_InitTimer@Num,w
  4508  0415  00A2               	movwf	??_ES_Timer_InitTimer
  4509  0416  01A3               	clrf	??_ES_Timer_InitTimer+1
  4510  0417  35A2               	lslf	??_ES_Timer_InitTimer,f
  4511  0418  0DA3               	rlf	??_ES_Timer_InitTimer+1,f
  4512  0419  3072               	movlw	low (_Timer2PostFunc| (0+32768))
  4513  041A  0722               	addwf	??_ES_Timer_InitTimer,w
  4514  041B  0084               	movwf	4
  4515  041C  3080               	movlw	high (_Timer2PostFunc| (0+32768))
  4516  041D  3D23               	addwfc	??_ES_Timer_InitTimer+1,w
  4517  041E  0085               	movwf	5
  4518  041F  0012               	moviw fsr0++
  4519  0420  00A4               	movwf	??_ES_Timer_InitTimer+2
  4520  0421  0012               	moviw fsr0++
  4521  0422  04A4               	iorwf	??_ES_Timer_InitTimer+2,f
  4522  0423  1903               	btfsc	3,2
  4523  0424  0008               	return
  4524  0425  0820               	movf	ES_Timer_InitTimer@NewTime,w
  4525  0426  0421               	iorwf	ES_Timer_InitTimer@NewTime+1,w
  4526  0427  1903               	btfsc	3,2
  4527  0428  0008               	return
  4528                           
  4529                           ;ES_Timers.c: 238: TMR_TimerArray[Num] = NewTime;
  4530                           
  4531                           ;ES_Timers.c: 237: return ES_Timer_ERR;
  4532                           ;	Return value of _ES_Timer_InitTimer is never used
  4533  0429  3526               	lslf	ES_Timer_InitTimer@Num,w
  4534  042A  3EA0               	addlw	(low (_TMR_TimerArray| 0))& (0+255)
  4535  042B  0086               	movwf	6
  4536  042C  0187               	clrf	7
  4537  042D  0820               	movf	ES_Timer_InitTimer@NewTime,w
  4538  042E  3FC0               	movwi [0]fsr1
  4539  042F  0821               	movf	ES_Timer_InitTimer@NewTime+1,w
  4540  0430  3FC1               	movwi [1]fsr1
  4541                           
  4542                           ;ES_Timers.c: 239: TMR_ActiveFlags |= BitNum2SetMask[Num];
  4543  0431  0826               	movf	ES_Timer_InitTimer@Num,w
  4544  0432  00A2               	movwf	??_ES_Timer_InitTimer
  4545  0433  01A3               	clrf	??_ES_Timer_InitTimer+1
  4546  0434  35A2               	lslf	??_ES_Timer_InitTimer,f
  4547  0435  0DA3               	rlf	??_ES_Timer_InitTimer+1,f
  4548  0436  3052               	movlw	low (_BitNum2SetMask| (0+32768))
  4549  0437  0722               	addwf	??_ES_Timer_InitTimer,w
  4550  0438  0084               	movwf	4
  4551  0439  3080               	movlw	high (_BitNum2SetMask| (0+32768))
  4552  043A  3D23               	addwfc	??_ES_Timer_InitTimer+1,w
  4553  043B  0085               	movwf	5
  4554  043C  3F00               	moviw [0]fsr0
  4555  043D  00A4               	movwf	??_ES_Timer_InitTimer+2
  4556  043E  3F01               	moviw [1]fsr0
  4557  043F  00A5               	movwf	??_ES_Timer_InitTimer+3
  4558  0440  0824               	movf	??_ES_Timer_InitTimer+2,w
  4559  0441  04DB               	iorwf	_TMR_ActiveFlags,f
  4560  0442  0825               	movf	??_ES_Timer_InitTimer+3,w
  4561  0443  04DC               	iorwf	_TMR_ActiveFlags+1,f
  4562  0444  0008               	return
  4563  0445                     __end_of_ES_Timer_InitTimer:	
  4564                           ;ES_Timers.c: 240: return ES_Timer_OK;
  4565                           ;	Return value of _ES_Timer_InitTimer is never used
  4566                           
  4567                           
  4568                           	psect	text19
  4569  047C                     __ptext19:	
  4570 ;; *************** function _ES_PostToService *****************
  4571 ;; Defined at:
  4572 ;;		line 352 in file "ES_Framework.c"
  4573 ;; Parameters:    Size  Location     Type
  4574 ;;  WhichService    1    wreg     unsigned char 
  4575 ;;  TheEvent        3   21[BANK0 ] struct ES_Event_t
  4576 ;; Auto vars:     Size  Location     Type
  4577 ;;  WhichService    1   28[BANK0 ] unsigned char 
  4578 ;; Return value:  Size  Location     Type
  4579 ;;                  1    wreg      unsigned char 
  4580 ;; Registers used:
  4581 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4582 ;; Tracked objects:
  4583 ;;		On entry : 0/0
  4584 ;;		On exit  : 0/0
  4585 ;;		Unchanged: 0/0
  4586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4587 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4588 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4589 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4590 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4591 ;;Total ram usage:        8 bytes
  4592 ;; Hardware stack levels used:    1
  4593 ;; Hardware stack levels required when called:    5
  4594 ;; This function calls:
  4595 ;;		_ES_EnQueueFIFO
  4596 ;; This function is called by:
  4597 ;;		_InitToggleService
  4598 ;;		_PostToggleService
  4599 ;;		_PostSPI_Service
  4600 ;;		_InitTemplateFSM
  4601 ;;		_PostTemplateFSM
  4602 ;;		_InitTemplateService
  4603 ;;		_PostTemplateService
  4604 ;; This function uses a non-reentrant model
  4605 ;;
  4606                           
  4607                           
  4608                           ;psect for function _ES_PostToService
  4609  047C                     _ES_PostToService:	
  4610                           
  4611                           ;incstack = 0
  4612                           ; Regs used in _ES_PostToService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4613                           ;ES_PostToService@WhichService stored from wreg
  4614  047C  0020               	movlb	0	; select bank0
  4615  047D  00BC               	movwf	ES_PostToService@WhichService
  4616                           
  4617                           ;ES_Framework.c: 353: if ((WhichService < (sizeof(EventQueues)/sizeof(EventQueues[0]))) 
      +                          &&
  4618                           ;ES_Framework.c: 354: (ES_EnQueueFIFO( EventQueues[WhichService].pMem, TheEvent) ==
  4619                           ;ES_Framework.c: 355: 1 )){
  4620  047E  3002               	movlw	2
  4621  047F  023C               	subwf	ES_PostToService@WhichService,w
  4622  0480  1803               	skipnc
  4623  0481  2CB0               	goto	l1657
  4624  0482  0835               	movf	ES_PostToService@TheEvent,w
  4625  0483  00AB               	movwf	ES_EnQueueFIFO@Event2Add
  4626  0484  0836               	movf	ES_PostToService@TheEvent+1,w
  4627  0485  00AC               	movwf	ES_EnQueueFIFO@Event2Add+1
  4628  0486  0837               	movf	ES_PostToService@TheEvent+2,w
  4629  0487  00AD               	movwf	ES_EnQueueFIFO@Event2Add+2
  4630  0488  083C               	movf	ES_PostToService@WhichService,w
  4631  0489  00B8               	movwf	??_ES_PostToService
  4632  048A  01B9               	clrf	??_ES_PostToService+1
  4633  048B  35B8               	lslf	??_ES_PostToService,f
  4634  048C  0DB9               	rlf	??_ES_PostToService+1,f
  4635  048D  30A9               	movlw	low (_EventQueues| (0+32768))
  4636  048E  0738               	addwf	??_ES_PostToService,w
  4637  048F  0084               	movwf	4
  4638  0490  3080               	movlw	high (_EventQueues| (0+32768))
  4639  0491  3D39               	addwfc	??_ES_PostToService+1,w
  4640  0492  0085               	movwf	5
  4641  0493  0800               	movf	0,w	;code access
  4642  0494  3182  22E4  3184   	fcall	_ES_EnQueueFIFO
  4643  0497  3A01               	xorlw	1
  4644  0498  1D03               	skipz
  4645  0499  2CB0               	goto	l1657
  4646                           
  4647                           ;ES_Framework.c: 356: Ready |= BitNum2SetMask[WhichService];
  4648  049A  0020               	movlb	0	; select bank0
  4649  049B  083C               	movf	ES_PostToService@WhichService,w
  4650  049C  00B8               	movwf	??_ES_PostToService
  4651  049D  01B9               	clrf	??_ES_PostToService+1
  4652  049E  35B8               	lslf	??_ES_PostToService,f
  4653  049F  0DB9               	rlf	??_ES_PostToService+1,f
  4654  04A0  3052               	movlw	low (_BitNum2SetMask| (0+32768))
  4655  04A1  0738               	addwf	??_ES_PostToService,w
  4656  04A2  0084               	movwf	4
  4657  04A3  3080               	movlw	high (_BitNum2SetMask| (0+32768))
  4658  04A4  3D39               	addwfc	??_ES_PostToService+1,w
  4659  04A5  0085               	movwf	5
  4660  04A6  3F00               	moviw [0]fsr0
  4661  04A7  00BA               	movwf	??_ES_PostToService+2
  4662  04A8  3F01               	moviw [1]fsr0
  4663  04A9  00BB               	movwf	??_ES_PostToService+3
  4664  04AA  083A               	movf	??_ES_PostToService+2,w
  4665  04AB  04D7               	iorwf	_Ready,f
  4666  04AC  083B               	movf	??_ES_PostToService+3,w
  4667  04AD  04D8               	iorwf	_Ready+1,f
  4668                           
  4669                           ;ES_Framework.c: 357: return 1;
  4670  04AE  3001               	movlw	1
  4671                           
  4672                           ;ES_Framework.c: 358: } else
  4673  04AF  0008               	return
  4674  04B0                     l1657:	
  4675                           
  4676                           ;ES_Framework.c: 359: return 0;
  4677  04B0  3000               	movlw	0
  4678  04B1  0008               	return
  4679  04B2                     __end_of_ES_PostToService:	
  4680                           
  4681                           	psect	text20
  4682  02E4                     __ptext20:	
  4683 ;; *************** function _ES_EnQueueFIFO *****************
  4684 ;; Defined at:
  4685 ;;		line 85 in file "ES_Queue.c"
  4686 ;; Parameters:    Size  Location     Type
  4687 ;;  pBlock          1    wreg     PTR struct ES_Event_t
  4688 ;;		 -> Queue1(12), Queue0(18), 
  4689 ;;  Event2Add       3   11[BANK0 ] struct ES_Event_t
  4690 ;; Auto vars:     Size  Location     Type
  4691 ;;  pBlock          1   19[BANK0 ] PTR struct ES_Event_t
  4692 ;;		 -> Queue1(12), Queue0(18), 
  4693 ;;  pThisQueue      1   20[BANK0 ] PTR struct .
  4694 ;;		 -> Queue1(12), Queue0(18), 
  4695 ;;  SaveCrit        1   18[BANK0 ] unsigned char 
  4696 ;; Return value:  Size  Location     Type
  4697 ;;                  1    wreg      unsigned char 
  4698 ;; Registers used:
  4699 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4700 ;; Tracked objects:
  4701 ;;		On entry : 0/0
  4702 ;;		On exit  : 0/0
  4703 ;;		Unchanged: 0/0
  4704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4705 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4706 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4707 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4708 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4709 ;;Total ram usage:       10 bytes
  4710 ;; Hardware stack levels used:    1
  4711 ;; Hardware stack levels required when called:    4
  4712 ;; This function calls:
  4713 ;;		___awmod
  4714 ;;		___bmul
  4715 ;; This function is called by:
  4716 ;;		_ES_PostToService
  4717 ;;		_ES_PostAll
  4718 ;; This function uses a non-reentrant model
  4719 ;;
  4720                           
  4721                           
  4722                           ;psect for function _ES_EnQueueFIFO
  4723  02E4                     _ES_EnQueueFIFO:	
  4724                           
  4725                           ;incstack = 0
  4726                           ; Regs used in _ES_EnQueueFIFO: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4727                           ;ES_EnQueueFIFO@pBlock stored from wreg
  4728  02E4  0020               	movlb	0	; select bank0
  4729  02E5  00B3               	movwf	ES_EnQueueFIFO@pBlock
  4730                           
  4731                           ;ES_Queue.c: 87: unsigned char SaveCrit;
  4732                           ;ES_Queue.c: 88: pQueue_t pThisQueue;
  4733                           ;ES_Queue.c: 89: pThisQueue = (pQueue_t)pBlock;
  4734  02E6  0833               	movf	ES_EnQueueFIFO@pBlock,w
  4735  02E7  00AE               	movwf	??_ES_EnQueueFIFO
  4736  02E8  082E               	movf	??_ES_EnQueueFIFO,w
  4737  02E9  00B4               	movwf	ES_EnQueueFIFO@pThisQueue
  4738                           
  4739                           ;ES_Queue.c: 91: if ( pThisQueue->NumEntries < pThisQueue->QueueSize)
  4740  02EA  0834               	movf	ES_EnQueueFIFO@pThisQueue,w
  4741  02EB  3E02               	addlw	2
  4742  02EC  0086               	movwf	6
  4743  02ED  0187               	clrf	7
  4744  02EE  0834               	movf	ES_EnQueueFIFO@pThisQueue,w
  4745  02EF  0084               	movwf	4
  4746  02F0  0185               	clrf	5
  4747  02F1  0800               	movf	0,w
  4748  02F2  0201               	subwf	1,w
  4749  02F3  1803               	skipnc
  4750  02F4  2B34               	goto	l1641
  4751                           
  4752                           ;ES_Queue.c: 92: {
  4753                           ;ES_Queue.c: 95: do{ SaveCrit = INTCON; GIE = 0;}while(0);
  4754  02F5  080B               	movf	11,w	;volatile
  4755  02F6  00AE               	movwf	??_ES_EnQueueFIFO
  4756  02F7  082E               	movf	??_ES_EnQueueFIFO,w
  4757  02F8  00B2               	movwf	ES_EnQueueFIFO@SaveCrit
  4758  02F9  138B               	bcf	11,7	;volatile
  4759                           
  4760                           ;ES_Queue.c: 96: pBlock[ 1 + ((pThisQueue->CurrentIndex + pThisQueue->NumEntries)
  4761                           ;ES_Queue.c: 97: % pThisQueue->QueueSize)] = Event2Add;
  4762  02FA  3003               	movlw	3
  4763  02FB  00AE               	movwf	??_ES_EnQueueFIFO
  4764  02FC  082E               	movf	??_ES_EnQueueFIFO,w
  4765  02FD  00A7               	movwf	___bmul@multiplicand
  4766  02FE  0834               	movf	ES_EnQueueFIFO@pThisQueue,w
  4767  02FF  0086               	movwf	6
  4768  0300  0187               	clrf	7
  4769  0301  0801               	movf	1,w
  4770  0302  00AF               	movwf	??_ES_EnQueueFIFO+1
  4771  0303  01B0               	clrf	??_ES_EnQueueFIFO+2
  4772  0304  082F               	movf	??_ES_EnQueueFIFO+1,w
  4773  0305  00A0               	movwf	___awmod@divisor
  4774  0306  0830               	movf	??_ES_EnQueueFIFO+2,w
  4775  0307  00A1               	movwf	___awmod@divisor+1
  4776  0308  0834               	movf	ES_EnQueueFIFO@pThisQueue,w
  4777  0309  3E02               	addlw	2
  4778  030A  0086               	movwf	6
  4779  030B  0187               	clrf	7
  4780  030C  0A34               	incf	ES_EnQueueFIFO@pThisQueue,w
  4781  030D  0084               	movwf	4
  4782  030E  0185               	clrf	5
  4783  030F  0800               	movf	0,w
  4784  0310  0701               	addwf	1,w
  4785  0311  00A2               	movwf	___awmod@dividend
  4786  0312  01A3               	clrf	___awmod@dividend+1
  4787  0313  0DA3               	rlf	___awmod@dividend+1,f
  4788  0314  3183  23C8  3182   	fcall	___awmod
  4789  0317  0020               	movlb	0	; select bank0
  4790  0318  0820               	movf	?___awmod,w
  4791  0319  3E01               	addlw	1
  4792  031A  3185  259C         	fcall	___bmul
  4793  031C  0020               	movlb	0	; select bank0
  4794  031D  0733               	addwf	ES_EnQueueFIFO@pBlock,w
  4795  031E  00B1               	movwf	??_ES_EnQueueFIFO+3
  4796  031F  0831               	movf	??_ES_EnQueueFIFO+3,w
  4797  0320  0086               	movwf	6
  4798  0321  0187               	clrf	7
  4799  0322  082B               	movf	ES_EnQueueFIFO@Event2Add,w
  4800  0323  3FC0               	movwi [0]fsr1
  4801  0324  082C               	movf	ES_EnQueueFIFO@Event2Add+1,w
  4802  0325  3FC1               	movwi [1]fsr1
  4803  0326  082D               	movf	ES_EnQueueFIFO@Event2Add+2,w
  4804  0327  3FC2               	movwi [2]fsr1
  4805                           
  4806                           ;ES_Queue.c: 98: pThisQueue->NumEntries++;
  4807  0328  3001               	movlw	1
  4808  0329  00AE               	movwf	??_ES_EnQueueFIFO
  4809  032A  0834               	movf	ES_EnQueueFIFO@pThisQueue,w
  4810  032B  3E02               	addlw	2
  4811  032C  0086               	movwf	6
  4812  032D  0187               	clrf	7
  4813  032E  082E               	movf	??_ES_EnQueueFIFO,w
  4814  032F  0781               	addwf	1,f
  4815                           
  4816                           ;ES_Queue.c: 99: {INTCON = SaveCrit;};
  4817  0330  0832               	movf	ES_EnQueueFIFO@SaveCrit,w
  4818  0331  008B               	movwf	11	;volatile
  4819                           
  4820                           ;ES_Queue.c: 101: return(1);
  4821  0332  3001               	movlw	1
  4822                           
  4823                           ;ES_Queue.c: 102: }else
  4824  0333  0008               	return
  4825  0334                     l1641:	
  4826                           
  4827                           ;ES_Queue.c: 103: return(0);
  4828  0334  3000               	movlw	0
  4829  0335  0008               	return
  4830  0336                     __end_of_ES_EnQueueFIFO:	
  4831                           
  4832                           	psect	text21
  4833  059C                     __ptext21:	
  4834 ;; *************** function ___bmul *****************
  4835 ;; Defined at:
  4836 ;;		line 4 in file "/Applications/microchip/xc8/v1.38/sources/common/Umul8.c"
  4837 ;; Parameters:    Size  Location     Type
  4838 ;;  multiplier      1    wreg     unsigned char 
  4839 ;;  multiplicand    1    7[BANK0 ] unsigned char 
  4840 ;; Auto vars:     Size  Location     Type
  4841 ;;  multiplier      1   10[BANK0 ] unsigned char 
  4842 ;;  product         1    9[BANK0 ] unsigned char 
  4843 ;; Return value:  Size  Location     Type
  4844 ;;                  1    wreg      unsigned char 
  4845 ;; Registers used:
  4846 ;;		wreg, status,2, status,0
  4847 ;; Tracked objects:
  4848 ;;		On entry : 0/0
  4849 ;;		On exit  : 0/0
  4850 ;;		Unchanged: 0/0
  4851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4852 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4853 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4854 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4855 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4856 ;;Total ram usage:        4 bytes
  4857 ;; Hardware stack levels used:    1
  4858 ;; Hardware stack levels required when called:    3
  4859 ;; This function calls:
  4860 ;;		Nothing
  4861 ;; This function is called by:
  4862 ;;		_ES_EnQueueFIFO
  4863 ;;		_ES_DeQueue
  4864 ;;		_ES_EnQueueLIFO
  4865 ;; This function uses a non-reentrant model
  4866 ;;
  4867                           
  4868                           
  4869                           ;psect for function ___bmul
  4870  059C                     ___bmul:	
  4871                           
  4872                           ;incstack = 0
  4873                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4874                           ;___bmul@multiplier stored from wreg
  4875  059C  0020               	movlb	0	; select bank0
  4876  059D  00AA               	movwf	___bmul@multiplier
  4877  059E  01A9               	clrf	___bmul@product
  4878  059F                     l1571:	
  4879  059F  1C2A               	btfss	___bmul@multiplier,0
  4880  05A0  2DA5               	goto	l1575
  4881  05A1  0827               	movf	___bmul@multiplicand,w
  4882  05A2  00A8               	movwf	??___bmul
  4883  05A3  0828               	movf	??___bmul,w
  4884  05A4  07A9               	addwf	___bmul@product,f
  4885  05A5                     l1575:	
  4886  05A5  1003               	clrc
  4887  05A6  0DA7               	rlf	___bmul@multiplicand,f
  4888  05A7  1003               	clrc
  4889  05A8  0CAA               	rrf	___bmul@multiplier,f
  4890  05A9  082A               	movf	___bmul@multiplier,w
  4891  05AA  1D03               	btfss	3,2
  4892  05AB  2D9F               	goto	l1571
  4893  05AC  0829               	movf	___bmul@product,w
  4894  05AD  0008               	return
  4895  05AE                     __end_of___bmul:	
  4896                           
  4897                           	psect	text22
  4898  03C8                     __ptext22:	
  4899 ;; *************** function ___awmod *****************
  4900 ;; Defined at:
  4901 ;;		line 6 in file "/Applications/microchip/xc8/v1.38/sources/common/awmod.c"
  4902 ;; Parameters:    Size  Location     Type
  4903 ;;  divisor         2    0[BANK0 ] int 
  4904 ;;  dividend        2    2[BANK0 ] int 
  4905 ;; Auto vars:     Size  Location     Type
  4906 ;;  sign            1    6[BANK0 ] unsigned char 
  4907 ;;  counter         1    5[BANK0 ] unsigned char 
  4908 ;; Return value:  Size  Location     Type
  4909 ;;                  2    0[BANK0 ] int 
  4910 ;; Registers used:
  4911 ;;		wreg, status,2, status,0
  4912 ;; Tracked objects:
  4913 ;;		On entry : 0/0
  4914 ;;		On exit  : 0/0
  4915 ;;		Unchanged: 0/0
  4916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4917 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4918 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4919 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4920 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4921 ;;Total ram usage:        7 bytes
  4922 ;; Hardware stack levels used:    1
  4923 ;; Hardware stack levels required when called:    3
  4924 ;; This function calls:
  4925 ;;		Nothing
  4926 ;; This function is called by:
  4927 ;;		_ES_EnQueueFIFO
  4928 ;; This function uses a non-reentrant model
  4929 ;;
  4930                           
  4931                           
  4932                           ;psect for function ___awmod
  4933  03C8                     ___awmod:	
  4934                           
  4935                           ;incstack = 0
  4936                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4937  03C8  0020               	movlb	0	; select bank0
  4938  03C9  01A6               	clrf	___awmod@sign
  4939  03CA  1FA3               	btfss	___awmod@dividend+1,7
  4940  03CB  2BD3               	goto	l1591
  4941  03CC  09A2               	comf	___awmod@dividend,f
  4942  03CD  09A3               	comf	___awmod@dividend+1,f
  4943  03CE  0AA2               	incf	___awmod@dividend,f
  4944  03CF  1903               	skipnz
  4945  03D0  0AA3               	incf	___awmod@dividend+1,f
  4946  03D1  01A6               	clrf	___awmod@sign
  4947  03D2  0AA6               	incf	___awmod@sign,f
  4948  03D3                     l1591:	
  4949  03D3  1FA1               	btfss	___awmod@divisor+1,7
  4950  03D4  2BDA               	goto	l1595
  4951  03D5  09A0               	comf	___awmod@divisor,f
  4952  03D6  09A1               	comf	___awmod@divisor+1,f
  4953  03D7  0AA0               	incf	___awmod@divisor,f
  4954  03D8  1903               	skipnz
  4955  03D9  0AA1               	incf	___awmod@divisor+1,f
  4956  03DA                     l1595:	
  4957  03DA  0820               	movf	___awmod@divisor,w
  4958  03DB  0421               	iorwf	___awmod@divisor+1,w
  4959  03DC  1903               	btfsc	3,2
  4960  03DD  2C01               	goto	l1613
  4961  03DE  01A5               	clrf	___awmod@counter
  4962  03DF  0AA5               	incf	___awmod@counter,f
  4963  03E0                     l1603:	
  4964  03E0  1BA1               	btfsc	___awmod@divisor+1,7
  4965  03E1  2BEC               	goto	l1605
  4966  03E2  3001               	movlw	1
  4967  03E3                     u935:	
  4968  03E3  35A0               	lslf	___awmod@divisor,f
  4969  03E4  0DA1               	rlf	___awmod@divisor+1,f
  4970  03E5  0B89               	decfsz	9,f
  4971  03E6  2BE3               	goto	u935
  4972  03E7  3001               	movlw	1
  4973  03E8  00A4               	movwf	??___awmod
  4974  03E9  0824               	movf	??___awmod,w
  4975  03EA  07A5               	addwf	___awmod@counter,f
  4976  03EB  2BE0               	goto	l1603
  4977  03EC                     l1605:	
  4978  03EC  0821               	movf	___awmod@divisor+1,w
  4979  03ED  0223               	subwf	___awmod@dividend+1,w
  4980  03EE  1D03               	skipz
  4981  03EF  2BF2               	goto	u955
  4982  03F0  0820               	movf	___awmod@divisor,w
  4983  03F1  0222               	subwf	___awmod@dividend,w
  4984  03F2                     u955:	
  4985  03F2  1C03               	skipc
  4986  03F3  2BF8               	goto	l1609
  4987  03F4  0820               	movf	___awmod@divisor,w
  4988  03F5  02A2               	subwf	___awmod@dividend,f
  4989  03F6  0821               	movf	___awmod@divisor+1,w
  4990  03F7  3BA3               	subwfb	___awmod@dividend+1,f
  4991  03F8                     l1609:	
  4992  03F8  3001               	movlw	1
  4993  03F9                     u965:	
  4994  03F9  36A1               	lsrf	___awmod@divisor+1,f
  4995  03FA  0CA0               	rrf	___awmod@divisor,f
  4996  03FB  0B89               	decfsz	9,f
  4997  03FC  2BF9               	goto	u965
  4998  03FD  3001               	movlw	1
  4999  03FE  02A5               	subwf	___awmod@counter,f
  5000  03FF  1D03               	btfss	3,2
  5001  0400  2BEC               	goto	l1605
  5002  0401                     l1613:	
  5003  0401  0826               	movf	___awmod@sign,w
  5004  0402  1903               	btfsc	3,2
  5005  0403  2C09               	goto	l1617
  5006  0404  09A2               	comf	___awmod@dividend,f
  5007  0405  09A3               	comf	___awmod@dividend+1,f
  5008  0406  0AA2               	incf	___awmod@dividend,f
  5009  0407  1903               	skipnz
  5010  0408  0AA3               	incf	___awmod@dividend+1,f
  5011  0409                     l1617:	
  5012  0409  0823               	movf	___awmod@dividend+1,w
  5013  040A  00A1               	movwf	?___awmod+1
  5014  040B  0822               	movf	___awmod@dividend,w
  5015  040C  00A0               	movwf	?___awmod
  5016  040D  0008               	return
  5017  040E                     __end_of___awmod:	
  5018                           
  5019                           	psect	text23
  5020  0588                     __ptext23:	
  5021 ;; *************** function _InitSPI *****************
  5022 ;; Defined at:
  5023 ;;		line 109 in file "SPI_Service.c"
  5024 ;; Parameters:    Size  Location     Type
  5025 ;;		None
  5026 ;; Auto vars:     Size  Location     Type
  5027 ;;		None
  5028 ;; Return value:  Size  Location     Type
  5029 ;;                  1    wreg      void 
  5030 ;; Registers used:
  5031 ;;		wreg, status,2
  5032 ;; Tracked objects:
  5033 ;;		On entry : 0/0
  5034 ;;		On exit  : 0/0
  5035 ;;		Unchanged: 0/0
  5036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5041 ;;Total ram usage:        0 bytes
  5042 ;; Hardware stack levels used:    1
  5043 ;; Hardware stack levels required when called:    3
  5044 ;; This function calls:
  5045 ;;		Nothing
  5046 ;; This function is called by:
  5047 ;;		_InitSPI_Service
  5048 ;; This function uses a non-reentrant model
  5049 ;;
  5050                           
  5051                           
  5052                           ;psect for function _InitSPI
  5053  0588                     _InitSPI:	
  5054                           
  5055                           ;SPI_Service.c: 113: PORTC = 0x00;
  5056                           
  5057                           ;incstack = 0
  5058                           ; Regs used in _InitSPI: [wreg+status,2]
  5059  0588  0020               	movlb	0	; select bank0
  5060  0589  018E               	clrf	14	;volatile
  5061                           
  5062                           ;SPI_Service.c: 114: LATC = 0x00;
  5063  058A  0022               	movlb	2	; select bank2
  5064  058B  018E               	clrf	14	;volatile
  5065                           
  5066                           ;SPI_Service.c: 115: ANSELC = 0x00;
  5067  058C  0023               	movlb	3	; select bank3
  5068  058D  018E               	clrf	14	;volatile
  5069                           
  5070                           ;SPI_Service.c: 116: TRISC = 0x00;
  5071  058E  0021               	movlb	1	; select bank1
  5072  058F  018E               	clrf	14	;volatile
  5073                           
  5074                           ;SPI_Service.c: 118: SSPIE = 1;
  5075  0590  1591               	bsf	17,3	;volatile
  5076                           
  5077                           ;SPI_Service.c: 122: SSPCON1 = 0x00;
  5078  0591  0024               	movlb	4	; select bank4
  5079  0592  0195               	clrf	21	;volatile
  5080                           
  5081                           ;SPI_Service.c: 123: SSPCON1 = 0b00111010;
  5082  0593  303A               	movlw	58
  5083  0594  0095               	movwf	21	;volatile
  5084                           
  5085                           ;SPI_Service.c: 124: SSPSTAT = 0b01000000;
  5086  0595  3040               	movlw	64
  5087  0596  0094               	movwf	20	;volatile
  5088                           
  5089                           ;SPI_Service.c: 125: SSPADD = 0xFF;
  5090  0597  30FF               	movlw	255
  5091  0598  0092               	movwf	18	;volatile
  5092                           
  5093                           ;SPI_Service.c: 126: SSPBUF = 0xAA;
  5094  0599  30AA               	movlw	170
  5095  059A  0091               	movwf	17	;volatile
  5096  059B  0008               	return
  5097  059C                     __end_of_InitSPI:	
  5098                           
  5099                           	psect	text24
  5100  05F8                     __ptext24:	
  5101 ;; *************** function _ES_Timer_Init *****************
  5102 ;; Defined at:
  5103 ;;		line 130 in file "ES_Timers.c"
  5104 ;; Parameters:    Size  Location     Type
  5105 ;;  Rate            2    2[BANK0 ] enum E1912
  5106 ;; Auto vars:     Size  Location     Type
  5107 ;;		None
  5108 ;; Return value:  Size  Location     Type
  5109 ;;                  1    wreg      void 
  5110 ;; Registers used:
  5111 ;;		wreg, status,2, status,0, pclath, cstack
  5112 ;; Tracked objects:
  5113 ;;		On entry : 0/0
  5114 ;;		On exit  : 0/0
  5115 ;;		Unchanged: 0/0
  5116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5117 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5120 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5121 ;;Total ram usage:        2 bytes
  5122 ;; Hardware stack levels used:    1
  5123 ;; Hardware stack levels required when called:    4
  5124 ;; This function calls:
  5125 ;;		__HW_Timer_Init
  5126 ;; This function is called by:
  5127 ;;		_ES_Initialize
  5128 ;; This function uses a non-reentrant model
  5129 ;;
  5130                           
  5131                           
  5132                           ;psect for function _ES_Timer_Init
  5133  05F8                     _ES_Timer_Init:	
  5134                           
  5135                           ;ES_Timers.c: 133: _HW_Timer_Init(Rate);
  5136                           
  5137                           ;incstack = 0
  5138                           ; Regs used in _ES_Timer_Init: [wreg+status,2+status,0+pclath+cstack]
  5139  05F8  0020               	movlb	0	; select bank0
  5140  05F9  0823               	movf	ES_Timer_Init@Rate+1,w
  5141  05FA  00A1               	movwf	__HW_Timer_Init@Rate+1
  5142  05FB  0822               	movf	ES_Timer_Init@Rate,w
  5143  05FC  00A0               	movwf	__HW_Timer_Init@Rate
  5144  05FD  3185  25AE         	fcall	__HW_Timer_Init
  5145  05FF  0008               	return
  5146  0600                     __end_of_ES_Timer_Init:	
  5147                           
  5148                           	psect	text25
  5149  05AE                     __ptext25:	
  5150 ;; *************** function __HW_Timer_Init *****************
  5151 ;; Defined at:
  5152 ;;		line 76 in file "ES_Port.c"
  5153 ;; Parameters:    Size  Location     Type
  5154 ;;  Rate            2    0[BANK0 ] enum E1896
  5155 ;; Auto vars:     Size  Location     Type
  5156 ;;		None
  5157 ;; Return value:  Size  Location     Type
  5158 ;;                  1    wreg      void 
  5159 ;; Registers used:
  5160 ;;		wreg, status,2
  5161 ;; Tracked objects:
  5162 ;;		On entry : 0/0
  5163 ;;		On exit  : 0/0
  5164 ;;		Unchanged: 0/0
  5165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5166 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5169 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5170 ;;Total ram usage:        2 bytes
  5171 ;; Hardware stack levels used:    1
  5172 ;; Hardware stack levels required when called:    3
  5173 ;; This function calls:
  5174 ;;		Nothing
  5175 ;; This function is called by:
  5176 ;;		_ES_Timer_Init
  5177 ;; This function uses a non-reentrant model
  5178 ;;
  5179                           
  5180                           
  5181                           ;psect for function __HW_Timer_Init
  5182  05AE                     __HW_Timer_Init:	
  5183                           
  5184                           ;ES_Port.c: 84: PIE1 = 0b00000100;
  5185                           
  5186                           ;incstack = 0
  5187                           ; Regs used in __HW_Timer_Init: [wreg+status,2]
  5188  05AE  3004               	movlw	4
  5189  05AF  0021               	movlb	1	; select bank1
  5190  05B0  0091               	movwf	17	;volatile
  5191                           
  5192                           ;ES_Port.c: 89: INTCON = 0b01000000;
  5193  05B1  3040               	movlw	64
  5194  05B2  008B               	movwf	11	;volatile
  5195                           
  5196                           ;ES_Port.c: 95: CCP1CON = 0b00001010;
  5197  05B3  300A               	movlw	10
  5198  05B4  0025               	movlb	5	; select bank5
  5199  05B5  0093               	movwf	19	;volatile
  5200                           
  5201                           ;ES_Port.c: 99: CCPR1L = 0b00000001;
  5202  05B6  3001               	movlw	1
  5203  05B7  0091               	movwf	17	;volatile
  5204                           
  5205                           ;ES_Port.c: 103: CCPR1H = 0b00000000;
  5206  05B8  0192               	clrf	18	;volatile
  5207                           
  5208                           ;ES_Port.c: 111: T1CON = 0b00100001;
  5209  05B9  3021               	movlw	33
  5210  05BA  0020               	movlb	0	; select bank0
  5211  05BB  0098               	movwf	24	;volatile
  5212                           
  5213                           ;ES_Port.c: 113: {GIE = 1;};
  5214  05BC  178B               	bsf	11,7	;volatile
  5215  05BD  0008               	return
  5216  05BE                     __end_of__HW_Timer_Init:	
  5217                           
  5218                           	psect	text26
  5219  055B                     __ptext26:	
  5220 ;; *************** function _ES_InitQueue *****************
  5221 ;; Defined at:
  5222 ;;		line 58 in file "ES_Queue.c"
  5223 ;; Parameters:    Size  Location     Type
  5224 ;;  pBlock          1    wreg     PTR struct ES_Event_t
  5225 ;;		 -> Queue1(12), Queue0(18), 
  5226 ;;  BlockSize       1    0[BANK0 ] unsigned char 
  5227 ;; Auto vars:     Size  Location     Type
  5228 ;;  pBlock          1    2[BANK0 ] PTR struct ES_Event_t
  5229 ;;		 -> Queue1(12), Queue0(18), 
  5230 ;;  pThisQueue      1    3[BANK0 ] PTR struct .
  5231 ;;		 -> Queue1(12), Queue0(18), 
  5232 ;; Return value:  Size  Location     Type
  5233 ;;                  1    wreg      unsigned char 
  5234 ;; Registers used:
  5235 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5236 ;; Tracked objects:
  5237 ;;		On entry : 0/0
  5238 ;;		On exit  : 0/0
  5239 ;;		Unchanged: 0/0
  5240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5241 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5242 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5243 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5244 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5245 ;;Total ram usage:        4 bytes
  5246 ;; Hardware stack levels used:    1
  5247 ;; Hardware stack levels required when called:    3
  5248 ;; This function calls:
  5249 ;;		Nothing
  5250 ;; This function is called by:
  5251 ;;		_ES_Initialize
  5252 ;; This function uses a non-reentrant model
  5253 ;;
  5254                           
  5255                           
  5256                           ;psect for function _ES_InitQueue
  5257  055B                     _ES_InitQueue:	
  5258                           
  5259                           ;incstack = 0
  5260                           ; Regs used in _ES_InitQueue: [wreg+fsr1l+fsr1h+status,2+status,0]
  5261                           ;ES_InitQueue@pBlock stored from wreg
  5262  055B  0020               	movlb	0	; select bank0
  5263  055C  00A2               	movwf	ES_InitQueue@pBlock
  5264                           
  5265                           ;ES_Queue.c: 60: pQueue_t pThisQueue;
  5266                           ;ES_Queue.c: 62: pThisQueue = (pQueue_t)pBlock;
  5267  055D  0822               	movf	ES_InitQueue@pBlock,w
  5268  055E  00A1               	movwf	??_ES_InitQueue
  5269  055F  0821               	movf	??_ES_InitQueue,w
  5270  0560  00A3               	movwf	ES_InitQueue@pThisQueue
  5271                           
  5272                           ;ES_Queue.c: 64: pThisQueue->QueueSize = BlockSize - 1;
  5273  0561  0820               	movf	ES_InitQueue@BlockSize,w
  5274  0562  3EFF               	addlw	255
  5275  0563  00A1               	movwf	??_ES_InitQueue
  5276  0564  0823               	movf	ES_InitQueue@pThisQueue,w
  5277  0565  0086               	movwf	6
  5278  0566  0187               	clrf	7
  5279  0567  0821               	movf	??_ES_InitQueue,w
  5280  0568  0081               	movwf	1
  5281                           
  5282                           ;ES_Queue.c: 65: pThisQueue->CurrentIndex = 0;
  5283  0569  0A23               	incf	ES_InitQueue@pThisQueue,w
  5284  056A  0086               	movwf	6
  5285  056B  0187               	clrf	7
  5286  056C  0181               	clrf	1
  5287                           
  5288                           ;ES_Queue.c: 66: pThisQueue->NumEntries = 0;
  5289  056D  0823               	movf	ES_InitQueue@pThisQueue,w
  5290  056E  3E02               	addlw	2
  5291  056F  0086               	movwf	6
  5292  0570  0187               	clrf	7
  5293  0571  0181               	clrf	1
  5294  0572  0008               	return
  5295  0573                     __end_of_ES_InitQueue:	
  5296                           ;ES_Queue.c: 67: return(pThisQueue->QueueSize);
  5297                           ;	Return value of _ES_InitQueue is never used
  5298                           
  5299                           
  5300                           	psect	intentry
  5301  0004                     __pintentry:	
  5302 ;; *************** function _ISR *****************
  5303 ;; Defined at:
  5304 ;;		line 116 in file "ES_Port.c"
  5305 ;; Parameters:    Size  Location     Type
  5306 ;;		None
  5307 ;; Auto vars:     Size  Location     Type
  5308 ;;		None
  5309 ;; Return value:  Size  Location     Type
  5310 ;;                  1    wreg      void 
  5311 ;; Registers used:
  5312 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5313 ;; Tracked objects:
  5314 ;;		On entry : 0/0
  5315 ;;		On exit  : 0/0
  5316 ;;		Unchanged: 0/0
  5317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5320 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5321 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5322 ;;Total ram usage:        2 bytes
  5323 ;; Hardware stack levels used:    1
  5324 ;; Hardware stack levels required when called:    2
  5325 ;; This function calls:
  5326 ;;		_EOTResponse
  5327 ;; This function is called by:
  5328 ;;		Interrupt level 1
  5329 ;; This function uses a non-reentrant model
  5330 ;;
  5331                           
  5332  0004                     _ISR:	
  5333                           
  5334                           ;incstack = 0
  5335  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  5336                           
  5337                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5338  0005  3180               	pagesel	$
  5339  0006  0020               	movlb	0	; select bank0
  5340  0007  087F               	movf	127,w
  5341  0008  00F8               	movwf	??_ISR+1
  5342                           
  5343                           ;ES_Port.c: 119: static unsigned int LastTime;
  5344                           ;ES_Port.c: 120: static unsigned int NextTime;
  5345                           ;ES_Port.c: 122: if (CCP1IF == 1)
  5346  0009  1D11               	btfss	17,2	;volatile
  5347  000A  282A               	goto	i1l2067
  5348                           
  5349                           ;ES_Port.c: 123: {
  5350                           ;ES_Port.c: 124: LastTime = ((unsigned int)CCPR1H << 8)+ CCPR1L;
  5351  000B  0025               	movlb	5	; select bank5
  5352  000C  0812               	movf	18,w	;volatile
  5353  000D  0020               	movlb	0	; select bank0
  5354  000E  00D4               	movwf	ISR@LastTime+1
  5355  000F  0025               	movlb	5	; select bank5
  5356  0010  0811               	movf	17,w	;volatile
  5357  0011  0020               	movlb	0	; select bank0
  5358  0012  00D3               	movwf	ISR@LastTime
  5359                           
  5360                           ;ES_Port.c: 125: NextTime = LastTime + ((32000000L/4/4)/100);
  5361  0013  0853               	movf	ISR@LastTime,w
  5362  0014  3E20               	addlw	32
  5363  0015  00D5               	movwf	ISR@NextTime
  5364  0016  304E               	movlw	78
  5365  0017  3D54               	addwfc	ISR@LastTime+1,w
  5366  0018  00D6               	movwf	ISR@NextTime+1
  5367                           
  5368                           ;ES_Port.c: 126: CCPR1H = (unsigned char)(NextTime >> 8);
  5369  0019  0856               	movf	ISR@NextTime+1,w
  5370  001A  0025               	movlb	5	; select bank5
  5371  001B  0092               	movwf	18	;volatile
  5372                           
  5373                           ;ES_Port.c: 127: CCPR1L = (unsigned char)(NextTime & 0xFF);
  5374  001C  0020               	movlb	0	; select bank0
  5375  001D  0855               	movf	ISR@NextTime,w
  5376  001E  0025               	movlb	5	; select bank5
  5377  001F  0091               	movwf	17	;volatile
  5378                           
  5379                           ;ES_Port.c: 128: CCP1IF = 0;
  5380  0020  0020               	movlb	0	; select bank0
  5381  0021  1111               	bcf	17,2	;volatile
  5382                           
  5383                           ;ES_Port.c: 129: TickCount++;
  5384  0022  3001               	movlw	1
  5385  0023  00F7               	movwf	??_ISR
  5386  0024  0877               	movf	??_ISR,w
  5387  0025  07E2               	addwf	_TickCount,f	;volatile
  5388                           
  5389                           ;ES_Port.c: 130: SysTickCounter++;
  5390  0026  3001               	movlw	1
  5391  0027  07D9               	addwf	_SysTickCounter,f	;volatile
  5392  0028  3000               	movlw	0
  5393  0029  3DDA               	addwfc	_SysTickCounter+1,f	;volatile
  5394  002A                     i1l2067:	
  5395                           
  5396                           ;ES_Port.c: 131: }
  5397                           ;ES_Port.c: 132: if (BF == 1 && SSPIF == 1)
  5398  002A  0024               	movlb	4	; select bank4
  5399  002B  1C14               	btfss	20,0	;volatile
  5400  002C  2833               	goto	i1l155
  5401  002D  0020               	movlb	0	; select bank0
  5402  002E  1D91               	btfss	17,3	;volatile
  5403  002F  2833               	goto	i1l155
  5404                           
  5405                           ;ES_Port.c: 133: {
  5406                           ;ES_Port.c: 134: SSPIF = 0;
  5407  0030  1191               	bcf	17,3	;volatile
  5408                           
  5409                           ;ES_Port.c: 135: EOTResponse();
  5410  0031  3185  25BE         	fcall	_EOTResponse
  5411  0033                     i1l155:	
  5412  0033  0878               	movf	??_ISR+1,w
  5413  0034  0020               	movlb	0	; select bank0
  5414  0035  00FF               	movwf	127
  5415  0036  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  5416  0037  0009               	retfie
  5417  0038                     __end_of_ISR:	
  5418                           
  5419                           	psect	text28
  5420  05BE                     __ptext28:	
  5421 ;; *************** function _EOTResponse *****************
  5422 ;; Defined at:
  5423 ;;		line 97 in file "SPI_Service.c"
  5424 ;; Parameters:    Size  Location     Type
  5425 ;;		None
  5426 ;; Auto vars:     Size  Location     Type
  5427 ;;		None
  5428 ;; Return value:  Size  Location     Type
  5429 ;;                  1    wreg      void 
  5430 ;; Registers used:
  5431 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5432 ;; Tracked objects:
  5433 ;;		On entry : 0/0
  5434 ;;		On exit  : 0/0
  5435 ;;		Unchanged: 0/0
  5436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5441 ;;Total ram usage:        0 bytes
  5442 ;; Hardware stack levels used:    1
  5443 ;; Hardware stack levels required when called:    1
  5444 ;; This function calls:
  5445 ;;		i1_ES_Timer_InitTimer
  5446 ;; This function is called by:
  5447 ;;		_ISR
  5448 ;; This function uses a non-reentrant model
  5449 ;;
  5450                           
  5451                           
  5452                           ;psect for function _EOTResponse
  5453  05BE                     _EOTResponse:	
  5454                           
  5455                           ;SPI_Service.c: 98: if (RA0 == 1)
  5456                           
  5457                           ;incstack = 0
  5458                           ; Regs used in _EOTResponse: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5459  05BE  0020               	movlb	0	; select bank0
  5460  05BF  1C0C               	btfss	12,0	;volatile
  5461  05C0  2DC3               	goto	i1l427
  5462                           
  5463                           ;SPI_Service.c: 99: {
  5464                           ;SPI_Service.c: 100: RA0 = 0;
  5465  05C1  100C               	bcf	12,0	;volatile
  5466                           
  5467                           ;SPI_Service.c: 101: } else {
  5468  05C2  2DC4               	goto	i1l1963
  5469  05C3                     i1l427:	
  5470                           
  5471                           ;SPI_Service.c: 102: RA0 = 1;
  5472  05C3  140C               	bsf	12,0	;volatile
  5473  05C4                     i1l1963:	
  5474                           
  5475                           ;SPI_Service.c: 103: }
  5476                           ;SPI_Service.c: 104: ES_Timer_InitTimer(1, 100);
  5477  05C4  3064               	movlw	100
  5478  05C5  00F0               	movwf	i1ES_Timer_InitTimer@NewTime
  5479  05C6  3000               	movlw	0
  5480  05C7  00F1               	movwf	i1ES_Timer_InitTimer@NewTime+1
  5481  05C8  3001               	movlw	1
  5482  05C9  3184  2445         	fcall	i1_ES_Timer_InitTimer
  5483  05CB  0008               	return
  5484  05CC                     __end_of_EOTResponse:	
  5485                           
  5486                           	psect	text29
  5487  0445                     __ptext29:	
  5488 ;; *************** function i1_ES_Timer_InitTimer *****************
  5489 ;; Defined at:
  5490 ;;		line 229 in file "ES_Timers.c"
  5491 ;; Parameters:    Size  Location     Type
  5492 ;;  Num             1    wreg     unsigned char 
  5493 ;;  NewTime         2    0[COMMON] unsigned int 
  5494 ;; Auto vars:     Size  Location     Type
  5495 ;;  Num             1    6[COMMON] unsigned char 
  5496 ;; Return value:  Size  Location     Type
  5497 ;;                  1    wreg      enum E1961
  5498 ;; Registers used:
  5499 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  5500 ;; Tracked objects:
  5501 ;;		On entry : 0/0
  5502 ;;		On exit  : 0/0
  5503 ;;		Unchanged: 0/0
  5504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5505 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5506 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5507 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5508 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5509 ;;Total ram usage:        7 bytes
  5510 ;; Hardware stack levels used:    1
  5511 ;; This function calls:
  5512 ;;		Nothing
  5513 ;; This function is called by:
  5514 ;;		_EOTResponse
  5515 ;; This function uses a non-reentrant model
  5516 ;;
  5517                           
  5518                           
  5519                           ;psect for function i1_ES_Timer_InitTimer
  5520  0445                     i1_ES_Timer_InitTimer:	
  5521                           
  5522                           ;incstack = 0
  5523                           ; Regs used in i1_ES_Timer_InitTimer: [wreg-fsr1h+status,2+status,0+pclath]
  5524                           ;i1ES_Timer_InitTimer@Num stored from wreg
  5525  0445  00F6               	movwf	i1ES_Timer_InitTimer@Num
  5526                           
  5527                           ;ES_Timers.c: 232: if( (Num >= (sizeof(TMR_TimerArray)/sizeof(TMR_TimerArray[0]))) ||
  5528                           ;ES_Timers.c: 234: (Timer2PostFunc[Num] == ((pPostFunc)0)) ||
  5529                           ;ES_Timers.c: 236: (NewTime == 0) )
  5530  0446  3010               	movlw	16
  5531  0447  0276               	subwf	i1ES_Timer_InitTimer@Num,w
  5532  0448  1803               	skipnc
  5533  0449  0008               	return
  5534  044A  0876               	movf	i1ES_Timer_InitTimer@Num,w
  5535  044B  00F2               	movwf	??i1_ES_Timer_InitTimer
  5536  044C  01F3               	clrf	??i1_ES_Timer_InitTimer+1
  5537  044D  35F2               	lslf	??i1_ES_Timer_InitTimer,f
  5538  044E  0DF3               	rlf	??i1_ES_Timer_InitTimer+1,f
  5539  044F  3072               	movlw	low (_Timer2PostFunc| (0+32768))
  5540  0450  0772               	addwf	??i1_ES_Timer_InitTimer,w
  5541  0451  0084               	movwf	4
  5542  0452  3080               	movlw	high (_Timer2PostFunc| (0+32768))
  5543  0453  3D73               	addwfc	??i1_ES_Timer_InitTimer+1,w
  5544  0454  0085               	movwf	5
  5545  0455  0012               	moviw fsr0++
  5546  0456  00F4               	movwf	??i1_ES_Timer_InitTimer+2
  5547  0457  0012               	moviw fsr0++
  5548  0458  04F4               	iorwf	??i1_ES_Timer_InitTimer+2,f
  5549  0459  1903               	btfsc	3,2
  5550  045A  0008               	return
  5551  045B  0870               	movf	i1ES_Timer_InitTimer@NewTime,w
  5552  045C  0471               	iorwf	i1ES_Timer_InitTimer@NewTime+1,w
  5553  045D  1903               	btfsc	3,2
  5554  045E  0008               	return
  5555                           
  5556                           ;ES_Timers.c: 238: TMR_TimerArray[Num] = NewTime;
  5557                           
  5558                           ;ES_Timers.c: 237: return ES_Timer_ERR;
  5559                           ;	Return value of i1_ES_Timer_InitTimer is never used
  5560  045F  3576               	lslf	i1ES_Timer_InitTimer@Num,w
  5561  0460  3EA0               	addlw	(low (_TMR_TimerArray| 0))& (0+255)
  5562  0461  0086               	movwf	6
  5563  0462  0187               	clrf	7
  5564  0463  0870               	movf	i1ES_Timer_InitTimer@NewTime,w
  5565  0464  3FC0               	movwi [0]fsr1
  5566  0465  0871               	movf	i1ES_Timer_InitTimer@NewTime+1,w
  5567  0466  3FC1               	movwi [1]fsr1
  5568                           
  5569                           ;ES_Timers.c: 239: TMR_ActiveFlags |= BitNum2SetMask[Num];
  5570  0467  0876               	movf	i1ES_Timer_InitTimer@Num,w
  5571  0468  00F2               	movwf	??i1_ES_Timer_InitTimer
  5572  0469  01F3               	clrf	??i1_ES_Timer_InitTimer+1
  5573  046A  35F2               	lslf	??i1_ES_Timer_InitTimer,f
  5574  046B  0DF3               	rlf	??i1_ES_Timer_InitTimer+1,f
  5575  046C  3052               	movlw	low (_BitNum2SetMask| (0+32768))
  5576  046D  0772               	addwf	??i1_ES_Timer_InitTimer,w
  5577  046E  0084               	movwf	4
  5578  046F  3080               	movlw	high (_BitNum2SetMask| (0+32768))
  5579  0470  3D73               	addwfc	??i1_ES_Timer_InitTimer+1,w
  5580  0471  0085               	movwf	5
  5581  0472  3F00               	moviw [0]fsr0
  5582  0473  00F4               	movwf	??i1_ES_Timer_InitTimer+2
  5583  0474  3F01               	moviw [1]fsr0
  5584  0475  00F5               	movwf	??i1_ES_Timer_InitTimer+3
  5585  0476  0874               	movf	??i1_ES_Timer_InitTimer+2,w
  5586  0477  0020               	movlb	0	; select bank0
  5587  0478  04DB               	iorwf	_TMR_ActiveFlags,f
  5588  0479  0875               	movf	??i1_ES_Timer_InitTimer+3,w
  5589  047A  04DC               	iorwf	_TMR_ActiveFlags+1,f
  5590  047B  0008               	return
  5591  047C                     __end_ofi1_ES_Timer_InitTimer:	
  5592                           ;ES_Timers.c: 240: return ES_Timer_OK;
  5593                           ;	Return value of i1_ES_Timer_InitTimer is never used
  5594                           
  5595  007E                     btemp	set	126	;btemp
  5596  007E                     int$flags	set	126
  5597  007E                     wtemp	set	126
  5598  007E                     wtemp0	set	126
  5599  0080                     wtemp1	set	128
  5600  0082                     wtemp2	set	130
  5601  0084                     wtemp3	set	132
  5602  0086                     wtemp4	set	134
  5603  0088                     wtemp5	set	136
  5604  007F                     wtemp6	set	127
  5605  007E                     ttemp	set	126
  5606  007E                     ttemp0	set	126
  5607  0081                     ttemp1	set	129
  5608  0084                     ttemp2	set	132
  5609  0087                     ttemp3	set	135
  5610  007F                     ttemp4	set	127
  5611  007E                     ltemp	set	126
  5612  007E                     ltemp0	set	126
  5613  0082                     ltemp1	set	130
  5614  0086                     ltemp2	set	134
  5615  0080                     ltemp3	set	128


Data Sizes:
    Strings     89
    Constant    95
    Data        0
    BSS         91
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     46      70
    BANK1            80      0      62
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    ES_Timer_Tick_Resp$1226	const PTR FTN(struct ES_Event_t,)unsigned char  size(2) Largest target is 1
		 -> PostSPI_Service(), PostToggleService(), Absolute function(), 

    ES_PostToService$1217	const PTR struct ES_Event_t size(1) Largest target is 18
		 -> Queue1(BANK1[12]), Queue0(BANK1[18]), 

    ES_Run$1211	const PTR struct ES_Event_t size(1) Largest target is 18
		 -> Queue1(BANK1[12]), Queue0(BANK1[18]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_4(CODE[15]), STR_3(CODE[23]), STR_2(CODE[24]), STR_1(CODE[27]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    Timer2PostFunc	const PTR FTN(struct ES_Event_t,)unsigned char [16] size(2) Largest target is 1
		 -> PostSPI_Service(), PostToggleService(), Absolute function(), 

    ES_DeQueue@pReturnEvent	PTR struct ES_Event_t size(1) Largest target is 3
		 -> ES_Run@ThisEvent(BANK0[3]), ES_RecallEvents@RecalledEvent(COMMON[3]), 

    ES_DeQueue@pBlock	PTR struct ES_Event_t size(1) Largest target is 18
		 -> Queue1(BANK1[12]), Queue0(BANK1[18]), 

    ES_DeQueue@pThisQueue	PTR struct . size(1) Largest target is 18
		 -> Queue1(BANK1[12]), Queue0(BANK1[18]), 

    ES_EnQueueFIFO@pBlock	PTR struct ES_Event_t size(1) Largest target is 18
		 -> Queue1(BANK1[12]), Queue0(BANK1[18]), 

    ES_EnQueueFIFO@pThisQueue	PTR struct . size(1) Largest target is 18
		 -> Queue1(BANK1[12]), Queue0(BANK1[18]), 

    ES_InitQueue@pBlock	PTR struct ES_Event_t size(1) Largest target is 18
		 -> Queue1(BANK1[12]), Queue0(BANK1[18]), 

    ES_InitQueue@pThisQueue	PTR struct . size(1) Largest target is 18
		 -> Queue1(BANK1[12]), Queue0(BANK1[18]), 

    DistList00	const PTR FTN(struct ES_Event_t,)unsigned char [1] size(2) Largest target is 1
		 -> PostToggleService(), 

    S117$pMem	PTR struct ES_Event_t size(1) Largest target is 18
		 -> Queue1(BANK1[12]), Queue0(BANK1[18]), 

    EventQueues.pMem	PTR struct ES_Event_t size(1) Largest target is 18
		 -> Queue1(BANK1[12]), Queue0(BANK1[18]), 

    S86$RunFunc	PTR FTN(struct ES_Event_t,)struct ES_Event_t size(2) Largest target is 3
		 -> RunSPI_Service(), RunToggleService(), 

    ServDescList.RunFunc	PTR FTN(struct ES_Event_t,)struct ES_Event_t size(2) Largest target is 3
		 -> RunSPI_Service(), RunToggleService(), 

    S86$InitFunc	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> InitSPI_Service(), InitToggleService(), 

    ServDescList.InitFunc	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> InitSPI_Service(), InitToggleService(), 

    ES_EventList	const PTR FTN()unsigned char [1] size(2) Largest target is 1
		 -> Check4Keystroke(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _EOTResponse->i1_ES_Timer_InitTimer

Critical Paths under _main in BANK0

    _main->_ES_Initialize
    __HW_Process_Pending_Ints->_ES_Timer_Tick_Resp
    _ES_Timer_Tick_Resp->_PostSPI_Service
    _ES_Timer_Tick_Resp->_PostToggleService
    _PostToggleService->_ES_PostToService
    _PostSPI_Service->_ES_PostToService
    _RunToggleService->_ES_Timer_InitTimer
    _ES_DeQueue->___bmul
    _ES_Initialize->_InitToggleService
    _InitToggleService->_ES_PostToService
    _ES_PostToService->_ES_EnQueueFIFO
    _ES_EnQueueFIFO->___bmul
    ___bmul->___awmod
    _ES_Timer_Init->__HW_Timer_Init

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _ISR in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    9332
                                             44 BANK0      2     2      0
                      _ES_Initialize
                             _ES_Run
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              19    17      2     350
                                              0 BANK0      7     5      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _ES_Run                                               5     5      0    6047
                                             36 BANK0      5     5      0
                 _ES_CheckUserEvents
                         _ES_DeQueue
                     _ES_GetMSBitSet
                     _RunSPI_Service *
                   _RunToggleService *
           __HW_Process_Pending_Ints
 ---------------------------------------------------------------------------------
 (2) __HW_Process_Pending_Ints                             0     0      0    3974
                 _ES_Timer_Tick_Resp
 ---------------------------------------------------------------------------------
 (3) _ES_Timer_Tick_Resp                                   4     4      0    3974
                                             32 BANK0      4     4      0
                   Absolute function *
                     _ES_GetMSBitSet
                    _PostSPI_Service *
                  _PostToggleService *
 ---------------------------------------------------------------------------------
 (4) _PostToggleService                                    3     0      3    1807
                                             29 BANK0      3     0      3
                   _ES_PostToService
 ---------------------------------------------------------------------------------
 (4) _PostSPI_Service                                      3     0      3    1834
                                             29 BANK0      3     0      3
                   _ES_PostToService
 ---------------------------------------------------------------------------------
 (4) _ES_GetMSBitSet                                       9     7      2     333
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (4) Absolute function(Fake)                               3     0      3       0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _RunToggleService                                     6     3      3     402
                                              7 BANK0      6     3      3
                 _ES_Timer_InitTimer
 ---------------------------------------------------------------------------------
 (2) _RunSPI_Service                                       6     3      3     121
                                              7 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (2) _ES_DeQueue                                          10     9      1    1060
                                             11 BANK0     10     9      1
                             ___bmul
                            ___lbmod
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              6     5      1     235
                                              0 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (2) _ES_CheckUserEvents                                   3     3      0      90
                                              0 BANK0      3     3      0
                    _Check4Keystroke *
 ---------------------------------------------------------------------------------
 (3) _Check4Keystroke                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ES_Initialize                                       10     8      2    2889
                                             34 BANK0     10     8      2
                       _ES_InitQueue
                      _ES_Timer_Init
                    _InitSPI_Service *
                  _InitToggleService *
 ---------------------------------------------------------------------------------
 (2) _InitToggleService                                    5     4      1    2138
                                             29 BANK0      5     4      1
                   _ES_PostToService
                 _ES_Timer_InitTimer
 ---------------------------------------------------------------------------------
 (3) _ES_Timer_InitTimer                                   7     5      2     334
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (5) _ES_PostToService                                     8     5      3    1759
                                             21 BANK0      8     5      3
                     _ES_EnQueueFIFO
 ---------------------------------------------------------------------------------
 (6) _ES_EnQueueFIFO                                      10     7      3    1139
                                             11 BANK0     10     7      3
                            ___awmod
                             ___bmul
 ---------------------------------------------------------------------------------
 (7) ___bmul                                               4     3      1     251
                                              7 BANK0      4     3      1
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              7     3      4     448
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _InitSPI_Service                                      2     1      1      75
                                             29 BANK0      2     1      1
                            _InitSPI
 ---------------------------------------------------------------------------------
 (3) _InitSPI                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ES_Timer_Init                                        2     0      2     174
                                              2 BANK0      2     0      2
                     __HW_Timer_Init
 ---------------------------------------------------------------------------------
 (3) __HW_Timer_Init                                       2     0      2      76
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ES_InitQueue                                         4     3      1     226
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR                                                  2     2      0     158
                                              7 COMMON     2     2      0
                        _EOTResponse
 ---------------------------------------------------------------------------------
 (9) _EOTResponse                                          0     0      0     158
               i1_ES_Timer_InitTimer
 ---------------------------------------------------------------------------------
 (10) i1_ES_Timer_InitTimer                                7     5      2     158
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ES_Initialize
     _ES_InitQueue
     _ES_Timer_Init
       __HW_Timer_Init
     _InitSPI_Service *
       _InitSPI
     _InitToggleService *
       _ES_PostToService
         _ES_EnQueueFIFO
           ___awmod
           ___bmul
             ___awmod (ARG)
       _ES_Timer_InitTimer
   _ES_Run
     _ES_CheckUserEvents
       _Check4Keystroke *
     _ES_DeQueue
       ___bmul
         ___awmod (ARG)
       ___lbmod
     _ES_GetMSBitSet
     _RunSPI_Service *
     _RunToggleService *
       _ES_Timer_InitTimer
     __HW_Process_Pending_Ints *
       _ES_Timer_Tick_Resp
         Absolute function(Fake) *
         _ES_GetMSBitSet *
         _PostSPI_Service *
           _ES_PostToService
             _ES_EnQueueFIFO
               ___awmod
               ___bmul
                 ___awmod (ARG)
         _PostToggleService *
           _ES_PostToService
             _ES_EnQueueFIFO
               ___awmod
               ___bmul
                 ___awmod (ARG)
   _printf
     _putch

 _ISR (ROOT)
   _EOTResponse
     i1_ES_Timer_InitTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2E      46       5       87.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      3E       7       77.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      92      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      92      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Thu Oct 20 02:07:20 2016

                   ??__HW_Timer_Init 0022                  ES_CheckUserEvents@i 0022  
                     ___bmul@product 0029                                   _BF 10A0  
                __HW_Timer_Init@Rate 0020             PostSPI_Service@ThisEvent 003D  
                                l349 0381                                  l382 04EE  
                                l795 051A                __end_of_ES_Initialize 0191  
                                _GIE 005F                                  _RA0 0060  
                                _RA1 0061                                  _ISR 0004  
                                u935 03E3                                  u955 03F2  
                                u965 03F9                       _PacketReceived 007D  
                       ___awmod@sign 0026              __end_of_Check4Keystroke 0608  
                                wreg 0009               ES_EnQueueFIFO@SaveCrit 0032  
            ES_EnQueueFIFO@Event2Add 002B                    ?_ES_PostToService 0035  
                               ?_ISR 0070           ES_Timer_Tick_Resp@NewEvent 004E  
                               l1603 03E0                                 l2171 0363  
                               l1605 03EC                                 l1613 0401  
                               l2173 036C                                 l2167 0352  
                               l1617 0409                                 l1609 03F8  
                               l1641 0334                                 l2169 035A  
                               l2177 0375                                 l1571 059F  
                               l1709 01EA                                 l1821 05CC  
                               l1591 03D3                                 l1575 05A5  
                               l1671 03C0                                 l1823 05D7  
                               l1657 04B0                                 l1745 0507  
                               l1595 03DA                                 l1923 0146  
                               l1915 0118                                 l1675 03C6  
                               l1667 038D                                 l1853 04DE  
                               l1933 018F                                 l1919 0144  
                               l1791 025D                                 l1871 04F8  
                               l1943 02B0                                 l1929 0186  
                               l1953 02E0                                 l1937 0278  
                               l1795 026A                                 l1699 019A  
                               l1869 04F1                                 l1949 02D5  
                               l1973 0543                                 l1799 0275  
                               l1889 057F                                 STR_1 00B1  
                               STR_2 00CC                                 STR_3 00E4  
                               STR_4 00FB                                 u1035 0394  
                               u1044 039D                                 u1045 039B  
                               u1145 050A                                 u1065 03AA  
                               _LATA 010C                                 _LATC 010E  
                               _PIE1 0091                   ??_ES_PostToService 0038  
                               _main 0336                          ?_ES_DeQueue 002B  
                               fsr0h 0005                                 fsr1h 0007  
                               fsr0l 0004                                 indf0 0000  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                        main@ErrorType 004D  
                      __CFG_BOREN$ON 0000                                 ltemp 007E  
                               start 0038                                 ttemp 007E  
                               wtemp 007E                    ___bmul@multiplier 002A  
                      __CFG_MCLRE$ON 0000                      __end_of_InitSPI 059C  
                              ??_ISR 0077              __end_of_InitSPI_Service 05F8  
                       ?_EOTResponse 0070              __size_of_RunSPI_Service 0015  
                 ES_Run@HighestPrior 0048                                ?_main 0070  
              __end_of_ES_Timer_Init 0600                        __CFG_WDTE$OFF 0000  
                    __end_of___awmod 040E                      __end_of___lbmod 0520  
           __end_of_RunToggleService 0500                                _T1CON 0018  
                         _DistList00 00AF                                _IRCF0 04CB  
                              _IRCF1 04CC                                _IRCF2 04CD  
                              _IRCF3 04CE                                i1l155 0033  
                              i1l427 05C3                                _PORTA 000C  
                              _PORTC 000E                                _TRISA 008C  
                              _TRISC 008E                                _SSPIE 048B  
                              _SSPIF 008B        __size_ofi1_ES_Timer_InitTimer 0037  
                              _Ready 0057                                _putch 0608  
                              pclath 000A                                ltemp0 007E  
                              ltemp1 0082                                ltemp2 0086  
                              ltemp3 0080                                ttemp0 007E  
                              ttemp1 0081                                ttemp2 0084  
                              ttemp3 0087                                ttemp4 007F  
                              status 0003                                wtemp0 007E  
                              wtemp1 0080                                wtemp2 0082  
                              wtemp3 0084                                wtemp4 0086  
                              wtemp5 0088                                wtemp6 007F  
                    __initialization 003A               ES_GetMSBitSet@LoopCntr 0028  
         __end_of_ES_CheckUserEvents 053E                         __end_of_main 0382  
                  ES_Timer_Init@Rate 0022                  __end_of_EventQueues 00AD  
                             ??_main 004C                  __size_of_ES_DeQueue 0073  
                    _Nybble2MSBitNum 0092     __end_of__HW_Process_Pending_Ints 05D9  
                   ?_Check4Keystroke 0070                               _CCP1IF 008A  
                             _CCPR1H 0292                               _CCPR1L 0291  
                         _MyPriority 007C                               _ANSELA 018C  
                             ?_putch 0070                               _ANSELC 018E  
                   ??_ES_GetMSBitSet 0022                               i1l2067 002A  
                             i1l1963 05C4                               _INTCON 000B  
                             _ES_Run 0277                               _SSPADD 0212  
                             _SSPBUF 0211                            ??_InitSPI 0020  
                   ??_ES_EnQueueFIFO 002E                       _Timer2PostFunc 0072  
                     __CFG_PWRTE$OFF 0000                               _Queue0 00C0  
                             _Queue1 00D2                       _SysTickCounter 0059  
                             ___bmul 059C                            ??___awmod 0024  
                          ??___lbmod 0021                     ?_InitSPI_Service 003D  
        __size_of_ES_Timer_InitTimer 0037                      ___awmod@divisor 0020  
          ES_Timer_InitTimer@NewTime 0020                      ___awmod@counter 0025  
                             _printf 053E                          ISR@LastTime 0053  
             ES_InitQueue@pThisQueue 0023                          ISR@NextTime 0055  
                             putch@c 0070          __size_of_ES_Timer_Tick_Resp 0073  
               ES_DeQueue@pThisQueue 0034              ES_GetMSBitSet@Val2Check 0020  
                    ___lbmod@divisor 0020              __end_of__initialization 004E  
             __end_of_Timer2PostFunc 0092                      ___lbmod@counter 0024  
                ___bmul@multiplicand 0027                          _EventQueues 00A9  
                     __pcstackCOMMON 0070             __size_of_PostSPI_Service 000B  
            i1ES_Timer_InitTimer@Num 0076                       _RunSPI_Service 0573  
                      ?_ES_InitQueue 0020              __end_of_Nybble2MSBitNum 00A1  
                      __end_of_putch 0609                      _TMR_ActiveFlags 005B  
               __size_of_EOTResponse 000E              ES_GetMSBitSet@ReturnVal 0026  
          RunSPI_Service@ReturnEvent 002A                       _TMR_TimerArray 00A0  
           ES_EnQueueFIFO@pThisQueue 0034              InitSPI_Service@Priority 003D  
                            ??_putch 0020             __HW_Process_Pending_Ints 05CC  
                         __pbssBANK0 004E                           __pbssBANK1 00A0  
        i1ES_Timer_InitTimer@NewTime 0070                              ?_ES_Run 0070  
                       ??_ES_DeQueue 002C               __end_of_RunSPI_Service 0588  
                         __pmaintext 0336            __size_of_ES_PostToService 0036  
                            ?___bmul 0027                       ??_ES_InitQueue 0021  
                         __pintentry 0004                              _CCP1CON 0293  
                            ?_printf 0020                    ?_RunToggleService 0027  
                 __end_of_ES_DeQueue 0277                   ??_RunToggleService 002A  
                            _SSPCON1 0215                              _SSPSTAT 0214  
                    __size_of_ES_Run 006D                              _InitSPI 0588  
       __end_ofi1_ES_Timer_InitTimer 047C              ToggleService@MyPriority 0061  
             __size_of_ES_Initialize 0087                      ?_RunSPI_Service 0027  
                    __size_of___bmul 0012                              ___awmod 03C8  
                            ___lbmod 0500                ES_Timer_InitTimer@Num 0026  
                            __ptext1 053E                              __ptext2 0608  
                            __ptext3 0277                              __ptext4 05CC  
                            __ptext5 0191                              __ptext6 05D9  
                            __ptext7 05E4                              __ptext8 0382  
                            __ptext9 0573                      __size_of_printf 001D  
                  ??_PostSPI_Service 0040                    _PostToggleService 05E4  
                       __size_of_ISR 0034              __size_of__HW_Timer_Init 0010  
                   ___awmod@dividend 0022                   _ES_CheckUserEvents 0520  
                 ?_PostToggleService 003D                      ES_Run@ThisEvent 0063  
          InitToggleService@Priority 003D                     _AccelerometerIOC 007A  
                            clrloop0 0601                 end_of_initialization 004E  
                ?_ES_CheckUserEvents 0070                  ??_PostToggleService 0040  
              SPI_Service@MyPriority 0060         ES_PostToService@WhichService 003C  
             __size_of_ES_Timer_Init 0008                              printf@c 0026  
                            printf@f 0020                         __pstringtext 0052  
               ??_ES_CheckUserEvents 0020            __end_of_PostToggleService 05EF  
                      _ES_Initialize 010A                     __CFG_FOSC$INTOSC 0000  
                   ___lbmod@dividend 0023                 __end_of_ES_EventList 00AF  
               __end_of_ES_InitQueue 0573                       ES_Initialize@i 004B  
                        ___lbmod@rem 0025             __size_of_Check4Keystroke 0002  
         PostToggleService@ThisEvent 003D            RunToggleService@ThisEvent 0027  
                     __end_of_ES_Run 02E4                   __end_of_DistList00 00B1  
                   _ES_PostToService 047C           __end_of_ES_Timer_InitTimer 0445  
               __end_of_ServDescList 00A9                       __end_of___bmul 05AE  
                     ?_ES_Initialize 0042           ??__HW_Process_Pending_Ints 0044  
                      _ES_Timer_Init 05F8                       __end_of_printf 055B  
         __end_of_ES_Timer_Tick_Resp 0204             __size_of_InitSPI_Service 0009  
               i1_ES_Timer_InitTimer 0445                  start_initialization 003A  
                        __end_of_ISR 0038                         _CurrentState 007B  
                           ??_ES_Run 0044                    _InitToggleService 04B2  
                          _TickCount 0062                   ?_InitToggleService 003D  
            __size_of_ES_GetMSBitSet 0046                             ??___bmul 0028  
          TemplateService@MyPriority 0079                        ??_EOTResponse 0077  
                ??_InitToggleService 003E           __size_of_PostToggleService 000B  
            __size_of_ES_EnQueueFIFO 0052                             ??_printf 0022  
                     ?_ES_Timer_Init 0022                       __HW_Timer_Init 05AE  
              ?i1_ES_Timer_InitTimer 0070                          __pbssCOMMON 0079  
                          ___latbits 0003                        __pcstackBANK0 0020  
                 ES_InitQueue@pBlock 0022            __end_of_InitToggleService 04E0  
                   ??_RunSPI_Service 002A            __size_of_RunToggleService 0020  
                      __PRIMASK_temp 005D                             ?_InitSPI 0070  
                    _PostSPI_Service 05D9                    ??_Check4Keystroke 0020  
                           ?___awmod 0020                             ?___lbmod 0020  
                    ??_ES_Initialize 0044             ES_PostToService@TheEvent 0035  
             __end_of__HW_Timer_Init 05BE                  __end_of_EOTResponse 05CC  
              __size_of_ES_InitQueue 0018          RunToggleService@ReturnEvent 002A  
                     __size_of_putch 0001                 ES_Initialize@NewRate 0042  
                  ??_InitSPI_Service 003E            ES_GetMSBitSet@Nybble2Test 0027  
                          clear_ram0 0600                         _ES_EventList 00AD  
                       _ES_InitQueue 055B                      ??_ES_Timer_Init 0024  
                    ?__HW_Timer_Init 0020               ??i1_ES_Timer_InitTimer 0072  
                 ES_DeQueue@SaveCrit 0031                 ES_EnQueueFIFO@pBlock 0033  
           __end_of_ES_PostToService 04B2                       _BitNum2SetMask 0052  
                       _ServDescList 00A1           __size_of_InitToggleService 002E  
            __end_of_PostSPI_Service 05E4                     __size_of_InitSPI 0014  
                     _ES_GetMSBitSet 0382                          _EOTResponse 05BE  
                   __size_of___awmod 0046                     __size_of___lbmod 0020  
        __size_of_ES_CheckUserEvents 001E                       _ES_EnQueueFIFO 02E4  
                 _ES_Timer_InitTimer 040E               __end_of_BitNum2SetMask 0072  
                           __ptext10 04E0                             __ptext11 0204  
                           __ptext20 02E4                             __ptext12 0500  
                           __ptext21 059C                             __ptext13 0520  
                           __ptext22 03C8                             __ptext14 0606  
                           __ptext23 0588                             __ptext15 010A  
                           __ptext24 05F8                             __ptext16 05EF  
                           __ptext25 05AE                             __ptext17 04B2  
                           __ptext26 055B                             __ptext18 040E  
                           __ptext19 047C                             __ptext28 05BE  
                           __ptext29 0445    ES_Timer_Tick_Resp@NeedsProcessing 0051  
                ?_ES_Timer_InitTimer 0020                        __size_of_main 004C  
                   _RunToggleService 04E0                   _ES_Timer_Tick_Resp 0191  
             __end_of_ES_GetMSBitSet 03C8           InitToggleService@ThisEvent 003F  
                ?_ES_Timer_Tick_Resp 0070               __end_of_ES_EnQueueFIFO 0336  
                           int$flags 007E                 ??_ES_Timer_InitTimer 0022  
                  ES_DeQueue@NumLeft 0032                 ??_ES_Timer_Tick_Resp 0040  
                    _Check4Keystroke 0606                             intlevel1 0000  
                   ?_PostSPI_Service 003D              RunSPI_Service@ThisEvent 0027  
                         _ES_DeQueue 0204    __size_of__HW_Process_Pending_Ints 000D  
          ?__HW_Process_Pending_Ints 0070                      ?_ES_GetMSBitSet 0020  
ES_Timer_Tick_Resp@NextTimer2Process 005F                             printf@ap 0025  
                    ?_ES_EnQueueFIFO 002B                     ES_DeQueue@pBlock 0033  
                    _InitSPI_Service 05EF               ES_DeQueue@pReturnEvent 002B  
              ES_InitQueue@BlockSize 0020  
