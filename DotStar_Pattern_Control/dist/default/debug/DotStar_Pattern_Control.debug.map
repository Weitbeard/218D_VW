Microchip MPLAB XC8 Compiler V1.38 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v1.38\dat\en_msgs.txt -cs \
  -h+dist/default/debug\DotStar_Pattern_Control.debug.sym \
  --cmf=dist/default/debug\DotStar_Pattern_Control.debug.cmf -z -Q18F2480 \
  -oC:\Users\Luke\AppData\Local\Temp\s370.2 \
  -Mdist/default/debug/DotStar_Pattern_Control.debug.map -E1 -ver=XC8 \
  -ASTACK=01B4h-01ffh -pstack=STACK -ACODE=00h-03FFFh -ACONST=00h-03FFFh \
  -ASMALLCONST=0300h-03FFhx61 -AMEDIUMCONST=0300h-03FFFh -ACOMRAM=01h-05Fh \
  -AABS1=00h-02FFh -ABIGRAM=01h-02FFh -ARAM=060h-0FFh,0100h-01FFhx2 \
  -ABANK0=060h-0FFh -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh \
  -ASFR=0D00h-0DFFhx2,0F00h-0F5Fh,0F60h-0FFFh \
  -preset_vec=00h,intcode=08h,intcodelo,powerup,init,end_init \
  -pramtop=0300h -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST \
  -pconst=CONST -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\Luke\AppData\Local\Temp\s370.obj \
  dist/default/debug\DotStar_Pattern_Control.debug.obj 

Object code version is 3.11

Machine type is 18F2480

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\Luke\AppData\Local\Temp\s370.obj
                end_init                             16       16        4        4       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/debug\DotStar_Pattern_Control.debug.obj
                intcode                               8        8        E        4       0
                temp                                 3E       3E        1        1       1
                smallconst                          300      300       BE      180       0
                text50                             128A     128A       70      1DF       0
                text49                             168A     168A       26      1DF       0
                text48                              CC6      CC6       B4      1DF       0
                text47                             12FA     12FA       6A      1DF       0
                text46                             17A8     17A8       16      1DF       0
                text45                             1792     1792       16      1DF       0
                intcode_body                        D7A      D7A       A6      1DF       0
                text43                             151E     151E       3C      1DF       0
                text42                             174A     174A       1C      1DF       0
                text41                             17CC     17CC        E      1DF       0
                text40                              B32      B32       D0      1DF       0
                text39                              EC4      EC4       A2      1DF       0
                text38                             1594     1594       36      1DF       0
                text37                              A50      A50       E2      1DF       0
                text36                             1214     1214       76      1DF       0
                text35                             17BE     17BE        E      1DF       0
                text34                             16D4     16D4       22      1DF       0
                text33                             17F4     17F4        6      1DF       0
                text32                             155A     155A       3A      1DF       0
                text31                             1364     1364       52      1DF       0
                text30                              964      964       EC      1DF       0
                text29                             1800     1800        4      C00       0
                text28                             144E     144E       4A      1DF       0
                text27                             1498     1498       44      1DF       0
                text26                              536      536      128      1DF       0
                text25                             13B6     13B6       4E      1DF       0
                text24                             17EC     17EC        8      1DF       0
                text23                             172E     172E       1C      1DF       0
                text22                             177C     177C       16      1DF       0
                text21                             1632     1632       32      1DF       0
                text20                             1404     1404       4A      1DF       0
                text19                             14DC     14DC       42      1DF       0
                text18                             111E     111E       80      1DF       0
                text17                              F66      F66       9A      1DF       0
                text16                             119E     119E       76      1DF       0
                text15                              3BE      3BE      178      1DF       0
                text14                             1664     1664       26      1DF       0
                text13                             1712     1712       1C      1DF       0
                text12                             17E4     17E4        8      1DF       0
                text11                             16F6     16F6       1C      1DF       0
                text10                             16B0     16B0       24      1DF       0
                text9                              17DA     17DA        A      1DF       0
                text8                               774      774       FC      1DF       0
                text7                               C02      C02       C4      1DF       0
                text6                               E20      E20       A4      1DF       0
                text5                               65E      65E      116      1DF       0
                text4                              1766     1766       16      1DF       0
                text3                               870      870       F4      1DF       0
                text2                              1804     1804        2      C00       0
                text1                              15FE     15FE       34      1DF       0
                text0                              1090     1090       8E      1DF       0
                cstackCOMRAM                          1        1       33        1       1
                cstackBANK0                          BB       BB       37       60       1
                bssBANK2                            200      200       F8      200       1
                dataBANK1                           180      180       34      100       1
                bssBANK1                            100      100       80      100       1
                dataBANK0                            F2       F2        5       60       1
                bssBANK0                             60       60       5B       60       1
                dataCOMRAM                           3D       3D        1        1       1
                bssCOMRAM                            34       34        9        1       1
                cinit                              1000     1000       90      1DF       0
                idataBANK1                         15CA     15CA       34      1DF       0
                idataBANK0                         17FA     17FA        5      1DF       0
                idataCOMRAM                        1806     1806        1      C00       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             16       16        4         0
                intcode                               8        8        E         0
                reset_vec                             0        0        4         0
                text50                             128A     128A       70         0
                text49                             168A     168A       26         0
                text48                              CC6      CC6       B4         0
                text47                             12FA     12FA       6A         0
                text46                             17A8     17A8       16         0
                text45                             1792     1792       16         0
                intcode_body                        D7A      D7A       A6         0
                text43                             151E     151E       3C         0
                text42                             174A     174A       1C         0
                text41                             17CC     17CC        E         0
                text40                              B32      B32       D0         0
                text39                              EC4      EC4       A2         0
                text38                             1594     1594       36         0
                text37                              A50      A50       E2         0
                text36                             1214     1214       76         0
                text35                             17BE     17BE        E         0
                text34                             16D4     16D4       22         0
                text33                             17F4     17F4        6         0
                text32                             155A     155A       3A         0
                text31                             1364     1364       52         0
                text30                              964      964       EC         0
                text29                             1800     1800        4         0
                text28                             144E     144E       4A         0
                text27                             1498     1498       44         0
                text26                              536      536      128         0
                text25                             13B6     13B6       4E         0
                text24                             17EC     17EC        8         0
                text23                             172E     172E       1C         0
                text22                             177C     177C       16         0
                text21                             1632     1632       32         0
                text20                             1404     1404       4A         0
                text19                             14DC     14DC       42         0
                text18                             111E     111E       80         0
                text17                              F66      F66       9A         0
                text16                             119E     119E       76         0
                text15                              3BE      3BE      178         0
                text14                             1664     1664       26         0
                text13                             1712     1712       1C         0
                text12                             17E4     17E4        8         0
                text11                             16F6     16F6       1C         0
                text10                             16B0     16B0       24         0
                text9                              17DA     17DA        A         0
                text8                               774      774       FC         0
                text7                               C02      C02       C4         0
                text6                               E20      E20       A4         0
                text5                               65E      65E      116         0
                text4                              1766     1766       16         0
                text3                               870      870       F4         0
                text2                              1804     1804        2         0
                text1                              15FE     15FE       34         0
                text0                              1090     1090       8E         0
                cinit                              1000     1000       90         0
                idataBANK1                         15CA     15CA       34         0
                idataBANK0                         17FA     17FA        5         0
                idataCOMRAM                        1806     1806        1         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                          300      300       BE         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                temp                                 3E       3E        1         1
                cstackCOMRAM                          1        1       33         1
                dataCOMRAM                           3D       3D        1         1
                bssCOMRAM                            34       34        9         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                cstackBANK0                          BB       BB       37         1
                dataBANK0                            F2       F2        5         1
                bssBANK0                             60       60       5B         1

        CLASS   BANK1          
                dataBANK1                           180      180       34         1
                bssBANK1                            100      100       80         1

        CLASS   BANK2          
                bssBANK2                            200      200       F8         1

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  00003E  00003F         1       1  COMRAM  
                intcode                        000008  000012  00001A         4       0  CODE    
                bssBANK0                       000060  000097  0000F7        60       1  BANK0   
                bssBANK1                       000100  0000B4  0001B4       100       1  BANK1   
                bssBANK2                       000200  0000F8  0002F8       200       1  BANK2   
                smallconst                     000300  0000BE  0003BE       180       0  SMALLCON
                text15                         0003BE  001441  0017FF       1DF       0  CODE    
                text29                         001800  000007  001807       C00       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0000F7-0000FF                9
        BANK1            0001B4-0001FF               4C
        BANK2            0002F8-0002FF                8
        BIGRAM           00003F-00005F               21
                         0000F7-0000FF                9
                         0001B4-0001FF               4C
                         0002F8-0002FF                8
        CODE             000004-000007                4
                         00001A-0002FF              2E6
                         0017FF-0017FF                1
                         001807-003FFF             27F9
        COMRAM           00003F-00005F               21
        CONST            000004-000007                4
                         00001A-0002FF              2E6
                         0017FF-0017FF                1
                         001807-003FFF             27F9
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      0017FF-0017FF                1
                         001807-003FFF             27F9
        RAM              0000F7-0000FF                9
                         0001B4-0001FF               4C
                         0002F8-0002FF                8
        SFR              000D00-000FFF              100
        SMALLCONST       0017FF-0017FF                1
                         001807-003FFF              100
        STACK            0001B4-0001FF               4C

                                  Symbol Table

?_GetNextFrame                       cstackBANK0  0000BB
?_RunPatternControlService           cstackBANK0  0000E3
?_RunSPI32ControlService             cstackBANK0  0000E3
?_UpdatePattern                      cstackBANK0  0000C7
?___awmod                            cstackBANK0  0000BB
?___llmod                            cstackBANK0  0000BB
?___lmul                             cstackBANK0  0000BB
?___wmul                             cstackBANK0  0000C1
?_printf                             cstackBANK0  0000BB
?i2___awmod                          cstackCOMRAM 000001
?i2___wmul                           cstackCOMRAM 000007
DotStar_Init@i                       cstackBANK0  0000BE
DotStar_Init@numPixels               cstackBANK0  0000BD
DotStar_Show@pixelPointer            cstackBANK0  0000E1
ES_CheckUserEvents@i                 cstackBANK0  0000BB
ES_DeQueue@NumLeft                   cstackBANK0  0000CE
ES_DeQueue@SaveCrit                  cstackBANK0  0000CD
ES_DeQueue@pBlock                    cstackBANK0  0000C7
ES_DeQueue@pReturnEvent              cstackBANK0  0000C9
ES_DeQueue@pThisQueue                cstackBANK0  0000CF
ES_EnQueueFIFO@Event2Add             cstackBANK0  0000C9
ES_EnQueueFIFO@SaveCrit              cstackBANK0  0000CF
ES_EnQueueFIFO@pBlock                cstackBANK0  0000C7
ES_EnQueueFIFO@pThisQueue            cstackBANK0  0000D0
ES_GetMSBitSet@LoopCntr              cstackBANK0  0000C4
ES_GetMSBitSet@Nybble2Test           cstackBANK0  0000C3
ES_GetMSBitSet@ReturnVal             cstackBANK0  0000C2
ES_GetMSBitSet@Val2Check             cstackBANK0  0000BB
ES_InitQueue@BlockSize               cstackBANK0  0000BD
ES_InitQueue@pBlock                  cstackBANK0  0000BB
ES_InitQueue@pThisQueue              cstackBANK0  0000BE
ES_Initialize@NewRate                cstackBANK0  0000DC
ES_Initialize@i                      cstackBANK0  0000DE
ES_PostToService@TheEvent            cstackBANK0  0000D2
ES_PostToService@WhichService        cstackBANK0  0000D7
ES_Run@HighestPrior                  cstackBANK0  0000F0
ES_Run@ThisEvent                     bssBANK0     0000B8
ES_Timer_Init@Rate                   cstackBANK0  0000BD
ES_Timer_InitTimer@NewTime           cstackBANK0  0000BB
ES_Timer_InitTimer@Num               cstackBANK0  0000BF
ES_Timer_StopTimer@Num               cstackBANK0  0000BF
ES_Timer_Tick_Resp@NeedsProcessing   bssBANK0     00008B
ES_Timer_Tick_Resp@NewEvent          bssBANK0     000088
ES_Timer_Tick_Resp@NextTimer2Process bssBANK0     000095
ISR@LastTime                         bssCOMRAM    000034
ISR@NextTime                         bssCOMRAM    000036
InitPatternControlService@Priority   cstackBANK0  0000DB
InitPatternControlService@ThisEvent  cstackBANK0  0000D8
InitSPI32ControlService@Priority     cstackBANK0  0000DB
InitSPI32ControlService@ThisEvent    cstackBANK0  0000D8
Pattern_RGBPatterns@Length           bssBANK0     000096
Pattern_RGBPatterns@PatternConfigs   bssBANK0     00008D
PostPatternControlService@ThisEvent  cstackBANK0  0000D8
PostSPI32ControlService@ThisEvent    cstackBANK0  0000D8
RunPatternControlService@ReturnEvent cstackBANK0  0000E6
RunPatternControlService@ThisEvent   cstackBANK0  0000E3
RunPatternControlService@testEvent   cstackBANK0  0000E9
RunSPI32ControlService@ReturnEvent   cstackBANK0  0000E7
RunSPI32ControlService@ThisEvent     cstackBANK0  0000E3
SPI32_ControlService@CurrentState    bssBANK0     000097
SPI32_ControlService@MyPriority      bssBANK0     000098
SPI32_EOTResponse@EOTevent           cstackCOMRAM 000021
SPI32_SendByte@newByte               cstackBANK0  0000BB
SPI32_TransmitFrames@framePointer    cstackBANK0  0000DB
SPI32_TransmitFrames@numFrames       cstackBANK0  0000DD
SPI32_TransmitFrames@transmitEvent   cstackBANK0  0000DE
SetupPattern@configs                 cstackBANK0  0000BB
SetupPattern@numPixels               cstackBANK0  0000BD
UpdatePattern@brightness             cstackBANK0  0000CF
UpdatePattern@i                      cstackBANK0  0000D1
UpdatePattern@patternID              cstackBANK0  0000D0
_ADCON1                              (abs)        000FC1
_BitNum2SetMask                      smallconst   000301
_CCP1CON                             (abs)        000FBD
_CCP1IF                              (abs)        007CF2
_CCPR1H                              (abs)        000FBF
_CCPR1L                              (abs)        000FBE
_Check4Keystroke                     text29       001800
_CurrentFrame                        bssBANK0     000080
_CurrentState                        bssBANK0     000099
_DistList00                          smallconst   000360
_DotStar_Init                        text40       000B32
_DotStar_Off                         text13       001712
_DotStar_Show                        text19       0014DC
_ES_CheckUserEvents                  text28       00144E
_ES_DeQueue                          text26       000536
_ES_EnQueueFIFO                      text37       000A50
_ES_EventList                        smallconst   00035E
_ES_GetMSBitSet                      text6        000E20
_ES_InitQueue                        text43       00151E
_ES_Initialize                       text30       000964
_ES_PostToService                    text36       001214
_ES_Run                              text3        000870
_ES_Timer_Init                       text41       0017CC
_ES_Timer_InitTimer                  text18       00111E
_ES_Timer_StopTimer                  text25       0013B6
_ES_Timer_Tick_Resp                  text5        00065E
_EventQueues                         smallconst   000358
_FrameIndex                          bssBANK0     00009A
_FramePointer                        bssBANK0     00008F
_GIE                                 (abs)        007F97
_GenColors                           dataBANK1    000180
_GetNextFrame                        text10       0016B0
_HW_Init                             text34       0016D4
_INTCON                              (abs)        000FF2
_IRCF0                               (abs)        007E9C
_IRCF1                               (abs)        007E9D
_IRCF2                               (abs)        007E9E
_ISR                                 intcode      000008
_InitPatternControlService           text31       001364
_InitSPI32ControlService             text32       00155A
_LATC                                (abs)        000F8B
_Length                              bssBANK0     00009B
_MyPriority                          bssBANK0     00009C
_NumFrames                           bssBANK0     00009D
_Nybble2MSBitNum                     smallconst   000341
_OffFrames                           bssBANK2     000200
_PIE1                                (abs)        000F9D
_PORTC                               (abs)        000F82
_PatternConfigs                      dataBANK0    0000F2
_PatternStepCounter                  bssBANK0     00009E
_PausePattern                        text24       0017EC
_PixelFrames                         bssBANK1     000100
_PixelPattern                        bssBANK2     000280
_PostPatternControlService           text22       00177C
_PostSPI32ControlService             text23       00172E
_PostSPI32ControlService$intlevel0   text23       001734
_Queue0                              bssBANK0     0000A0
_Queue1                              bssBANK0     0000AC
_Ready                               bssBANK0     000091
_ResetPattern                        text12       0017E4
_RunPatternControlService            text7        000C02
_RunSPI32ControlService              text8        000774
_SPI32_EOTResponse                   text45       001792
_SPI32_Init                          text33       0017F4
_SPI32_SendByte                      text9        0017DA
_SPI32_TransmitFrames                text21       001632
_SSPADD                              (abs)        000FC8
_SSPBUF                              (abs)        000FC9
_SSPCON1                             (abs)        000FC6
_SSPIE                               (abs)        007CEB
_SSPIF                               (abs)        007CF3
_SSPSTAT                             (abs)        000FC7
_ServDescList                        smallconst   000350
_SetupPattern                        text35       0017BE
_ShowPattern                         text14       001664
_StopPattern                         text11       0016F6
_SysTickCounter                      bssCOMRAM    000038
_T1CON                               (abs)        000FCD
_TMR_ActiveFlags                     bssBANK0     000093
_TMR_TimerArray                      bssBANK0     000060
_TRISC                               (abs)        000F94
_TestColor                           bssBANK0     000084
_TickCount                           bssBANK0     00009F
_Timer2PostFunc                      smallconst   000321
_UpdatePattern                       text15       0003BE
__CFG_BOREN$OFF                      (abs)        000000
__CFG_MCLRE$ON                       (abs)        000000
__CFG_OSC$IRCIO67                    (abs)        000000
__CFG_PBADEN$OFF                     (abs)        000000
__CFG_PWRT$OFF                       (abs)        000000
__CFG_WDT$OFF                        (abs)        000000
__HRAM                               (abs)        000000
__HW_Process_Pending_Ints            text4        001766
__HW_Timer_Init                      text42       00174A
__HW_Timer_Init@Rate                 cstackBANK0  0000BB
__Habs1                              abs1         000000
__Hbank0                             bank0        000000
__Hbank1                             bank1        000000
__Hbank2                             bank2        000000
__Hbigbss                            bigbss       000000
__Hbigdata                           bigdata      000000
__Hbigram                            bigram       000000
__Hbss                               bss          000000
__HbssBANK0                          bssBANK0     000000
__HbssBANK1                          bssBANK1     000000
__HbssBANK2                          bssBANK2     000000
__HbssCOMRAM                         bssCOMRAM    000000
__Hcinit                             cinit        000000
__Hclrtext                           clrtext      000000
__Hcomram                            comram       000000
__Hconfig                            config       30000E
__Hconst                             const        000000
__HcstackBANK0                       cstackBANK0  000000
__HcstackCOMRAM                      cstackCOMRAM 000000
__Hdata                              data         000000
__HdataBANK0                         dataBANK0    000000
__HdataBANK1                         dataBANK1    000000
__HdataCOMRAM                        dataCOMRAM   000000
__Heeprom_data                       eeprom_data  000000
__Hend_init                          end_init     00001A
__Hfarbss                            farbss       000000
__Hfardata                           fardata      000000
__Hibigdata                          ibigdata     000000
__Hidata                             idata        000000
__HidataBANK0                        idataBANK0   000000
__HidataBANK1                        idataBANK1   000000
__HidataCOMRAM                       idataCOMRAM  000000
__Hidloc                             idloc        200008
__Hifardata                          ifardata     000000
__Hinit                              init         000016
__Hintcode                           intcode      000016
__Hintcode_body                      intcode_body 000000
__Hintcodelo                         intcodelo    000016
__Hintentry                          intentry     000000
__Hintret                            intret       000000
__Hintsave_regs                      intsave_regs 000000
__Hirdata                            irdata       000000
__Hmediumconst                       mediumconst  000000
__HnvFARRAM                          nvFARRAM     000000
__Hnvbit                             nvbit        000000
__Hnvrram                            nvrram       000000
__Hparam                             rparam       000000
__Hpowerup                           powerup      000016
__Hram                               ram          000000
__Hramtop                            ramtop       000300
__Hrbit                              rbit         000000
__Hrbss                              rbss         000000
__Hrdata                             rdata        000000
__Hreset_vec                         reset_vec    000004
__Hrparam                            rparam       000000
__Hsfr                               sfr          000000
__Hsmallconst                        smallconst   0003BE
__Hspace_0                           (abs)        30000E
__Hspace_1                           (abs)        0002F8
__Hspace_2                           (abs)        000000
__Hstack                             stack        000000
__Hstruct                            struct       000000
__Htemp                              temp         00003F
__Htext                              text         000000
__Htext0                             text0        000000
__Htext1                             text1        000000
__Htext10                            text10       000000
__Htext11                            text11       000000
__Htext12                            text12       000000
__Htext13                            text13       000000
__Htext14                            text14       000000
__Htext15                            text15       000000
__Htext16                            text16       000000
__Htext17                            text17       000000
__Htext18                            text18       000000
__Htext19                            text19       000000
__Htext2                             text2        000000
__Htext20                            text20       000000
__Htext21                            text21       000000
__Htext22                            text22       000000
__Htext23                            text23       000000
__Htext24                            text24       000000
__Htext25                            text25       000000
__Htext26                            text26       000000
__Htext27                            text27       000000
__Htext28                            text28       000000
__Htext29                            text29       000000
__Htext3                             text3        000000
__Htext30                            text30       000000
__Htext31                            text31       000000
__Htext32                            text32       000000
__Htext33                            text33       000000
__Htext34                            text34       000000
__Htext35                            text35       000000
__Htext36                            text36       000000
__Htext37                            text37       000000
__Htext38                            text38       000000
__Htext39                            text39       000000
__Htext4                             text4        000000
__Htext40                            text40       000000
__Htext41                            text41       000000
__Htext42                            text42       000000
__Htext43                            text43       000000
__Htext45                            text45       000000
__Htext46                            text46       000000
__Htext47                            text47       000000
__Htext48                            text48       000000
__Htext49                            text49       000000
__Htext5                             text5        000000
__Htext50                            text50       000000
__Htext51                            text51       000000
__Htext6                             text6        000000
__Htext7                             text7        000000
__Htext8                             text8        000000
__Htext9                             text9        000000
__LRAM                               (abs)        000001
__Labs1                              abs1         000000
__Lbank0                             bank0        000000
__Lbank1                             bank1        000000
__Lbank2                             bank2        000000
__Lbigbss                            bigbss       000000
__Lbigdata                           bigdata      000000
__Lbigram                            bigram       000000
__Lbss                               bss          000000
__LbssBANK0                          bssBANK0     000000
__LbssBANK1                          bssBANK1     000000
__LbssBANK2                          bssBANK2     000000
__LbssCOMRAM                         bssCOMRAM    000000
__Lcinit                             cinit        000000
__Lclrtext                           clrtext      000000
__Lcomram                            comram       000000
__Lconfig                            config       300000
__Lconst                             const        000000
__LcstackBANK0                       cstackBANK0  000000
__LcstackCOMRAM                      cstackCOMRAM 000000
__Ldata                              data         000000
__LdataBANK0                         dataBANK0    000000
__LdataBANK1                         dataBANK1    000000
__LdataCOMRAM                        dataCOMRAM   000000
__Leeprom_data                       eeprom_data  000000
__Lend_init                          end_init     000016
__Lfarbss                            farbss       000000
__Lfardata                           fardata      000000
__Libigdata                          ibigdata     000000
__Lidata                             idata        000000
__LidataBANK0                        idataBANK0   000000
__LidataBANK1                        idataBANK1   000000
__LidataCOMRAM                       idataCOMRAM  000000
__Lidloc                             idloc        200000
__Lifardata                          ifardata     000000
__Linit                              init         000016
__Lintcode                           intcode      000008
__Lintcode_body                      intcode_body 000000
__Lintcodelo                         intcodelo    000016
__Lintentry                          intentry     000000
__Lintret                            intret       000000
__Lintsave_regs                      intsave_regs 000000
__Lirdata                            irdata       000000
__Lmediumconst                       mediumconst  000000
__LnvFARRAM                          nvFARRAM     000000
__Lnvbit                             nvbit        000000
__Lnvrram                            nvrram       000000
__Lparam                             rparam       000000
__Lpowerup                           powerup      000016
__Lram                               ram          000000
__Lramtop                            ramtop       000300
__Lrbit                              rbit         000000
__Lrbss                              rbss         000000
__Lrdata                             rdata        000000
__Lreset_vec                         reset_vec    000000
__Lrparam                            rparam       000000
__Lsfr                               sfr          000000
__Lsmallconst                        smallconst   000300
__Lspace_0                           (abs)        000000
__Lspace_1                           (abs)        000000
__Lspace_2                           (abs)        000000
__Lstack                             stack        000000
__Lstruct                            struct       000000
__Ltemp                              temp         00003E
__Ltext                              text         000000
__Ltext0                             text0        000000
__Ltext1                             text1        000000
__Ltext10                            text10       000000
__Ltext11                            text11       000000
__Ltext12                            text12       000000
__Ltext13                            text13       000000
__Ltext14                            text14       000000
__Ltext15                            text15       000000
__Ltext16                            text16       000000
__Ltext17                            text17       000000
__Ltext18                            text18       000000
__Ltext19                            text19       000000
__Ltext2                             text2        000000
__Ltext20                            text20       000000
__Ltext21                            text21       000000
__Ltext22                            text22       000000
__Ltext23                            text23       000000
__Ltext24                            text24       000000
__Ltext25                            text25       000000
__Ltext26                            text26       000000
__Ltext27                            text27       000000
__Ltext28                            text28       000000
__Ltext29                            text29       000000
__Ltext3                             text3        000000
__Ltext30                            text30       000000
__Ltext31                            text31       000000
__Ltext32                            text32       000000
__Ltext33                            text33       000000
__Ltext34                            text34       000000
__Ltext35                            text35       000000
__Ltext36                            text36       000000
__Ltext37                            text37       000000
__Ltext38                            text38       000000
__Ltext39                            text39       000000
__Ltext4                             text4        000000
__Ltext40                            text40       000000
__Ltext41                            text41       000000
__Ltext42                            text42       000000
__Ltext43                            text43       000000
__Ltext45                            text45       000000
__Ltext46                            text46       000000
__Ltext47                            text47       000000
__Ltext48                            text48       000000
__Ltext49                            text49       000000
__Ltext5                             text5        000000
__Ltext50                            text50       000000
__Ltext51                            text51       000000
__Ltext6                             text6        000000
__Ltext7                             text7        000000
__Ltext8                             text8        000000
__Ltext9                             text9        000000
__PRIMASK_temp                       bssCOMRAM    00003A
__S0                                 (abs)        30000E
__S1                                 (abs)        0002F8
__S2                                 (abs)        000000
___awmod                             text39       000EC4
___awmod@counter                     cstackBANK0  0000BF
___awmod@dividend                    cstackBANK0  0000BB
___awmod@divisor                     cstackBANK0  0000BD
___awmod@sign                        cstackBANK0  0000C0
___inthi_sp                          stack        000000
___intlo_sp                          stack        000000
___lbmod                             text27       001498
___lbmod@counter                     cstackBANK0  0000BD
___lbmod@dividend                    cstackBANK0  0000BC
___lbmod@divisor                     cstackBANK0  0000BB
___lbmod@rem                         cstackBANK0  0000BE
___llmod                             text17       000F66
___llmod@counter                     cstackBANK0  0000C3
___llmod@dividend                    cstackBANK0  0000BB
___llmod@divisor                     cstackBANK0  0000BF
___lmul                              text16       00119E
___lmul@multiplicand                 cstackBANK0  0000BF
___lmul@multiplier                   cstackBANK0  0000BB
___lmul@product                      cstackBANK0  0000C3
___param_bank                        (abs)        000010
___rparam_used                       (abs)        000001
___sp                                stack        000000
___wmul                              text38       001594
___wmul@multiplicand                 cstackBANK0  0000C3
___wmul@multiplier                   cstackBANK0  0000C1
___wmul@product                      cstackBANK0  0000C5
__accesstop                          (abs)        000060
__activetblptr                       (abs)        000002
__end_of_BitNum2SetMask              smallconst   000321
__end_of_Check4Keystroke             text29       001804
__end_of_DistList00                  smallconst   000364
__end_of_DotStar_Init                text40       000C02
__end_of_DotStar_Off                 text13       00172E
__end_of_DotStar_Show                text19       00151E
__end_of_ES_CheckUserEvents          text28       001498
__end_of_ES_DeQueue                  text26       00065E
__end_of_ES_EnQueueFIFO              text37       000B32
__end_of_ES_EventList                smallconst   000360
__end_of_ES_GetMSBitSet              text6        000EC4
__end_of_ES_InitQueue                text43       00155A
__end_of_ES_Initialize               text30       000A50
__end_of_ES_PostToService            text36       00128A
__end_of_ES_Run                      text3        000964
__end_of_ES_Timer_Init               text41       0017DA
__end_of_ES_Timer_InitTimer          text18       00119E
__end_of_ES_Timer_StopTimer          text25       001404
__end_of_ES_Timer_Tick_Resp          text5        000774
__end_of_EventQueues                 smallconst   00035E
__end_of_GetNextFrame                text10       0016D4
__end_of_HW_Init                     text34       0016F6
__end_of_ISR                         intcode_body 000E20
__end_of_InitPatternControlService   text31       0013B6
__end_of_InitSPI32ControlService     text32       001594
__end_of_Nybble2MSBitNum             smallconst   000350
__end_of_PausePattern                text24       0017F4
__end_of_PostPatternControlService   text22       001792
__end_of_PostSPI32ControlService     text23       00174A
__end_of_ResetPattern                text12       0017EC
__end_of_RunPatternControlService    text7        000CC6
__end_of_RunSPI32ControlService      text8        000870
__end_of_SPI32_EOTResponse           text45       0017A8
__end_of_SPI32_Init                  text33       0017FA
__end_of_SPI32_SendByte              text9        0017E4
__end_of_SPI32_TransmitFrames        text21       001664
__end_of_ServDescList                smallconst   000358
__end_of_SetupPattern                text35       0017CC
__end_of_ShowPattern                 text14       00168A
__end_of_StopPattern                 text11       001712
__end_of_Timer2PostFunc              smallconst   000341
__end_of_UpdatePattern               text15       000536
__end_of__HW_Process_Pending_Ints    text4        00177C
__end_of__HW_Timer_Init              text42       001766
__end_of___awmod                     text39       000F66
__end_of___lbmod                     text27       0014DC
__end_of___llmod                     text17       001000
__end_of___lmul                      text16       001214
__end_of___wmul                      text38       0015CA
__end_of__initialization             cinit        001082
__end_of_main                        text0        00111E
__end_of_memcpy                      text20       00144E
__end_of_printf                      text1        001632
__end_of_putch                       text2        001806
__end_ofi2_ES_EnQueueFIFO            text48       000D7A
__end_ofi2_ES_PostToService          text47       001364
__end_ofi2_PostSPI32ControlService   text46       0017BE
__end_ofi2___awmod                   text50       0012FA
__end_ofi2___wmul                    text49       0016B0
__initialization                     cinit        001000
__mediumconst                        mediumconst  000000
__pbssBANK0                          bssBANK0     000060
__pbssBANK1                          bssBANK1     000100
__pbssBANK2                          bssBANK2     000200
__pbssCOMRAM                         bssCOMRAM    000034
__pcinit                             cinit        001000
__pcstackBANK0                       cstackBANK0  0000BB
__pcstackCOMRAM                      cstackCOMRAM 000001
__pdataBANK0                         dataBANK0    0000F2
__pdataBANK1                         dataBANK1    000180
__pdataCOMRAM                        dataCOMRAM   00003D
__pidataBANK0                        idataBANK0   0017FA
__pidataBANK1                        idataBANK1   0015CA
__pidataCOMRAM                       idataCOMRAM  001806
__pintcode                           intcode      000008
__pintcode_body                      intcode_body 000D7A
__psmallconst                        smallconst   000300
__ptext0                             text0        001090
__ptext1                             text1        0015FE
__ptext10                            text10       0016B0
__ptext11                            text11       0016F6
__ptext12                            text12       0017E4
__ptext13                            text13       001712
__ptext14                            text14       001664
__ptext15                            text15       0003BE
__ptext16                            text16       00119E
__ptext17                            text17       000F66
__ptext18                            text18       00111E
__ptext19                            text19       0014DC
__ptext2                             text2        001804
__ptext20                            text20       001404
__ptext21                            text21       001632
__ptext22                            text22       00177C
__ptext23                            text23       00172E
__ptext24                            text24       0017EC
__ptext25                            text25       0013B6
__ptext26                            text26       000536
__ptext27                            text27       001498
__ptext28                            text28       00144E
__ptext29                            text29       001800
__ptext3                             text3        000870
__ptext30                            text30       000964
__ptext31                            text31       001364
__ptext32                            text32       00155A
__ptext33                            text33       0017F4
__ptext34                            text34       0016D4
__ptext35                            text35       0017BE
__ptext36                            text36       001214
__ptext37                            text37       000A50
__ptext38                            text38       001594
__ptext39                            text39       000EC4
__ptext4                             text4        001766
__ptext40                            text40       000B32
__ptext41                            text41       0017CC
__ptext42                            text42       00174A
__ptext43                            text43       00151E
__ptext45                            text45       001792
__ptext46                            text46       0017A8
__ptext47                            text47       0012FA
__ptext48                            text48       000CC6
__ptext49                            text49       00168A
__ptext5                             text5        00065E
__ptext50                            text50       00128A
__ptext51                            text51       000000
__ptext6                             text6        000E20
__ptext7                             text7        000C02
__ptext8                             text8        000774
__ptext9                             text9        0017DA
__ramtop                             ramtop       000300
__size_of_Check4Keystroke            (abs)        000000
__size_of_DotStar_Init               (abs)        000000
__size_of_DotStar_Off                (abs)        000000
__size_of_DotStar_Show               (abs)        000000
__size_of_ES_CheckUserEvents         (abs)        000000
__size_of_ES_DeQueue                 (abs)        000000
__size_of_ES_EnQueueFIFO             (abs)        000000
__size_of_ES_GetMSBitSet             (abs)        000000
__size_of_ES_InitQueue               (abs)        000000
__size_of_ES_Initialize              (abs)        000000
__size_of_ES_PostToService           (abs)        000000
__size_of_ES_Run                     (abs)        000000
__size_of_ES_Timer_Init              (abs)        000000
__size_of_ES_Timer_InitTimer         (abs)        000000
__size_of_ES_Timer_StopTimer         (abs)        000000
__size_of_ES_Timer_Tick_Resp         (abs)        000000
__size_of_GetNextFrame               (abs)        000000
__size_of_HW_Init                    (abs)        000000
__size_of_ISR                        (abs)        000000
__size_of_InitPatternControlService  (abs)        000000
__size_of_InitSPI32ControlService    (abs)        000000
__size_of_PausePattern               (abs)        000000
__size_of_PostPatternControlService  (abs)        000000
__size_of_PostSPI32ControlService    (abs)        000000
__size_of_ResetPattern               (abs)        000000
__size_of_RunPatternControlService   (abs)        000000
__size_of_RunSPI32ControlService     (abs)        000000
__size_of_SPI32_EOTResponse          (abs)        000000
__size_of_SPI32_Init                 (abs)        000000
__size_of_SPI32_SendByte             (abs)        000000
__size_of_SPI32_TransmitFrames       (abs)        000000
__size_of_SetupPattern               (abs)        000000
__size_of_ShowPattern                (abs)        000000
__size_of_StopPattern                (abs)        000000
__size_of_UpdatePattern              (abs)        000000
__size_of__HW_Process_Pending_Ints   (abs)        000000
__size_of__HW_Timer_Init             (abs)        000000
__size_of___awmod                    (abs)        000000
__size_of___lbmod                    (abs)        000000
__size_of___llmod                    (abs)        000000
__size_of___lmul                     (abs)        000000
__size_of___wmul                     (abs)        000000
__size_of_main                       (abs)        000000
__size_of_memcpy                     (abs)        000000
__size_of_printf                     (abs)        000000
__size_of_putch                      (abs)        000000
__size_ofi2_ES_EnQueueFIFO           (abs)        000000
__size_ofi2_ES_PostToService         (abs)        000000
__size_ofi2_PostSPI32ControlService  (abs)        000000
__size_ofi2___awmod                  (abs)        000000
__size_ofi2___wmul                   (abs)        000000
__smallconst                         smallconst   000300
_main                                text0        001090
_memcpy                              text20       001404
_printf                              text1        0015FE
_putch                               text2        001804
btemp                                temp         00003E
end_of_initialization                cinit        001082
i2ES_EnQueueFIFO@Event2Add           cstackCOMRAM 00000F
i2ES_EnQueueFIFO@SaveCrit            cstackCOMRAM 000015
i2ES_EnQueueFIFO@pBlock              cstackCOMRAM 00000D
i2ES_EnQueueFIFO@pThisQueue          cstackCOMRAM 000016
i2ES_PostToService@TheEvent          cstackCOMRAM 000018
i2ES_PostToService@WhichService      cstackCOMRAM 00001D
i2PostSPI32ControlService@ThisEvent  cstackCOMRAM 00001E
i2_ES_EnQueueFIFO                    text48       000CC6
i2_ES_PostToService                  text47       0012FA
i2_PostSPI32ControlService           text46       0017A8
i2___awmod                           text50       00128A
i2___awmod@counter                   cstackCOMRAM 000005
i2___awmod@dividend                  cstackCOMRAM 000001
i2___awmod@divisor                   cstackCOMRAM 000003
i2___awmod@sign                      cstackCOMRAM 000006
i2___wmul                            text49       00168A
i2___wmul@multiplicand               cstackCOMRAM 000009
i2___wmul@multiplier                 cstackCOMRAM 000007
i2___wmul@product                    cstackCOMRAM 00000B
int$flags                            temp         00003E
int_func                             intcode_body 000D7A
intlevel0                            text         000000
intlevel1                            text         000000
intlevel2                            text         000000
intlevel3                            text         000000
main@ErrorType                       cstackBANK0  0000F1
memcpy@d                             cstackBANK0  0000C1
memcpy@d1                            cstackBANK0  0000BB
memcpy@n                             cstackBANK0  0000BF
memcpy@s                             cstackBANK0  0000C3
memcpy@s1                            cstackBANK0  0000BD
printf@ap                            cstackBANK0  0000BD
printf@c                             cstackBANK0  0000BF
printf@f                             cstackBANK0  0000BB
stackhi                              (abs)        0001FF
stacklo                              (abs)        0001B4
start                                init         000016
start_initialization                 cinit        001000


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 24 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  ErrorType       1   54[BANK0 ] enum E15647
 Return value:  Size  Location     Type
                  2  521[None  ] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels required when called:   15
 This function calls:
		_ES_Initialize
		_ES_Run
		_printf
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _printf *****************
 Defined at:
		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
 Parameters:    Size  Location     Type
  f               2    0[BANK0 ] PTR const unsigned char 
		 -> STR_4(15), STR_3(23), STR_2(24), STR_1(27), 
 Auto vars:     Size  Location     Type
  tmpval          4    0        struct .
  cp              3    0        PTR const unsigned char 
  ap              2    2[BANK0 ] PTR void [1]
		 -> ?_printf(2), 
  len             2    0        unsigned int 
  val             2    0        unsigned int 
  c               1    4[BANK0 ] char 
  flag            1    0        unsigned char 
  prec            1    0        char 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       3       0       0
      Temps:          0       0       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_putch
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _putch *****************
 Defined at:
		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\putch.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1    0[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_printf
 This function uses a non-reentrant model


 *************** function _ES_Run *****************
 Defined at:
		line 277 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  HighestPrior    1   53[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E15495
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       4       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   14
 This function calls:
		_ES_CheckUserEvents
		_ES_DeQueue
		_ES_GetMSBitSet
		_RunPatternControlService
		_RunSPI32ControlService
		__HW_Process_Pending_Ints
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function __HW_Process_Pending_Ints *****************
 Defined at:
		line 207 in file "ES_Port.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   11
 This function calls:
		_ES_Timer_Tick_Resp
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _ES_Timer_Tick_Resp *****************
 Defined at:
		line 284 in file "ES_Timers.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       4       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		Absolute function
		_ES_GetMSBitSet
		_PostPatternControlService
		_PostSPI32ControlService
 This function is called by:
		__HW_Process_Pending_Ints
 This function uses a non-reentrant model


 *************** function _ES_GetMSBitSet *****************
 Defined at:
		line 79 in file "ES_LookupTables.c"
 Parameters:    Size  Location     Type
  Val2Check       2    0[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  LoopCntr        1    9[BANK0 ] char 
  Nybble2Test     1    8[BANK0 ] unsigned char 
  ReturnVal       1    7[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       3       0       0
      Temps:          0       5       0       0
      Totals:         0      10       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ES_Run
		_ES_Timer_Tick_Resp
 This function uses a non-reentrant model


 *************** function _RunPatternControlService *****************
 Defined at:
		line 157 in file "Pattern_ControlService.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   40[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  testEvent       3   46[BANK0 ] struct ES_Event_t
  ReturnEvent     3   43[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  3   40[BANK0 ] struct ES_Event_t
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       6       0       0
      Temps:          0       0       0       0
      Totals:         0       9       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   13
 This function calls:
		_PausePattern
		_PostPatternControlService
		_ShowPattern
		_StopPattern
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _RunSPI32ControlService *****************
 Defined at:
		line 138 in file "SPI32_ControlService.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   40[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  ReturnEvent     3   44[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  3   40[BANK0 ] struct ES_Event_t
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       3       0       0
      Temps:          0       1       0       0
      Totals:         0       7       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_GetNextFrame
		_SPI32_SendByte
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _SPI32_SendByte *****************
 Defined at:
		line 84 in file "SPI32_HW.c"
 Parameters:    Size  Location     Type
  newByte         1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  newByte         1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_RunSPI32ControlService
 This function uses a non-reentrant model


 *************** function _GetNextFrame *****************
 Defined at:
		line 248 in file "SPI32_ControlService.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4    0[BANK0 ] unsigned long 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_RunSPI32ControlService
 This function uses a non-reentrant model


 *************** function _StopPattern *****************
 Defined at:
		line 280 in file "Pattern_ControlService.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   12
 This function calls:
		_DotStar_Off
		_ES_Timer_StopTimer
		_ResetPattern
 This function is called by:
		_RunPatternControlService
 This function uses a non-reentrant model


 *************** function _ResetPattern *****************
 Defined at:
		line 120 in file "Pattern_RGBPatterns.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_StopPattern
 This function uses a non-reentrant model


 *************** function _DotStar_Off *****************
 Defined at:
		line 73 in file "Pattern_DotStarLED.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   11
 This function calls:
		_SPI32_TransmitFrames
 This function is called by:
		_StopPattern
 This function uses a non-reentrant model


 *************** function _ShowPattern *****************
 Defined at:
		line 270 in file "Pattern_ControlService.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   12
 This function calls:
		_DotStar_Show
		_ES_Timer_InitTimer
		_UpdatePattern
 This function is called by:
		_RunPatternControlService
 This function uses a non-reentrant model


 *************** function _UpdatePattern *****************
 Defined at:
		line 76 in file "Pattern_RGBPatterns.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1   22[BANK0 ] unsigned char 
  patternID       1   21[BANK0 ] unsigned char 
  brightness      1   20[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2   12[BANK0 ] PTR unsigned long 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       3       0       0
      Temps:          0       6       0       0
      Totals:         0      11       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		___lbmod
		___llmod
		___lmul
 This function is called by:
		_ShowPattern
 This function uses a non-reentrant model


 *************** function ___lmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul32.c"
 Parameters:    Size  Location     Type
  multiplier      4    0[BANK0 ] unsigned long 
  multiplicand    4    4[BANK0 ] unsigned long 
 Auto vars:     Size  Location     Type
  product         4    8[BANK0 ] unsigned long 
 Return value:  Size  Location     Type
                  4    0[BANK0 ] unsigned long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       8       0       0
      Locals:         0       4       0       0
      Temps:          0       0       0       0
      Totals:         0      12       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_UpdatePattern
 This function uses a non-reentrant model


 *************** function ___llmod *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\llmod.c"
 Parameters:    Size  Location     Type
  dividend        4    0[BANK0 ] unsigned long 
  divisor         4    4[BANK0 ] unsigned long 
 Auto vars:     Size  Location     Type
  counter         1    8[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4    0[BANK0 ] unsigned long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       8       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       9       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_UpdatePattern
 This function uses a non-reentrant model


 *************** function _ES_Timer_InitTimer *****************
 Defined at:
		line 229 in file "ES_Timers.c"
 Parameters:    Size  Location     Type
  Num             1    wreg     unsigned char 
  NewTime         2    0[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  Num             1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E15473
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       1       0       0
      Temps:          0       2       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ShowPattern
 This function uses a non-reentrant model


 *************** function _DotStar_Show *****************
 Defined at:
		line 66 in file "Pattern_DotStarLED.c"
 Parameters:    Size  Location     Type
  pixelPointer    2   38[BANK0 ] PTR unsigned long 
		 -> PixelPattern(120), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   11
 This function calls:
		_SPI32_TransmitFrames
		_memcpy
 This function is called by:
		_ShowPattern
 This function uses a non-reentrant model


 *************** function _memcpy *****************
 Defined at:
		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memcpy.c"
 Parameters:    Size  Location     Type
  d1              2    0[BANK0 ] PTR void 
		 -> PixelFrames(128), 
  s1              2    2[BANK0 ] PTR const void 
		 -> PixelPattern(120), 
  n               2    4[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  s               2    8[BANK0 ] PTR const unsigned char 
		 -> PixelPattern(120), 
  d               2    6[BANK0 ] PTR unsigned char 
		 -> PixelFrames(128), 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] PTR void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       6       0       0
      Locals:         0       4       0       0
      Temps:          0       0       0       0
      Totals:         0      10       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_DotStar_Show
 This function uses a non-reentrant model


 *************** function _SPI32_TransmitFrames *****************
 Defined at:
		line 229 in file "SPI32_ControlService.c"
 Parameters:    Size  Location     Type
  framePointer    2   32[BANK0 ] PTR unsigned long 
		 -> OffFrames(128), PixelFrames(128), 
  numFrames       1   34[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  transmitEven    3   35[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       3       0       0
      Temps:          0       0       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		_PostSPI32ControlService
 This function is called by:
		_DotStar_Show
		_DotStar_Off
 This function uses a non-reentrant model


 *************** function _PostPatternControlService *****************
 Defined at:
		line 135 in file "Pattern_ControlService.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   29[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_ES_PostToService
 This function is called by:
		_RunPatternControlService
		_ES_Timer_Tick_Resp
		_PostToList
 This function uses a non-reentrant model


 *************** function _PostSPI32ControlService *****************
 Defined at:
		line 117 in file "SPI32_ControlService.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   29[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_ES_PostToService
 This function is called by:
		_SPI32_TransmitFrames
		_ES_Timer_Tick_Resp
		_PostToList
 This function uses a non-reentrant model


 *************** function _PausePattern *****************
 Defined at:
		line 293 in file "Pattern_ControlService.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_ES_Timer_StopTimer
 This function is called by:
		_RunPatternControlService
 This function uses a non-reentrant model


 *************** function _ES_Timer_StopTimer *****************
 Defined at:
		line 205 in file "ES_Timers.c"
 Parameters:    Size  Location     Type
  Num             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  Num             1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E15473
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       4       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_StopPattern
		_PausePattern
 This function uses a non-reentrant model


 *************** function _ES_DeQueue *****************
 Defined at:
		line 164 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          2   12[BANK0 ] PTR struct ES_Event_t
		 -> Queue1(12), Queue0(12), 
  pReturnEvent    2   14[BANK0 ] PTR struct ES_Event_t
		 -> ES_Run@ThisEvent(3), ES_RecallEvents@RecalledEvent(3), 
 Auto vars:     Size  Location     Type
  pThisQueue      2   20[BANK0 ] PTR struct .
		 -> Queue1(12), Queue0(12), 
  NumLeft         1   19[BANK0 ] unsigned char 
  SaveCrit        1   18[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       4       0       0
      Temps:          0       2       0       0
      Totals:         0      10       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		___lbmod
		___wmul
 This function is called by:
		_ES_Run
		_ES_RecallEvents
 This function uses a non-reentrant model


 *************** function ___lbmod *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lbmod.c"
 Parameters:    Size  Location     Type
  dividend        1    wreg     unsigned char 
  divisor         1    0[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  dividend        1    1[BANK0 ] unsigned char 
  rem             1    3[BANK0 ] unsigned char 
  counter         1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       3       0       0
      Temps:          0       0       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ES_DeQueue
		_UpdatePattern
 This function uses a non-reentrant model


 *************** function _ES_CheckUserEvents *****************
 Defined at:
		line 46 in file "ES_CheckEvents.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_Check4Keystroke
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _Check4Keystroke *****************
 Defined at:
		line 62 in file "EventCheckers.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ES_CheckUserEvents
 This function uses a non-reentrant model


 *************** function _ES_Initialize *****************
 Defined at:
		line 242 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
  NewRate         2   33[BANK0 ] enum E15424
 Auto vars:     Size  Location     Type
  i               1   35[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E15495
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		_ES_InitQueue
		_ES_Timer_Init
		_InitPatternControlService
		_InitSPI32ControlService
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _InitPatternControlService *****************
 Defined at:
		line 97 in file "Pattern_ControlService.c"
 Parameters:    Size  Location     Type
  Priority        1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  Priority        1   32[BANK0 ] unsigned char 
  ThisEvent       3   29[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       4       0       0
      Temps:          0       0       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_DotStar_Init
		_ES_PostToService
		_SetupPattern
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function _InitSPI32ControlService *****************
 Defined at:
		line 80 in file "SPI32_ControlService.c"
 Parameters:    Size  Location     Type
  Priority        1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  Priority        1   32[BANK0 ] unsigned char 
  ThisEvent       3   29[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       4       0       0
      Temps:          0       0       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_ES_PostToService
		_SPI32_Init
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function _SPI32_Init *****************
 Defined at:
		line 64 in file "SPI32_HW.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_HW_Init
 This function is called by:
		_InitSPI32ControlService
 This function uses a non-reentrant model


 *************** function _HW_Init *****************
 Defined at:
		line 117 in file "SPI32_HW.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_SPI32_Init
 This function uses a non-reentrant model


 *************** function _SetupPattern *****************
 Defined at:
		line 69 in file "Pattern_RGBPatterns.c"
 Parameters:    Size  Location     Type
  configs         2    0[BANK0 ] PTR unsigned char 
		 -> PatternConfigs(5), 
  numPixels       1    2[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_InitPatternControlService
 This function uses a non-reentrant model


 *************** function _ES_PostToService *****************
 Defined at:
		line 351 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
  WhichService    1    wreg     unsigned char 
  TheEvent        3   23[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  WhichService    1   28[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       1       0       0
      Temps:          0       2       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_ES_EnQueueFIFO
 This function is called by:
		_InitPatternControlService
		_PostPatternControlService
		_InitSPI32ControlService
		_PostSPI32ControlService
 This function uses a non-reentrant model


 *************** function _ES_EnQueueFIFO *****************
 Defined at:
		line 85 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          2   12[BANK0 ] PTR struct ES_Event_t
		 -> Queue1(12), Queue0(12), 
  Event2Add       3   14[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  pThisQueue      2   21[BANK0 ] PTR struct .
		 -> Queue1(12), Queue0(12), 
  SaveCrit        1   20[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       5       0       0
      Locals:         0       3       0       0
      Temps:          0       3       0       0
      Totals:         0      11       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		___awmod
		___wmul
 This function is called by:
		_ES_PostToService
		_ES_PostAll
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    6[BANK0 ] unsigned int 
  multiplicand    2    8[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  product         2   10[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  2    6[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       2       0       0
      Temps:          0       0       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ES_EnQueueFIFO
		_ES_DeQueue
		i2_ES_EnQueueFIFO
		_ES_EnQueueLIFO
 This function uses a non-reentrant model


 *************** function ___awmod *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
 Parameters:    Size  Location     Type
  dividend        2    0[BANK0 ] int 
  divisor         2    2[BANK0 ] int 
 Auto vars:     Size  Location     Type
  sign            1    5[BANK0 ] unsigned char 
  counter         1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       2       0       0
      Temps:          0       0       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ES_EnQueueFIFO
		i2_ES_EnQueueFIFO
 This function uses a non-reentrant model


 *************** function _DotStar_Init *****************
 Defined at:
		line 41 in file "Pattern_DotStarLED.c"
 Parameters:    Size  Location     Type
  numPixels       1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  numPixels       1    2[BANK0 ] unsigned char 
  i               1    3[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       2       0       0
      Temps:          0       2       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_InitPatternControlService
 This function uses a non-reentrant model


 *************** function _ES_Timer_Init *****************
 Defined at:
		line 130 in file "ES_Timers.c"
 Parameters:    Size  Location     Type
  Rate            2    2[BANK0 ] enum E15424
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		__HW_Timer_Init
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function __HW_Timer_Init *****************
 Defined at:
		line 71 in file "ES_Port.c"
 Parameters:    Size  Location     Type
  Rate            2    0[BANK0 ] enum E15412
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ES_Timer_Init
 This function uses a non-reentrant model


 *************** function _ES_InitQueue *****************
 Defined at:
		line 58 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          2    0[BANK0 ] PTR struct ES_Event_t
		 -> Queue1(12), Queue0(12), 
  BlockSize       1    2[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  pThisQueue      2    3[BANK0 ] PTR struct .
		 -> Queue1(12), Queue0(12), 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       2       0       0
      Temps:          0       0       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 111 in file "ES_Port.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:         16       0       0       0
      Totals:        16       0       0       0
Total ram usage:       16 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_SPI32_EOTResponse
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model


 *************** function _SPI32_EOTResponse *****************
 Defined at:
		line 156 in file "SPI32_HW.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  EOTevent        3   32[COMRAM] struct ES_Event_t
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         3       0       0       0
      Temps:          0       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		i2_PostSPI32ControlService
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function i2_PostSPI32ControlService *****************
 Defined at:
		line 117 in file "SPI32_ControlService.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   29[COMRAM] struct ES_Event_t
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		i2_ES_PostToService
 This function is called by:
		_SPI32_EOTResponse
 This function uses a non-reentrant model


 *************** function i2_ES_PostToService *****************
 Defined at:
		line 351 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
  WhichService    1    wreg     unsigned char 
  TheEvent        3   23[COMRAM] struct ES_Event_t
 Auto vars:     Size  Location     Type
  WhichService    1   28[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         1       0       0       0
      Temps:          2       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		i2_ES_EnQueueFIFO
 This function is called by:
		i2_PostSPI32ControlService
 This function uses a non-reentrant model


 *************** function i2_ES_EnQueueFIFO *****************
 Defined at:
		line 85 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          2   12[COMRAM] PTR struct ES_Event_t
		 -> Queue1(12), Queue0(12), 
  Event2Add       3   14[COMRAM] struct ES_Event_t
 Auto vars:     Size  Location     Type
  ES_EnQueueFI    2   21[COMRAM] PTR struct .
		 -> Queue1(12), Queue0(12), 
  ES_EnQueueFI    1   20[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         5       0       0       0
      Locals:         3       0       0       0
      Temps:          3       0       0       0
      Totals:        11       0       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i2___awmod
		i2___wmul
 This function is called by:
		i2_ES_PostToService
 This function uses a non-reentrant model


 *************** function i2___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    6[COMRAM] unsigned int 
  multiplicand    2    8[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  __wmul          2   10[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  2    6[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		i2_ES_EnQueueFIFO
 This function uses a non-reentrant model


 *************** function i2___awmod *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
 Parameters:    Size  Location     Type
  dividend        2    0[COMRAM] int 
  divisor         2    2[COMRAM] int 
 Auto vars:     Size  Location     Type
  __awmod         1    5[COMRAM] unsigned char 
  __awmod         1    4[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2    0[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		i2_ES_EnQueueFIFO
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
ES_Queue.c
		_ES_EnQueueFIFO		CODE           	0A50	0000	227
		_ES_DeQueue    		CODE           	0536	0000	297
		_ES_InitQueue  		CODE           	151E	0000	61

ES_Queue.c estimated size: 585

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memcpy.c
		_memcpy        		CODE           	1404	0000	75

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memcpy.c estimated size: 75

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c
		___awmod       		CODE           	0EC4	0000	163

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c estimated size: 163

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\putch.c
		_putch         		CODE           	1804	0000	3

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\putch.c estimated size: 3

ES_CheckEvents.c
		_ES_CheckUserEvents		CODE           	144E	0000	75

ES_CheckEvents.c estimated size: 75

Pattern_DotStarLED.c
		_DotStar_Off   		CODE           	1712	0000	29
		_DotStar_Init  		CODE           	0B32	0000	209
		_DotStar_Show  		CODE           	14DC	0000	67

Pattern_DotStarLED.c estimated size: 305

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\llmod.c
		___llmod       		CODE           	0F66	0000	155

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\llmod.c estimated size: 155

Pattern_RGBPatterns.c
		_ResetPattern  		CODE           	17E4	0000	9
		_SetupPattern  		CODE           	17BE	0000	15
		_UpdatePattern 		CODE           	03BE	0000	377

Pattern_RGBPatterns.c estimated size: 401

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c
		___wmul        		CODE           	1594	0000	55

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c estimated size: 55

ES_LookupTables.c
		_ES_GetMSBitSet		CODE           	0E20	0000	165

ES_LookupTables.c estimated size: 165

SPI32_ControlService.c
		_PostSPI32ControlService		CODE           	172E	0000	29
		_GetNextFrame  		CODE           	16B0	0000	37
		_InitSPI32ControlService		CODE           	155A	0000	59
		_RunSPI32ControlService		CODE           	0774	0000	253
		_SPI32_TransmitFrames		CODE           	1632	0000	51

SPI32_ControlService.c estimated size: 429

EventCheckers.c
		_Check4Keystroke		CODE           	1800	0000	5

EventCheckers.c estimated size: 5

ES_Framework.c
		_ES_PostToService		CODE           	1214	0000	119
		_ES_Run        		CODE           	0870	0000	245
		_ES_Initialize 		CODE           	0964	0000	237

ES_Framework.c estimated size: 601

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul32.c
		___lmul        		CODE           	119E	0000	119

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul32.c estimated size: 119

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lbmod.c
		___lbmod       		CODE           	1498	0000	69

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lbmod.c estimated size: 69

SPI32_HW.c
		_SPI32_EOTResponse		CODE           	1792	0000	23
		_SPI32_Init    		CODE           	17F4	0000	7
		_SPI32_SendByte		CODE           	17DA	0000	11
		_HW_Init       		CODE           	16D4	0000	35

SPI32_HW.c estimated size: 76

shared
		_BitNum2SetMask		SMALLCONST     	0301	0000	33
		_DistList00    		SMALLCONST     	0360	0000	5
		i2_ES_EnQueueFIFO		CODE           	0CC6	0000	181
		_ES_EventList  		SMALLCONST     	035E	0000	3
		i2___wmul      		CODE           	168A	0000	39
		i2_ES_PostToService		CODE           	12FA	0000	107
		_Nybble2MSBitNum		SMALLCONST     	0341	0000	16
		_EventQueues   		SMALLCONST     	0358	0000	7
		__initialization		CODE           	1000	0000	131
		i2___awmod     		CODE           	128A	0000	113
		_Timer2PostFunc		SMALLCONST     	0321	0000	33
		_ServDescList  		SMALLCONST     	0350	0000	9
		i2_PostSPI32ControlService		CODE           	17A8	0000	23

shared estimated size: 700

Pattern_ControlService.c
		_InitPatternControlService		CODE           	1364	0000	83
		_ShowPattern   		CODE           	1664	0000	39
		_RunPatternControlService		CODE           	0C02	0000	197
		_PostPatternControlService		CODE           	177C	0000	23
		_PausePattern  		CODE           	17EC	0000	9
		_StopPattern   		CODE           	16F6	0000	29

Pattern_ControlService.c estimated size: 380

ES_Port.c
		_ISR           		CODE           	0008	0000	181
		__HW_Process_Pending_Ints		CODE           	1766	0000	23
		__HW_Timer_Init		CODE           	174A	0000	29

ES_Port.c estimated size: 233

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c
		_printf        		CODE           	15FE	0000	53

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c estimated size: 53

ES_Timers.c
		_ES_Timer_Init 		CODE           	17CC	0000	15
		_ES_Timer_InitTimer		CODE           	111E	0000	129
		_ES_Timer_StopTimer		CODE           	13B6	0000	79
		_ES_Timer_Tick_Resp		CODE           	065E	0000	279

ES_Timers.c estimated size: 502

main.c
		_main          		CODE           	1090	0000	143

main.c estimated size: 143

