Microchip MPLAB XC8 Compiler V1.38 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v1.38\dat\en_msgs.txt -cs \
  -h+dist/default/production\DotStar_Pattern_Control.production.sym \
  --cmf=dist/default/production\DotStar_Pattern_Control.production.cmf -z \
  -Q18F2480 -oC:\Users\Luke\AppData\Local\Temp\s5e4.2 \
  -Mdist/default/production/DotStar_Pattern_Control.production.map -E1 \
  -ver=XC8 -ASTACK=02F4h-02ffh -pstack=STACK -ACODE=00h-03FFFh \
  -ACONST=00h-03FFFh -ASMALLCONST=0300h-03FFhx61 -AMEDIUMCONST=0300h-03FFFh \
  -ACOMRAM=01h-05Fh -AABS1=00h-02FFh -ABIGRAM=01h-02FFh \
  -ARAM=060h-0FFh,0100h-01FFhx2 -ABANK0=060h-0FFh -ABANK1=0100h-01FFh \
  -ABANK2=0200h-02FFh -ASFR=0D00h-0DFFhx2,0F00h-0F5Fh,0F60h-0FFFh \
  -preset_vec=00h,intcode=08h,intcodelo,powerup,init,end_init \
  -pramtop=0300h -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST \
  -pconst=CONST -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\Luke\AppData\Local\Temp\s5e4.obj \
  dist/default/production\DotStar_Pattern_Control.production.obj 

Object code version is 3.11

Machine type is 18F2480

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\Luke\AppData\Local\Temp\s5e4.obj
                end_init                             16       16        4        4       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production\DotStar_Pattern_Control.production.obj
                intcode                               8        8        E        4       0
                temp                                 50       50        1        1       1
                smallconst                          300      300       BE      180       0
                text52                             19F8     19F8       70      1DF       0
                text51                             1E7E     1E7E       26      1DF       0
                text50                             1434     1434       B4      1DF       0
                text49                             1A68     1A68       6A      1DF       0
                text48                             1F44     1F44       16      1DF       0
                text47                             1BC8     1BC8       4E      1DF       0
                text46                             1D5A     1D5A       3A      1DF       0
                intcode_body                       1596     1596       A6      1DF       0
                text44                             1CE4     1CE4       3C      1DF       0
                text43                             1EE2     1EE2       1C      1DF       0
                text42                             1F68     1F68        E      1DF       0
                text41                             14E8     14E8       AE      1DF       0
                text40                             16E0     16E0       A2      1DF       0
                text39                             1D94     1D94       36      1DF       0
                text38                             11CC     11CC       E2      1DF       0
                text37                             1982     1982       76      1DF       0
                text36                             1F5A     1F5A        E      1DF       0
                text35                             1EA4     1EA4       22      1DF       0
                text34                             1F8C     1F8C        6      1DF       0
                text33                             1D20     1D20       3A      1DF       0
                text32                             1AD2     1AD2       56      1DF       0
                text31                             10E0     10E0       EC      1DF       0
                text30                             1F92     1F92        4      1DF       0
                text29                             1C16     1C16       4A      1DF       0
                text28                             1C60     1C60       44      1DF       0
                text27                              B82      B82      128      1DF       0
                text26                             1B7A     1B7A       4E      1DF       0
                text25                             1F7E     1F7E        8      1DF       0
                text24                             190A     190A       78      1DF       0
                text23                              3BE      3BE      458      1DF       0
                text22                             1EC6     1EC6       1C      1DF       0
                text21                             1F2E     1F2E       16      1DF       0
                text20                             1DFE     1DFE       32      1DF       0
                text19                              CAA      CAA      126      1DF       0
                text18                             1812     1812       80      1DF       0
                text17                             1376     1376       BE      1DF       0
                text16                              816      816      214      1DF       0
                text15                              A2A      A2A      158      1DF       0
                text14                             1E58     1E58       26      1DF       0
                text13                             1CA4     1CA4       40      1DF       0
                text12                             1F76     1F76        8      1DF       0
                text11                             1E30     1E30       28      1DF       0
                text10                             1EFE     1EFE       1A      1DF       0
                text9                              1B28     1B28       52      1DF       0
                text8                               EE6      EE6      106      1DF       0
                text7                              12AE     12AE       C8      1DF       0
                text6                              163C     163C       A4      1DF       0
                text5                               DD0      DD0      116      1DF       0
                text4                              1F18     1F18       16      1DF       0
                text3                               FEC      FEC       F4      1DF       0
                text2                              1F96     1F96        2      1DF       0
                text1                              1DCA     1DCA       34      1DF       0
                text0                              1782     1782       90      1DF       0
                cstackCOMRAM                          1        1       33        1       1
                cstackBANK0                          60       60       6D       60       1
                bssBIGRAM                           1B8      1B8      13C      1B8       1
                bssBANK1                            100      100       B8      100       1
                dataBANK0                            F9       F9        6       60       1
                bssBANK0                             CD       CD       2C       60       1
                dataCOMRAM                           4F       4F        1        1       1
                bssCOMRAM                            34       34       1B        1       1
                cinit                              1892     1892       78      1DF       0
                idataBANK0                         1F86     1F86        6      1DF       0
                idataCOMRAM                        1F98     1F98        1      1DF       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             16       16        4         0
                intcode                               8        8        E         0
                reset_vec                             0        0        4         0
                text52                             19F8     19F8       70         0
                text51                             1E7E     1E7E       26         0
                text50                             1434     1434       B4         0
                text49                             1A68     1A68       6A         0
                text48                             1F44     1F44       16         0
                text47                             1BC8     1BC8       4E         0
                text46                             1D5A     1D5A       3A         0
                intcode_body                       1596     1596       A6         0
                text44                             1CE4     1CE4       3C         0
                text43                             1EE2     1EE2       1C         0
                text42                             1F68     1F68        E         0
                text41                             14E8     14E8       AE         0
                text40                             16E0     16E0       A2         0
                text39                             1D94     1D94       36         0
                text38                             11CC     11CC       E2         0
                text37                             1982     1982       76         0
                text36                             1F5A     1F5A        E         0
                text35                             1EA4     1EA4       22         0
                text34                             1F8C     1F8C        6         0
                text33                             1D20     1D20       3A         0
                text32                             1AD2     1AD2       56         0
                text31                             10E0     10E0       EC         0
                text30                             1F92     1F92        4         0
                text29                             1C16     1C16       4A         0
                text28                             1C60     1C60       44         0
                text27                              B82      B82      128         0
                text26                             1B7A     1B7A       4E         0
                text25                             1F7E     1F7E        8         0
                text24                             190A     190A       78         0
                text23                              3BE      3BE      458         0
                text22                             1EC6     1EC6       1C         0
                text21                             1F2E     1F2E       16         0
                text20                             1DFE     1DFE       32         0
                text19                              CAA      CAA      126         0
                text18                             1812     1812       80         0
                text17                             1376     1376       BE         0
                text16                              816      816      214         0
                text15                              A2A      A2A      158         0
                text14                             1E58     1E58       26         0
                text13                             1CA4     1CA4       40         0
                text12                             1F76     1F76        8         0
                text11                             1E30     1E30       28         0
                text10                             1EFE     1EFE       1A         0
                text9                              1B28     1B28       52         0
                text8                               EE6      EE6      106         0
                text7                              12AE     12AE       C8         0
                text6                              163C     163C       A4         0
                text5                               DD0      DD0      116         0
                text4                              1F18     1F18       16         0
                text3                               FEC      FEC       F4         0
                text2                              1F96     1F96        2         0
                text1                              1DCA     1DCA       34         0
                text0                              1782     1782       90         0
                cinit                              1892     1892       78         0
                idataBANK0                         1F86     1F86        6         0
                idataCOMRAM                        1F98     1F98        1         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                          300      300       BE         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                temp                                 50       50        1         1
                cstackCOMRAM                          1        1       33         1
                dataCOMRAM                           4F       4F        1         1
                bssCOMRAM                            34       34       1B         1

        CLASS   ABS1           

        CLASS   BIGRAM         
                bssBIGRAM                           1B8      1B8      13C         1

        CLASS   RAM            

        CLASS   BANK0          
                cstackBANK0                          60       60       6D         1
                dataBANK0                            F9       F9        6         1
                bssBANK0                             CD       CD       2C         1

        CLASS   BANK1          
                bssBANK1                            100      100       B8         1

        CLASS   BANK2          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  000050  000051         1       1  COMRAM  
                intcode                        000008  000012  00001A         4       0  CODE    
                cstackBANK0                    000060  00009F  0000FF        60       1  BANK0   
                bssBANK1                       000100  0000B8  0001B8       100       1  BANK1   
                bssBIGRAM                      0001B8  00013C  0002F4       1B8       1  BIGRAM  
                smallconst                     000300  0000BE  0003BE       180       0  SMALLCON
                text23                         0003BE  001BDB  001F99       1DF       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0000FF-0000FF                1
        BANK2            0002F4-0002FF                C
        BIGRAM           000051-00005F                F
                         0000FF-0000FF                1
                         0002F4-0002FF                C
        CODE             000004-000007                4
                         00001A-0002FF              2E6
                         001F99-003FFF             2067
        COMRAM           000051-00005F                F
        CONST            000004-000007                4
                         00001A-0002FF              2E6
                         001F99-003FFF             2067
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      001F99-003FFF             2067
        RAM              0000FF-0000FF                1
                         0002F4-0002FF                C
        SFR              000D00-000FFF              100
        SMALLCONST       001F99-003FFF              100
        STACK            0002F4-0002FF                C

                                  Symbol Table

?_GetNextFrame                       cstackBANK0  000060
?_PatternOff                         cstackBANK0  000060
?_RunPatternControlService           cstackBANK0  0000BA
?_RunSPI32ControlService             cstackBANK0  0000BA
?_ThinkingPattern                    cstackBANK0  000068
?_UpdatePattern                      cstackBANK0  000080
?___awdiv                            cstackBANK0  000060
?___awmod                            cstackBANK0  000060
?___lwdiv                            cstackBANK0  00006C
?___wmul                             cstackBANK0  000066
?_printf                             cstackBANK0  000060
?i2___awmod                          cstackCOMRAM 000001
?i2___wmul                           cstackCOMRAM 000007
DotStar_Init@brightness              cstackBANK0  000060
DotStar_Init@numPixels               cstackBANK0  000063
DotStar_Show@i                       cstackBANK0  0000B9
DotStar_Show@patternPointer          cstackBANK0  0000A5
ES_CheckUserEvents@i                 cstackBANK0  000060
ES_DeQueue@NumLeft                   cstackBANK0  000073
ES_DeQueue@SaveCrit                  cstackBANK0  000072
ES_DeQueue@pBlock                    cstackBANK0  00006C
ES_DeQueue@pReturnEvent              cstackBANK0  00006E
ES_DeQueue@pThisQueue                cstackBANK0  000074
ES_EnQueueFIFO@Event2Add             cstackBANK0  00006E
ES_EnQueueFIFO@SaveCrit              cstackBANK0  000074
ES_EnQueueFIFO@pBlock                cstackBANK0  00006C
ES_EnQueueFIFO@pThisQueue            cstackBANK0  000075
ES_GetMSBitSet@LoopCntr              cstackBANK0  000069
ES_GetMSBitSet@Nybble2Test           cstackBANK0  000068
ES_GetMSBitSet@ReturnVal             cstackBANK0  000067
ES_GetMSBitSet@Val2Check             cstackBANK0  000060
ES_InitQueue@BlockSize               cstackBANK0  000062
ES_InitQueue@pBlock                  cstackBANK0  000060
ES_InitQueue@pThisQueue              cstackBANK0  000063
ES_Initialize@NewRate                cstackBANK0  000081
ES_Initialize@i                      cstackBANK0  000083
ES_PostToService@TheEvent            cstackBANK0  000077
ES_PostToService@WhichService        cstackBANK0  00007C
ES_Run@HighestPrior                  cstackBANK0  0000CB
ES_Run@ThisEvent                     bssBANK0     0000F5
ES_Timer_Init@Rate                   cstackBANK0  000062
ES_Timer_InitTimer@NewTime           cstackBANK0  000060
ES_Timer_InitTimer@Num               cstackBANK0  000064
ES_Timer_StopTimer@Num               cstackBANK0  000064
ES_Timer_Tick_Resp@NeedsProcessing   bssBANK0     0000D4
ES_Timer_Tick_Resp@NewEvent          bssBANK0     0000D1
ES_Timer_Tick_Resp@NextTimer2Process bssBANK0     0000DE
HSV_to_RGB@HSV_Value                 cstackBANK0  000073
HSV_to_RGB@b                         cstackBANK0  000097
HSV_to_RGB@fpart                     cstackBANK0  000091
HSV_to_RGB@g                         cstackBANK0  000095
HSV_to_RGB@h                         cstackBANK0  00008D
HSV_to_RGB@p                         cstackBANK0  0000A1
HSV_to_RGB@q                         cstackBANK0  000099
HSV_to_RGB@r                         cstackBANK0  000093
HSV_to_RGB@region                    cstackBANK0  00008F
HSV_to_RGB@s                         cstackBANK0  00009F
HSV_to_RGB@t                         cstackBANK0  00009B
HSV_to_RGB@v                         cstackBANK0  0000A3
ISR@LastTime                         bssCOMRAM    000038
ISR@NextTime                         bssCOMRAM    00003A
InitPatternControlService@Priority   cstackBANK0  000080
InitPatternControlService@ThisEvent  cstackBANK0  00007D
InitSPI32ControlService@Priority     cstackBANK0  000080
InitSPI32ControlService@ThisEvent    cstackBANK0  00007D
PatternOff@i                         cstackBANK0  000062
Pattern_RGBPatterns@Length           bssBANK0     0000DF
Pattern_RGBPatterns@PatternConfigs   bssBANK0     0000D6
PostPatternControlService@ThisEvent  cstackBANK0  00007D
PostSPI32ControlService@ThisEvent    cstackBANK0  00007D
RunPatternControlService@ReturnEvent cstackBANK0  0000BD
RunPatternControlService@ThisEvent   cstackBANK0  0000BA
RunPatternControlService@testEvent   cstackBANK0  0000C0
RunSPI32ControlService@ReturnEvent   cstackBANK0  0000C4
RunSPI32ControlService@ThisEvent     cstackBANK0  0000BA
SPI32_ControlService@CurrentState    bssBANK0     0000E0
SPI32_ControlService@MyPriority      bssBANK0     0000E1
SPI32_EOTResponse@EOTevent           cstackCOMRAM 000021
SPI32_SendFrame@newFrame             cstackBANK0  000060
SPI32_TransmitFrames@framePointer    cstackBANK0  000080
SPI32_TransmitFrames@numFrames       cstackBANK0  000082
SPI32_TransmitFrames@transmitEvent   cstackBANK0  000083
SetupPattern@configs                 cstackBANK0  000060
SetupPattern@numPixels               cstackBANK0  000062
ThinkingPattern@head                 cstackBANK0  00007F
ThinkingPattern@hue                  cstackBANK0  000075
ThinkingPattern@pixel                cstackBANK0  000068
ThinkingPattern@pixelHSV             cstackBANK0  000076
ThinkingPattern@sat                  cstackBANK0  00007C
ThinkingPattern@stepCount            cstackBANK0  000069
ThinkingPattern@val                  cstackBANK0  00007D
ThinkingPattern@x                    cstackBANK0  00007E
UpdatePattern@i                      cstackBANK0  000083
UpdatePattern@i_653                  cstackBANK0  000084
UpdatePattern@patternID              cstackBANK0  000082
_ADCON1                              (abs)        000FC1
_BitNum2SetMask                      smallconst   000301
_Brightness                          bssBANK0     0000F8
_CCP1CON                             (abs)        000FBD
_CCP1IF                              (abs)        007CF2
_CCPR1H                              (abs)        000FBF
_CCPR1L                              (abs)        000FBE
_Check4Keystroke                     text30       001F92
_CurrentFrame                        bssBANK0     0000CD
_CurrentState                        bssBANK0     0000E2
_DistList00                          smallconst   000360
_DotStar_Init                        text41       0014E8
_DotStar_Show                        text19       000CAA
_ES_CheckUserEvents                  text29       001C16
_ES_DeQueue                          text27       000B82
_ES_EnQueueFIFO                      text38       0011CC
_ES_EventList                        smallconst   00035E
_ES_GetMSBitSet                      text6        00163C
_ES_InitQueue                        text44       001CE4
_ES_Initialize                       text31       0010E0
_ES_PostToService                    text37       001982
_ES_Run                              text3        000FEC
_ES_Timer_Init                       text42       001F68
_ES_Timer_InitTimer                  text18       001812
_ES_Timer_StopTimer                  text26       001B7A
_ES_Timer_Tick_Resp                  text5        000DD0
_EventQueues                         smallconst   000358
_FrameByte                           dataBANK0    0000F9
_FrameIndex                          bssBANK0     0000E3
_FramePointer                        bssBANK0     0000D8
_GIE                                 (abs)        007F97
_GetNextFrame                        text10       001EFE
_HSV_to_RGB                          text23       0003BE
_HSV_to_RGB$1433                     cstackBANK0  00009D
_HW_Init                             text35       001EA4
_INTCON                              (abs)        000FF2
_IRCF0                               (abs)        007E9C
_IRCF1                               (abs)        007E9D
_IRCF2                               (abs)        007E9E
_ISR                                 intcode      000008
_InitPatternControlService           text32       001AD2
_InitSPI32ControlService             text33       001D20
_LATC                                (abs)        000F8B
_Length                              bssBANK0     0000E4
_MyPriority                          bssBANK0     0000E5
_NumFrames                           bssBANK0     0000E6
_Nybble2MSBitNum                     smallconst   000341
_PIE1                                (abs)        000F9D
_PORTC                               (abs)        000F82
_PatternConfigs                      dataBANK0    0000FA
_PatternOff                          text13       001CA4
_PatternStepCounter                  bssBANK0     0000E7
_PausePattern                        text25       001F7E
_PixelFrames                         bssBIGRAM    0001B8
_PixelPattern                        bssBANK1     000120
_PostPatternControlService           text21       001F2E
_PostSPI32ControlService             text22       001EC6
_PostSPI32ControlService$intlevel0   text22       001ECC
_Queue0                              bssBANK0     0000E9
_Queue1                              bssCOMRAM    000043
_Ready                               bssBANK0     0000DA
_ResetPattern                        text12       001F76
_RunPatternControlService            text7        0012AE
_RunSPI32ControlService              text8        000EE6
_SCS1                                (abs)        007E99
_SPI32_EOTResponse                   text46       001D5A
_SPI32_Init                          text34       001F8C
_SPI32_SendFrame                     text9        001B28
_SPI32_TransmitFrames                text20       001DFE
_SSPADD                              (abs)        000FC8
_SSPBUF                              (abs)        000FC9
_SSPCON1                             (abs)        000FC6
_SSPIE                               (abs)        007CEB
_SSPIF                               (abs)        007CF3
_SSPSTAT                             (abs)        000FC7
_ServDescList                        smallconst   000350
_SetupPattern                        text36       001F5A
_ShowPattern                         text14       001E58
_StopPattern                         text11       001E30
_SysTickCounter                      bssCOMRAM    00003C
_T1CON                               (abs)        000FCD
_TMR_ActiveFlags                     bssBANK0     0000DC
_TMR_TimerArray                      bssBANK1     000100
_TRISC                               (abs)        000F94
_ThinkingPattern                     text16       000816
_ThinkingPattern$665                 cstackBANK0  000078
_ThinkingPattern$666                 cstackBANK0  00007A
_TickCount                           bssBANK0     0000E8
_Timer2PostFunc                      smallconst   000321
_TransmitFrame                       bssCOMRAM    000034
_UpdatePattern                       text15       000A2A
__CFG_BOREN$OFF                      (abs)        000000
__CFG_MCLRE$ON                       (abs)        000000
__CFG_OSC$IRCIO67                    (abs)        000000
__CFG_PBADEN$OFF                     (abs)        000000
__CFG_PWRT$OFF                       (abs)        000000
__CFG_WDT$OFF                        (abs)        000000
__HRAM                               (abs)        000000
__HW_Process_Pending_Ints            text4        001F18
__HW_Timer_Init                      text43       001EE2
__HW_Timer_Init@Rate                 cstackBANK0  000060
__Habs1                              abs1         000000
__Hbank0                             bank0        000000
__Hbank1                             bank1        000000
__Hbank2                             bank2        000000
__Hbigbss                            bigbss       000000
__Hbigdata                           bigdata      000000
__Hbigram                            bigram       000000
__Hbss                               bss          000000
__HbssBANK0                          bssBANK0     000000
__HbssBANK1                          bssBANK1     000000
__HbssBIGRAM                         bssBIGRAM    000000
__HbssCOMRAM                         bssCOMRAM    000000
__Hcinit                             cinit        000000
__Hclrtext                           clrtext      000000
__Hcomram                            comram       000000
__Hconfig                            config       30000E
__Hconst                             const        000000
__HcstackBANK0                       cstackBANK0  000000
__HcstackCOMRAM                      cstackCOMRAM 000000
__Hdata                              data         000000
__HdataBANK0                         dataBANK0    000000
__HdataCOMRAM                        dataCOMRAM   000000
__Heeprom_data                       eeprom_data  000000
__Hend_init                          end_init     00001A
__Hfarbss                            farbss       000000
__Hfardata                           fardata      000000
__Hibigdata                          ibigdata     000000
__Hidata                             idata        000000
__HidataBANK0                        idataBANK0   000000
__HidataCOMRAM                       idataCOMRAM  000000
__Hidloc                             idloc        200008
__Hifardata                          ifardata     000000
__Hinit                              init         000016
__Hintcode                           intcode      000016
__Hintcode_body                      intcode_body 000000
__Hintcodelo                         intcodelo    000016
__Hintentry                          intentry     000000
__Hintret                            intret       000000
__Hintsave_regs                      intsave_regs 000000
__Hirdata                            irdata       000000
__Hmediumconst                       mediumconst  000000
__HnvFARRAM                          nvFARRAM     000000
__Hnvbit                             nvbit        000000
__Hnvrram                            nvrram       000000
__Hparam                             rparam       000000
__Hpowerup                           powerup      000016
__Hram                               ram          000000
__Hramtop                            ramtop       000300
__Hrbit                              rbit         000000
__Hrbss                              rbss         000000
__Hrdata                             rdata        000000
__Hreset_vec                         reset_vec    000004
__Hrparam                            rparam       000000
__Hsfr                               sfr          000000
__Hsmallconst                        smallconst   0003BE
__Hspace_0                           (abs)        30000E
__Hspace_1                           (abs)        0002F4
__Hspace_2                           (abs)        000000
__Hstack                             stack        000000
__Hstruct                            struct       000000
__Htemp                              temp         000051
__Htext                              text         000000
__Htext0                             text0        000000
__Htext1                             text1        000000
__Htext10                            text10       000000
__Htext11                            text11       000000
__Htext12                            text12       000000
__Htext13                            text13       000000
__Htext14                            text14       000000
__Htext15                            text15       000000
__Htext16                            text16       000000
__Htext17                            text17       000000
__Htext18                            text18       000000
__Htext19                            text19       000000
__Htext2                             text2        000000
__Htext20                            text20       000000
__Htext21                            text21       000000
__Htext22                            text22       000000
__Htext23                            text23       000000
__Htext24                            text24       000000
__Htext25                            text25       000000
__Htext26                            text26       000000
__Htext27                            text27       000000
__Htext28                            text28       000000
__Htext29                            text29       000000
__Htext3                             text3        000000
__Htext30                            text30       000000
__Htext31                            text31       000000
__Htext32                            text32       000000
__Htext33                            text33       000000
__Htext34                            text34       000000
__Htext35                            text35       000000
__Htext36                            text36       000000
__Htext37                            text37       000000
__Htext38                            text38       000000
__Htext39                            text39       000000
__Htext4                             text4        000000
__Htext40                            text40       000000
__Htext41                            text41       000000
__Htext42                            text42       000000
__Htext43                            text43       000000
__Htext44                            text44       000000
__Htext46                            text46       000000
__Htext47                            text47       000000
__Htext48                            text48       000000
__Htext49                            text49       000000
__Htext5                             text5        000000
__Htext50                            text50       000000
__Htext51                            text51       000000
__Htext52                            text52       000000
__Htext53                            text53       000000
__Htext6                             text6        000000
__Htext7                             text7        000000
__Htext8                             text8        000000
__Htext9                             text9        000000
__LRAM                               (abs)        000001
__Labs1                              abs1         000000
__Lbank0                             bank0        000000
__Lbank1                             bank1        000000
__Lbank2                             bank2        000000
__Lbigbss                            bigbss       000000
__Lbigdata                           bigdata      000000
__Lbigram                            bigram       000000
__Lbss                               bss          000000
__LbssBANK0                          bssBANK0     000000
__LbssBANK1                          bssBANK1     000000
__LbssBIGRAM                         bssBIGRAM    000000
__LbssCOMRAM                         bssCOMRAM    000000
__Lcinit                             cinit        000000
__Lclrtext                           clrtext      000000
__Lcomram                            comram       000000
__Lconfig                            config       300000
__Lconst                             const        000000
__LcstackBANK0                       cstackBANK0  000000
__LcstackCOMRAM                      cstackCOMRAM 000000
__Ldata                              data         000000
__LdataBANK0                         dataBANK0    000000
__LdataCOMRAM                        dataCOMRAM   000000
__Leeprom_data                       eeprom_data  000000
__Lend_init                          end_init     000016
__Lfarbss                            farbss       000000
__Lfardata                           fardata      000000
__Libigdata                          ibigdata     000000
__Lidata                             idata        000000
__LidataBANK0                        idataBANK0   000000
__LidataCOMRAM                       idataCOMRAM  000000
__Lidloc                             idloc        200000
__Lifardata                          ifardata     000000
__Linit                              init         000016
__Lintcode                           intcode      000008
__Lintcode_body                      intcode_body 000000
__Lintcodelo                         intcodelo    000016
__Lintentry                          intentry     000000
__Lintret                            intret       000000
__Lintsave_regs                      intsave_regs 000000
__Lirdata                            irdata       000000
__Lmediumconst                       mediumconst  000000
__LnvFARRAM                          nvFARRAM     000000
__Lnvbit                             nvbit        000000
__Lnvrram                            nvrram       000000
__Lparam                             rparam       000000
__Lpowerup                           powerup      000016
__Lram                               ram          000000
__Lramtop                            ramtop       000300
__Lrbit                              rbit         000000
__Lrbss                              rbss         000000
__Lrdata                             rdata        000000
__Lreset_vec                         reset_vec    000000
__Lrparam                            rparam       000000
__Lsfr                               sfr          000000
__Lsmallconst                        smallconst   000300
__Lspace_0                           (abs)        000000
__Lspace_1                           (abs)        000000
__Lspace_2                           (abs)        000000
__Lstack                             stack        000000
__Lstruct                            struct       000000
__Ltemp                              temp         000050
__Ltext                              text         000000
__Ltext0                             text0        000000
__Ltext1                             text1        000000
__Ltext10                            text10       000000
__Ltext11                            text11       000000
__Ltext12                            text12       000000
__Ltext13                            text13       000000
__Ltext14                            text14       000000
__Ltext15                            text15       000000
__Ltext16                            text16       000000
__Ltext17                            text17       000000
__Ltext18                            text18       000000
__Ltext19                            text19       000000
__Ltext2                             text2        000000
__Ltext20                            text20       000000
__Ltext21                            text21       000000
__Ltext22                            text22       000000
__Ltext23                            text23       000000
__Ltext24                            text24       000000
__Ltext25                            text25       000000
__Ltext26                            text26       000000
__Ltext27                            text27       000000
__Ltext28                            text28       000000
__Ltext29                            text29       000000
__Ltext3                             text3        000000
__Ltext30                            text30       000000
__Ltext31                            text31       000000
__Ltext32                            text32       000000
__Ltext33                            text33       000000
__Ltext34                            text34       000000
__Ltext35                            text35       000000
__Ltext36                            text36       000000
__Ltext37                            text37       000000
__Ltext38                            text38       000000
__Ltext39                            text39       000000
__Ltext4                             text4        000000
__Ltext40                            text40       000000
__Ltext41                            text41       000000
__Ltext42                            text42       000000
__Ltext43                            text43       000000
__Ltext44                            text44       000000
__Ltext46                            text46       000000
__Ltext47                            text47       000000
__Ltext48                            text48       000000
__Ltext49                            text49       000000
__Ltext5                             text5        000000
__Ltext50                            text50       000000
__Ltext51                            text51       000000
__Ltext52                            text52       000000
__Ltext53                            text53       000000
__Ltext6                             text6        000000
__Ltext7                             text7        000000
__Ltext8                             text8        000000
__Ltext9                             text9        000000
__PRIMASK_temp                       bssCOMRAM    000040
__S0                                 (abs)        30000E
__S1                                 (abs)        0002F4
__S2                                 (abs)        000000
___awdiv                             text17       001376
___awdiv@counter                     cstackBANK0  000064
___awdiv@dividend                    cstackBANK0  000060
___awdiv@divisor                     cstackBANK0  000062
___awdiv@quotient                    cstackBANK0  000066
___awdiv@sign                        cstackBANK0  000065
___awmod                             text40       0016E0
___awmod@counter                     cstackBANK0  000064
___awmod@dividend                    cstackBANK0  000060
___awmod@divisor                     cstackBANK0  000062
___awmod@sign                        cstackBANK0  000065
___inthi_sp                          stack        000000
___intlo_sp                          stack        000000
___lbmod                             text28       001C60
___lbmod@counter                     cstackBANK0  000062
___lbmod@dividend                    cstackBANK0  000061
___lbmod@divisor                     cstackBANK0  000060
___lbmod@rem                         cstackBANK0  000063
___lwdiv                             text24       00190A
___lwdiv@counter                     cstackBANK0  000072
___lwdiv@dividend                    cstackBANK0  00006C
___lwdiv@divisor                     cstackBANK0  00006E
___lwdiv@quotient                    cstackBANK0  000070
___param_bank                        (abs)        000010
___rparam_used                       (abs)        000001
___sp                                stack        000000
___wmul                              text39       001D94
___wmul@multiplicand                 cstackBANK0  000068
___wmul@multiplier                   cstackBANK0  000066
___wmul@product                      cstackBANK0  00006A
__accesstop                          (abs)        000060
__activetblptr                       (abs)        000002
__end_of_BitNum2SetMask              smallconst   000321
__end_of_Check4Keystroke             text30       001F96
__end_of_DistList00                  smallconst   000364
__end_of_DotStar_Init                text41       001596
__end_of_DotStar_Show                text19       000DD0
__end_of_ES_CheckUserEvents          text29       001C60
__end_of_ES_DeQueue                  text27       000CAA
__end_of_ES_EnQueueFIFO              text38       0012AE
__end_of_ES_EventList                smallconst   000360
__end_of_ES_GetMSBitSet              text6        0016E0
__end_of_ES_InitQueue                text44       001D20
__end_of_ES_Initialize               text31       0011CC
__end_of_ES_PostToService            text37       0019F8
__end_of_ES_Run                      text3        0010E0
__end_of_ES_Timer_Init               text42       001F76
__end_of_ES_Timer_InitTimer          text18       001892
__end_of_ES_Timer_StopTimer          text26       001BC8
__end_of_ES_Timer_Tick_Resp          text5        000EE6
__end_of_EventQueues                 smallconst   00035E
__end_of_GetNextFrame                text10       001F18
__end_of_HSV_to_RGB                  text23       000816
__end_of_HW_Init                     text35       001EC6
__end_of_ISR                         intcode_body 00163C
__end_of_InitPatternControlService   text32       001B28
__end_of_InitSPI32ControlService     text33       001D5A
__end_of_Nybble2MSBitNum             smallconst   000350
__end_of_PatternOff                  text13       001CE4
__end_of_PausePattern                text25       001F86
__end_of_PostPatternControlService   text21       001F44
__end_of_PostSPI32ControlService     text22       001EE2
__end_of_ResetPattern                text12       001F7E
__end_of_RunPatternControlService    text7        001376
__end_of_RunSPI32ControlService      text8        000FEC
__end_of_SPI32_EOTResponse           text46       001D94
__end_of_SPI32_Init                  text34       001F92
__end_of_SPI32_SendFrame             text9        001B7A
__end_of_SPI32_TransmitFrames        text20       001E30
__end_of_ServDescList                smallconst   000358
__end_of_SetupPattern                text36       001F68
__end_of_ShowPattern                 text14       001E7E
__end_of_StopPattern                 text11       001E58
__end_of_ThinkingPattern             text16       000A2A
__end_of_Timer2PostFunc              smallconst   000341
__end_of_UpdatePattern               text15       000B82
__end_of__HW_Process_Pending_Ints    text4        001F2E
__end_of__HW_Timer_Init              text43       001EFE
__end_of___awdiv                     text17       001434
__end_of___awmod                     text40       001782
__end_of___lbmod                     text28       001CA4
__end_of___lwdiv                     text24       001982
__end_of___wmul                      text39       001DCA
__end_of__initialization             cinit        0018FC
__end_of_main                        text0        001812
__end_of_printf                      text1        001DFE
__end_of_putch                       text2        001F98
__end_ofi2_ES_EnQueueFIFO            text50       0014E8
__end_ofi2_ES_PostToService          text49       001AD2
__end_ofi2_PostSPI32ControlService   text48       001F5A
__end_ofi2_SPI32_SendFrame           text47       001C16
__end_ofi2___awmod                   text52       001A68
__end_ofi2___wmul                    text51       001EA4
__initialization                     cinit        001892
__mediumconst                        mediumconst  000000
__pbssBANK0                          bssBANK0     0000CD
__pbssBANK1                          bssBANK1     000100
__pbssBIGRAM                         bssBIGRAM    0001B8
__pbssCOMRAM                         bssCOMRAM    000034
__pcinit                             cinit        001892
__pcstackBANK0                       cstackBANK0  000060
__pcstackCOMRAM                      cstackCOMRAM 000001
__pdataBANK0                         dataBANK0    0000F9
__pdataCOMRAM                        dataCOMRAM   00004F
__pidataBANK0                        idataBANK0   001F86
__pidataCOMRAM                       idataCOMRAM  001F98
__pintcode                           intcode      000008
__pintcode_body                      intcode_body 001596
__psmallconst                        smallconst   000300
__ptext0                             text0        001782
__ptext1                             text1        001DCA
__ptext10                            text10       001EFE
__ptext11                            text11       001E30
__ptext12                            text12       001F76
__ptext13                            text13       001CA4
__ptext14                            text14       001E58
__ptext15                            text15       000A2A
__ptext16                            text16       000816
__ptext17                            text17       001376
__ptext18                            text18       001812
__ptext19                            text19       000CAA
__ptext2                             text2        001F96
__ptext20                            text20       001DFE
__ptext21                            text21       001F2E
__ptext22                            text22       001EC6
__ptext23                            text23       0003BE
__ptext24                            text24       00190A
__ptext25                            text25       001F7E
__ptext26                            text26       001B7A
__ptext27                            text27       000B82
__ptext28                            text28       001C60
__ptext29                            text29       001C16
__ptext3                             text3        000FEC
__ptext30                            text30       001F92
__ptext31                            text31       0010E0
__ptext32                            text32       001AD2
__ptext33                            text33       001D20
__ptext34                            text34       001F8C
__ptext35                            text35       001EA4
__ptext36                            text36       001F5A
__ptext37                            text37       001982
__ptext38                            text38       0011CC
__ptext39                            text39       001D94
__ptext4                             text4        001F18
__ptext40                            text40       0016E0
__ptext41                            text41       0014E8
__ptext42                            text42       001F68
__ptext43                            text43       001EE2
__ptext44                            text44       001CE4
__ptext46                            text46       001D5A
__ptext47                            text47       001BC8
__ptext48                            text48       001F44
__ptext49                            text49       001A68
__ptext5                             text5        000DD0
__ptext50                            text50       001434
__ptext51                            text51       001E7E
__ptext52                            text52       0019F8
__ptext53                            text53       000000
__ptext6                             text6        00163C
__ptext7                             text7        0012AE
__ptext8                             text8        000EE6
__ptext9                             text9        001B28
__ramtop                             ramtop       000300
__size_of_Check4Keystroke            (abs)        000000
__size_of_DotStar_Init               (abs)        000000
__size_of_DotStar_Show               (abs)        000000
__size_of_ES_CheckUserEvents         (abs)        000000
__size_of_ES_DeQueue                 (abs)        000000
__size_of_ES_EnQueueFIFO             (abs)        000000
__size_of_ES_GetMSBitSet             (abs)        000000
__size_of_ES_InitQueue               (abs)        000000
__size_of_ES_Initialize              (abs)        000000
__size_of_ES_PostToService           (abs)        000000
__size_of_ES_Run                     (abs)        000000
__size_of_ES_Timer_Init              (abs)        000000
__size_of_ES_Timer_InitTimer         (abs)        000000
__size_of_ES_Timer_StopTimer         (abs)        000000
__size_of_ES_Timer_Tick_Resp         (abs)        000000
__size_of_GetNextFrame               (abs)        000000
__size_of_HSV_to_RGB                 (abs)        000000
__size_of_HW_Init                    (abs)        000000
__size_of_ISR                        (abs)        000000
__size_of_InitPatternControlService  (abs)        000000
__size_of_InitSPI32ControlService    (abs)        000000
__size_of_PatternOff                 (abs)        000000
__size_of_PausePattern               (abs)        000000
__size_of_PostPatternControlService  (abs)        000000
__size_of_PostSPI32ControlService    (abs)        000000
__size_of_ResetPattern               (abs)        000000
__size_of_RunPatternControlService   (abs)        000000
__size_of_RunSPI32ControlService     (abs)        000000
__size_of_SPI32_EOTResponse          (abs)        000000
__size_of_SPI32_Init                 (abs)        000000
__size_of_SPI32_SendFrame            (abs)        000000
__size_of_SPI32_TransmitFrames       (abs)        000000
__size_of_SetupPattern               (abs)        000000
__size_of_ShowPattern                (abs)        000000
__size_of_StopPattern                (abs)        000000
__size_of_ThinkingPattern            (abs)        000000
__size_of_UpdatePattern              (abs)        000000
__size_of__HW_Process_Pending_Ints   (abs)        000000
__size_of__HW_Timer_Init             (abs)        000000
__size_of___awdiv                    (abs)        000000
__size_of___awmod                    (abs)        000000
__size_of___lbmod                    (abs)        000000
__size_of___lwdiv                    (abs)        000000
__size_of___wmul                     (abs)        000000
__size_of_main                       (abs)        000000
__size_of_printf                     (abs)        000000
__size_of_putch                      (abs)        000000
__size_ofi2_ES_EnQueueFIFO           (abs)        000000
__size_ofi2_ES_PostToService         (abs)        000000
__size_ofi2_PostSPI32ControlService  (abs)        000000
__size_ofi2_SPI32_SendFrame          (abs)        000000
__size_ofi2___awmod                  (abs)        000000
__size_ofi2___wmul                   (abs)        000000
__smallconst                         smallconst   000300
_main                                text0        001782
_printf                              text1        001DCA
_putch                               text2        001F96
btemp                                temp         000050
end_of_initialization                cinit        0018FC
i2ES_EnQueueFIFO@Event2Add           cstackCOMRAM 00000F
i2ES_EnQueueFIFO@SaveCrit            cstackCOMRAM 000015
i2ES_EnQueueFIFO@pBlock              cstackCOMRAM 00000D
i2ES_EnQueueFIFO@pThisQueue          cstackCOMRAM 000016
i2ES_PostToService@TheEvent          cstackCOMRAM 000018
i2ES_PostToService@WhichService      cstackCOMRAM 00001D
i2PostSPI32ControlService@ThisEvent  cstackCOMRAM 00001E
i2SPI32_SendFrame@newFrame           cstackCOMRAM 000001
i2_ES_EnQueueFIFO                    text50       001434
i2_ES_PostToService                  text49       001A68
i2_PostSPI32ControlService           text48       001F44
i2_SPI32_SendFrame                   text47       001BC8
i2___awmod                           text52       0019F8
i2___awmod@counter                   cstackCOMRAM 000005
i2___awmod@dividend                  cstackCOMRAM 000001
i2___awmod@divisor                   cstackCOMRAM 000003
i2___awmod@sign                      cstackCOMRAM 000006
i2___wmul                            text51       001E7E
i2___wmul@multiplicand               cstackCOMRAM 000009
i2___wmul@multiplier                 cstackCOMRAM 000007
i2___wmul@product                    cstackCOMRAM 00000B
int$flags                            temp         000050
int_func                             intcode_body 001596
intlevel0                            text         000000
intlevel1                            text         000000
intlevel2                            text         000000
intlevel3                            text         000000
main@ErrorType                       cstackBANK0  0000CC
printf@ap                            cstackBANK0  000062
printf@c                             cstackBANK0  000064
printf@f                             cstackBANK0  000060
stackhi                              (abs)        0002FF
stacklo                              (abs)        0002F4
start                                init         000016
start_initialization                 cinit        001892


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 25 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  ErrorType       1  108[BANK0 ] enum E15647
 Return value:  Size  Location     Type
                  2  552[None  ] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels required when called:   15
 This function calls:
		_ES_Initialize
		_ES_Run
		_printf
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _printf *****************
 Defined at:
		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
 Parameters:    Size  Location     Type
  f               2    0[BANK0 ] PTR const unsigned char 
		 -> STR_4(15), STR_3(23), STR_2(24), STR_1(27), 
 Auto vars:     Size  Location     Type
  tmpval          4    0        struct .
  cp              3    0        PTR const unsigned char 
  ap              2    2[BANK0 ] PTR void [1]
		 -> ?_printf(2), 
  len             2    0        unsigned int 
  val             2    0        unsigned int 
  c               1    4[BANK0 ] char 
  flag            1    0        unsigned char 
  prec            1    0        char 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       3       0       0
      Temps:          0       0       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_putch
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _putch *****************
 Defined at:
		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\putch.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1    0[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_printf
 This function uses a non-reentrant model


 *************** function _ES_Run *****************
 Defined at:
		line 277 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  HighestPrior    1  107[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E15495
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       4       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   14
 This function calls:
		_ES_CheckUserEvents
		_ES_DeQueue
		_ES_GetMSBitSet
		_RunPatternControlService
		_RunSPI32ControlService
		__HW_Process_Pending_Ints
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function __HW_Process_Pending_Ints *****************
 Defined at:
		line 207 in file "ES_Port.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   11
 This function calls:
		_ES_Timer_Tick_Resp
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _ES_Timer_Tick_Resp *****************
 Defined at:
		line 284 in file "ES_Timers.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       4       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		Absolute function
		_ES_GetMSBitSet
		_PostPatternControlService
		_PostSPI32ControlService
 This function is called by:
		__HW_Process_Pending_Ints
 This function uses a non-reentrant model


 *************** function _ES_GetMSBitSet *****************
 Defined at:
		line 79 in file "ES_LookupTables.c"
 Parameters:    Size  Location     Type
  Val2Check       2    0[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  LoopCntr        1    9[BANK0 ] char 
  Nybble2Test     1    8[BANK0 ] unsigned char 
  ReturnVal       1    7[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       3       0       0
      Temps:          0       5       0       0
      Totals:         0      10       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ES_Run
		_ES_Timer_Tick_Resp
 This function uses a non-reentrant model


 *************** function _RunPatternControlService *****************
 Defined at:
		line 157 in file "Pattern_ControlService.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   90[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  testEvent       3   96[BANK0 ] struct ES_Event_t
  ReturnEvent     3   93[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  3   90[BANK0 ] struct ES_Event_t
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       6       0       0
      Temps:          0       0       0       0
      Totals:         0       9       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   13
 This function calls:
		_PausePattern
		_PostPatternControlService
		_ShowPattern
		_StopPattern
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _RunSPI32ControlService *****************
 Defined at:
		line 138 in file "SPI32_ControlService.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   90[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  ReturnEvent     3  100[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  3   90[BANK0 ] struct ES_Event_t
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       3       0       0
      Temps:          0       7       0       0
      Totals:         0      13       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_GetNextFrame
		_SPI32_SendFrame
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _SPI32_SendFrame *****************
 Defined at:
		line 86 in file "SPI32_HW.c"
 Parameters:    Size  Location     Type
  newFrame        4    0[BANK0 ] unsigned long 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       0       0       0
      Temps:          0       4       0       0
      Totals:         0       8       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_RunSPI32ControlService
 This function uses a non-reentrant model


 *************** function _GetNextFrame *****************
 Defined at:
		line 258 in file "SPI32_ControlService.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4    0[BANK0 ] unsigned long 
 Registers used:
		fsr2l, fsr2h
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_RunSPI32ControlService
 This function uses a non-reentrant model


 *************** function _StopPattern *****************
 Defined at:
		line 283 in file "Pattern_ControlService.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   12
 This function calls:
		_DotStar_Show
		_ES_Timer_StopTimer
		_PatternOff
		_ResetPattern
 This function is called by:
		_RunPatternControlService
 This function uses a non-reentrant model


 *************** function _ResetPattern *****************
 Defined at:
		line 178 in file "Pattern_RGBPatterns.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_StopPattern
 This function uses a non-reentrant model


 *************** function _PatternOff *****************
 Defined at:
		line 81 in file "Pattern_RGBPatterns.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] PTR unsigned int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_StopPattern
 This function uses a non-reentrant model


 *************** function _ShowPattern *****************
 Defined at:
		line 273 in file "Pattern_ControlService.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   12
 This function calls:
		_DotStar_Show
		_ES_Timer_InitTimer
		_UpdatePattern
 This function is called by:
		_RunPatternControlService
 This function uses a non-reentrant model


 *************** function _UpdatePattern *****************
 Defined at:
		line 89 in file "Pattern_RGBPatterns.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1   36[BANK0 ] unsigned char 
  i               1   35[BANK0 ] unsigned char 
  patternID       1   34[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2   32[BANK0 ] PTR unsigned int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       3       0       0
      Temps:          0       0       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_ThinkingPattern
		___awmod
		___lwdiv
		___wmul
 This function is called by:
		_ShowPattern
 This function uses a non-reentrant model


 *************** function _ThinkingPattern *****************
 Defined at:
		line 183 in file "Pattern_RGBPatterns.c"
 Parameters:    Size  Location     Type
  pattern         1    wreg     unsigned char 
  pixel           1    8[BANK0 ] unsigned char 
  stepCount       1    9[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  pattern         1    0[COMRAM] unsigned char 
  pixelHSV        2   22[BANK0 ] unsigned int 
  head            1   31[BANK0 ] unsigned char 
  x               1   30[BANK0 ] unsigned char 
  val             1   29[BANK0 ] unsigned char 
  sat             1   28[BANK0 ] unsigned char 
  hue             1   21[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    8[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0      11       0       0
      Temps:          0      11       0       0
      Totals:         0      24       0       0
Total ram usage:       24 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		___awdiv
		___awmod
 This function is called by:
		_UpdatePattern
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 Parameters:    Size  Location     Type
  dividend        2    0[BANK0 ] int 
  divisor         2    2[BANK0 ] int 
 Auto vars:     Size  Location     Type
  quotient        2    6[BANK0 ] int 
  sign            1    5[BANK0 ] unsigned char 
  counter         1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       4       0       0
      Temps:          0       0       0       0
      Totals:         0       8       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ThinkingPattern
 This function uses a non-reentrant model


 *************** function _ES_Timer_InitTimer *****************
 Defined at:
		line 229 in file "ES_Timers.c"
 Parameters:    Size  Location     Type
  Num             1    wreg     unsigned char 
  NewTime         2    0[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  Num             1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E15473
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       1       0       0
      Temps:          0       2       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ShowPattern
 This function uses a non-reentrant model


 *************** function _DotStar_Show *****************
 Defined at:
		line 76 in file "Pattern_DotStarLED.c"
 Parameters:    Size  Location     Type
  patternPoint    2   69[BANK0 ] PTR unsigned int 
		 -> PixelPattern(152), 
 Auto vars:     Size  Location     Type
  i               1   89[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       1       0       0
      Temps:          0      18       0       0
      Totals:         0      21       0       0
Total ram usage:       21 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   11
 This function calls:
		_HSV_to_RGB
		_SPI32_TransmitFrames
 This function is called by:
		_ShowPattern
		_StopPattern
 This function uses a non-reentrant model


 *************** function _SPI32_TransmitFrames *****************
 Defined at:
		line 239 in file "SPI32_ControlService.c"
 Parameters:    Size  Location     Type
  framePointer    2   32[BANK0 ] PTR unsigned long 
		 -> PixelFrames(316), 
  numFrames       1   34[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  transmitEven    3   35[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       3       0       0
      Temps:          0       0       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		_PostSPI32ControlService
 This function is called by:
		_DotStar_Show
 This function uses a non-reentrant model


 *************** function _PostPatternControlService *****************
 Defined at:
		line 135 in file "Pattern_ControlService.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   29[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_ES_PostToService
 This function is called by:
		_RunPatternControlService
		_ES_Timer_Tick_Resp
		_PostToList
 This function uses a non-reentrant model


 *************** function _PostSPI32ControlService *****************
 Defined at:
		line 117 in file "SPI32_ControlService.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   29[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_ES_PostToService
 This function is called by:
		_SPI32_TransmitFrames
		_ES_Timer_Tick_Resp
		_PostToList
 This function uses a non-reentrant model


 *************** function _HSV_to_RGB *****************
 Defined at:
		line 49 in file "Pattern_HSV_Convert.c"
 Parameters:    Size  Location     Type
  HSV_Value       2   19[BANK0 ] PTR unsigned long 
		 -> PixelFrames(316), 
 Auto vars:     Size  Location     Type
  v               2   67[BANK0 ] unsigned int 
  p               2   65[BANK0 ] unsigned int 
  s               2   63[BANK0 ] unsigned int 
  t               2   59[BANK0 ] unsigned int 
  q               2   57[BANK0 ] unsigned int 
  b               2   55[BANK0 ] unsigned int 
  g               2   53[BANK0 ] unsigned int 
  r               2   51[BANK0 ] unsigned int 
  fpart           2   49[BANK0 ] unsigned int 
  region          2   47[BANK0 ] unsigned int 
  h               2   45[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0      24       0       0
      Temps:          0      24       0       0
      Totals:         0      50       0       0
Total ram usage:       50 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		___lwdiv
		___wmul
 This function is called by:
		_DotStar_Show
 This function uses a non-reentrant model


 *************** function ___lwdiv *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
 Parameters:    Size  Location     Type
  dividend        2   12[BANK0 ] unsigned int 
  divisor         2   14[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  quotient        2   16[BANK0 ] unsigned int 
  counter         1   18[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2   12[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       3       0       0
      Temps:          0       0       0       0
      Totals:         0       7       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_UpdatePattern
		_HSV_to_RGB
 This function uses a non-reentrant model


 *************** function _PausePattern *****************
 Defined at:
		line 296 in file "Pattern_ControlService.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_ES_Timer_StopTimer
 This function is called by:
		_RunPatternControlService
 This function uses a non-reentrant model


 *************** function _ES_Timer_StopTimer *****************
 Defined at:
		line 205 in file "ES_Timers.c"
 Parameters:    Size  Location     Type
  Num             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  Num             1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E15473
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       4       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_StopPattern
		_PausePattern
 This function uses a non-reentrant model


 *************** function _ES_DeQueue *****************
 Defined at:
		line 164 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          2   12[BANK0 ] PTR struct ES_Event_t
		 -> Queue1(12), Queue0(12), 
  pReturnEvent    2   14[BANK0 ] PTR struct ES_Event_t
		 -> ES_Run@ThisEvent(3), ES_RecallEvents@RecalledEvent(3), 
 Auto vars:     Size  Location     Type
  pThisQueue      2   20[BANK0 ] PTR struct .
		 -> Queue1(12), Queue0(12), 
  NumLeft         1   19[BANK0 ] unsigned char 
  SaveCrit        1   18[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       4       0       0
      Temps:          0       2       0       0
      Totals:         0      10       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		___lbmod
		___wmul
 This function is called by:
		_ES_Run
		_ES_RecallEvents
 This function uses a non-reentrant model


 *************** function ___lbmod *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lbmod.c"
 Parameters:    Size  Location     Type
  dividend        1    wreg     unsigned char 
  divisor         1    0[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  dividend        1    1[BANK0 ] unsigned char 
  rem             1    3[BANK0 ] unsigned char 
  counter         1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       3       0       0
      Temps:          0       0       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ES_DeQueue
 This function uses a non-reentrant model


 *************** function _ES_CheckUserEvents *****************
 Defined at:
		line 46 in file "ES_CheckEvents.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_Check4Keystroke
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _Check4Keystroke *****************
 Defined at:
		line 62 in file "EventCheckers.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ES_CheckUserEvents
 This function uses a non-reentrant model


 *************** function _ES_Initialize *****************
 Defined at:
		line 242 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
  NewRate         2   33[BANK0 ] enum E15424
 Auto vars:     Size  Location     Type
  i               1   35[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E15495
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		_ES_InitQueue
		_ES_Timer_Init
		_InitPatternControlService
		_InitSPI32ControlService
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _InitPatternControlService *****************
 Defined at:
		line 97 in file "Pattern_ControlService.c"
 Parameters:    Size  Location     Type
  Priority        1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  Priority        1   32[BANK0 ] unsigned char 
  ThisEvent       3   29[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       4       0       0
      Temps:          0       0       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_DotStar_Init
		_ES_PostToService
		_SetupPattern
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function _InitSPI32ControlService *****************
 Defined at:
		line 80 in file "SPI32_ControlService.c"
 Parameters:    Size  Location     Type
  Priority        1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  Priority        1   32[BANK0 ] unsigned char 
  ThisEvent       3   29[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       4       0       0
      Temps:          0       0       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_ES_PostToService
		_SPI32_Init
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function _SPI32_Init *****************
 Defined at:
		line 66 in file "SPI32_HW.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_HW_Init
 This function is called by:
		_InitSPI32ControlService
 This function uses a non-reentrant model


 *************** function _HW_Init *****************
 Defined at:
		line 128 in file "SPI32_HW.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_SPI32_Init
 This function uses a non-reentrant model


 *************** function _SetupPattern *****************
 Defined at:
		line 74 in file "Pattern_RGBPatterns.c"
 Parameters:    Size  Location     Type
  configs         2    0[BANK0 ] PTR unsigned char 
		 -> PatternConfigs(5), 
  numPixels       1    2[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_InitPatternControlService
 This function uses a non-reentrant model


 *************** function _ES_PostToService *****************
 Defined at:
		line 351 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
  WhichService    1    wreg     unsigned char 
  TheEvent        3   23[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  WhichService    1   28[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       1       0       0
      Temps:          0       2       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_ES_EnQueueFIFO
 This function is called by:
		_InitPatternControlService
		_PostPatternControlService
		_InitSPI32ControlService
		_PostSPI32ControlService
 This function uses a non-reentrant model


 *************** function _ES_EnQueueFIFO *****************
 Defined at:
		line 85 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          2   12[BANK0 ] PTR struct ES_Event_t
		 -> Queue1(12), Queue0(12), 
  Event2Add       3   14[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  pThisQueue      2   21[BANK0 ] PTR struct .
		 -> Queue1(12), Queue0(12), 
  SaveCrit        1   20[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       5       0       0
      Locals:         0       3       0       0
      Temps:          0       3       0       0
      Totals:         0      11       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		___awmod
		___wmul
 This function is called by:
		_ES_PostToService
		_ES_PostAll
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    6[BANK0 ] unsigned int 
  multiplicand    2    8[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  product         2   10[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  2    6[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       2       0       0
      Temps:          0       0       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ES_EnQueueFIFO
		_ES_DeQueue
		_UpdatePattern
		_HSV_to_RGB
		i2_ES_EnQueueFIFO
		_ES_EnQueueLIFO
 This function uses a non-reentrant model


 *************** function ___awmod *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
 Parameters:    Size  Location     Type
  dividend        2    0[BANK0 ] int 
  divisor         2    2[BANK0 ] int 
 Auto vars:     Size  Location     Type
  sign            1    5[BANK0 ] unsigned char 
  counter         1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       2       0       0
      Temps:          0       0       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ES_EnQueueFIFO
		_UpdatePattern
		_ThinkingPattern
		i2_ES_EnQueueFIFO
 This function uses a non-reentrant model


 *************** function _DotStar_Init *****************
 Defined at:
		line 48 in file "Pattern_DotStarLED.c"
 Parameters:    Size  Location     Type
  numPixels       1    wreg     unsigned char 
  brightness      1    0[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  numPixels       1    3[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       1       0       0
      Temps:          0       2       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_InitPatternControlService
 This function uses a non-reentrant model


 *************** function _ES_Timer_Init *****************
 Defined at:
		line 130 in file "ES_Timers.c"
 Parameters:    Size  Location     Type
  Rate            2    2[BANK0 ] enum E15424
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		__HW_Timer_Init
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function __HW_Timer_Init *****************
 Defined at:
		line 71 in file "ES_Port.c"
 Parameters:    Size  Location     Type
  Rate            2    0[BANK0 ] enum E15412
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ES_Timer_Init
 This function uses a non-reentrant model


 *************** function _ES_InitQueue *****************
 Defined at:
		line 58 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          2    0[BANK0 ] PTR struct ES_Event_t
		 -> Queue1(12), Queue0(12), 
  BlockSize       1    2[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  pThisQueue      2    3[BANK0 ] PTR struct .
		 -> Queue1(12), Queue0(12), 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       2       0       0
      Temps:          0       0       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 111 in file "ES_Port.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:         16       0       0       0
      Totals:        16       0       0       0
Total ram usage:       16 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_SPI32_EOTResponse
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model


 *************** function _SPI32_EOTResponse *****************
 Defined at:
		line 167 in file "SPI32_HW.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  EOTevent        3   32[COMRAM] struct ES_Event_t
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         3       0       0       0
      Temps:          0       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		i2_PostSPI32ControlService
		i2_SPI32_SendFrame
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function i2_SPI32_SendFrame *****************
 Defined at:
		line 86 in file "SPI32_HW.c"
 Parameters:    Size  Location     Type
  newFrame        4    0[COMRAM] unsigned long 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         0       0       0       0
      Temps:          4       0       0       0
      Totals:         8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_SPI32_EOTResponse
 This function uses a non-reentrant model


 *************** function i2_PostSPI32ControlService *****************
 Defined at:
		line 117 in file "SPI32_ControlService.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   29[COMRAM] struct ES_Event_t
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		i2_ES_PostToService
 This function is called by:
		_SPI32_EOTResponse
 This function uses a non-reentrant model


 *************** function i2_ES_PostToService *****************
 Defined at:
		line 351 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
  WhichService    1    wreg     unsigned char 
  TheEvent        3   23[COMRAM] struct ES_Event_t
 Auto vars:     Size  Location     Type
  WhichService    1   28[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         1       0       0       0
      Temps:          2       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		i2_ES_EnQueueFIFO
 This function is called by:
		i2_PostSPI32ControlService
 This function uses a non-reentrant model


 *************** function i2_ES_EnQueueFIFO *****************
 Defined at:
		line 85 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          2   12[COMRAM] PTR struct ES_Event_t
		 -> Queue1(12), Queue0(12), 
  Event2Add       3   14[COMRAM] struct ES_Event_t
 Auto vars:     Size  Location     Type
  ES_EnQueueFI    2   21[COMRAM] PTR struct .
		 -> Queue1(12), Queue0(12), 
  ES_EnQueueFI    1   20[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         5       0       0       0
      Locals:         3       0       0       0
      Temps:          3       0       0       0
      Totals:        11       0       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i2___awmod
		i2___wmul
 This function is called by:
		i2_ES_PostToService
 This function uses a non-reentrant model


 *************** function i2___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    6[COMRAM] unsigned int 
  multiplicand    2    8[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  __wmul          2   10[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  2    6[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		i2_ES_EnQueueFIFO
 This function uses a non-reentrant model


 *************** function i2___awmod *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
 Parameters:    Size  Location     Type
  dividend        2    0[COMRAM] int 
  divisor         2    2[COMRAM] int 
 Auto vars:     Size  Location     Type
  __awmod         1    5[COMRAM] unsigned char 
  __awmod         1    4[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2    0[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		i2_ES_EnQueueFIFO
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
ES_Queue.c
		_ES_EnQueueFIFO		CODE           	11CC	0000	227
		_ES_DeQueue    		CODE           	0B82	0000	297
		_ES_InitQueue  		CODE           	1CE4	0000	61

ES_Queue.c estimated size: 585

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c
		___awmod       		CODE           	16E0	0000	163

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c estimated size: 163

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\putch.c
		_putch         		CODE           	1F96	0000	3

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\putch.c estimated size: 3

ES_CheckEvents.c
		_ES_CheckUserEvents		CODE           	1C16	0000	75

ES_CheckEvents.c estimated size: 75

Pattern_HSV_Convert.c
		_HSV_to_RGB    		CODE           	03BE	0000	1113

Pattern_HSV_Convert.c estimated size: 1113

Pattern_DotStarLED.c
		_DotStar_Init  		CODE           	14E8	0000	175
		_DotStar_Show  		CODE           	0CAA	0000	295

Pattern_DotStarLED.c estimated size: 470

Pattern_RGBPatterns.c
		_ResetPattern  		CODE           	1F76	0000	9
		_PatternOff    		CODE           	1CA4	0000	65
		_SetupPattern  		CODE           	1F5A	0000	15
		_UpdatePattern 		CODE           	0A2A	0000	345
		_ThinkingPattern		CODE           	0816	0000	533

Pattern_RGBPatterns.c estimated size: 967

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c
		___wmul        		CODE           	1D94	0000	55

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c estimated size: 55

ES_LookupTables.c
		_ES_GetMSBitSet		CODE           	163C	0000	165

ES_LookupTables.c estimated size: 165

SPI32_ControlService.c
		_PostSPI32ControlService		CODE           	1EC6	0000	29
		_GetNextFrame  		CODE           	1EFE	0000	27
		_InitSPI32ControlService		CODE           	1D20	0000	59
		_RunSPI32ControlService		CODE           	0EE6	0000	263
		_SPI32_TransmitFrames		CODE           	1DFE	0000	51

SPI32_ControlService.c estimated size: 429

EventCheckers.c
		_Check4Keystroke		CODE           	1F92	0000	5

EventCheckers.c estimated size: 5

ES_Framework.c
		_ES_PostToService		CODE           	1982	0000	119
		_ES_Run        		CODE           	0FEC	0000	245
		_ES_Initialize 		CODE           	10E0	0000	237

ES_Framework.c estimated size: 601

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c
		___lwdiv       		CODE           	190A	0000	121

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c estimated size: 121

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c
		___awdiv       		CODE           	1376	0000	191

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c estimated size: 191

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lbmod.c
		___lbmod       		CODE           	1C60	0000	69

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lbmod.c estimated size: 69

SPI32_HW.c
		_SPI32_SendFrame		CODE           	1B28	0000	83
		_SPI32_EOTResponse		CODE           	1D5A	0000	59
		_SPI32_Init    		CODE           	1F8C	0000	7
		_HW_Init       		CODE           	1EA4	0000	35

SPI32_HW.c estimated size: 184

shared
		_BitNum2SetMask		SMALLCONST     	0301	0000	33
		_DistList00    		SMALLCONST     	0360	0000	5
		i2_ES_EnQueueFIFO		CODE           	1434	0000	181
		_ES_EventList  		SMALLCONST     	035E	0000	3
		i2___wmul      		CODE           	1E7E	0000	39
		i2_ES_PostToService		CODE           	1A68	0000	107
		_Nybble2MSBitNum		SMALLCONST     	0341	0000	16
		_EventQueues   		SMALLCONST     	0358	0000	7
		__initialization		CODE           	1892	0000	107
		i2___awmod     		CODE           	19F8	0000	113
		_Timer2PostFunc		SMALLCONST     	0321	0000	33
		_ServDescList  		SMALLCONST     	0350	0000	9
		i2_SPI32_SendFrame		CODE           	1BC8	0000	79
		i2_PostSPI32ControlService		CODE           	1F44	0000	23

shared estimated size: 755

Pattern_ControlService.c
		_InitPatternControlService		CODE           	1AD2	0000	87
		_ShowPattern   		CODE           	1E58	0000	39
		_RunPatternControlService		CODE           	12AE	0000	201
		_PostPatternControlService		CODE           	1F2E	0000	23
		_PausePattern  		CODE           	1F7E	0000	9
		_StopPattern   		CODE           	1E30	0000	41

Pattern_ControlService.c estimated size: 400

ES_Port.c
		_ISR           		CODE           	0008	0000	181
		__HW_Process_Pending_Ints		CODE           	1F18	0000	23
		__HW_Timer_Init		CODE           	1EE2	0000	29

ES_Port.c estimated size: 233

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c
		_printf        		CODE           	1DCA	0000	53

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c estimated size: 53

ES_Timers.c
		_ES_Timer_Init 		CODE           	1F68	0000	15
		_ES_Timer_InitTimer		CODE           	1812	0000	129
		_ES_Timer_StopTimer		CODE           	1B7A	0000	79
		_ES_Timer_Tick_Resp		CODE           	0DD0	0000	279

ES_Timers.c estimated size: 502

main.c
		_main          		CODE           	1782	0000	145

main.c estimated size: 145

