Microchip MPLAB XC8 Compiler V1.38 ()

Linker command line:

-W-3 --edf=/Applications/microchip/xc8/v1.38/dat/en_msgs.txt -cs \
  -h+dist/default/production/DotStar_Pattern_Control.production.sym \
  --cmf=dist/default/production/DotStar_Pattern_Control.production.cmf -z \
  -Q18F2480 -o/tmp/xcXNB3Ssf \
  -Mdist/default/production/DotStar_Pattern_Control.production.map -E1 \
  -ver=XC8 -ASTACK=02F4h-02ffh -pstack=STACK -ACODE=00h-03FFFh \
  -ACONST=00h-03FFFh -ASMALLCONST=0300h-03FFhx61 -AMEDIUMCONST=0300h-03FFFh \
  -ACOMRAM=01h-05Fh -AABS1=00h-02FFh -ABIGRAM=01h-02FFh \
  -ARAM=060h-0FFh,0100h-01FFhx2 -ABANK0=060h-0FFh -ABANK1=0100h-01FFh \
  -ABANK2=0200h-02FFh -ASFR=0D00h-0DFFhx2,0F00h-0F5Fh,0F60h-0FFFh \
  -preset_vec=00h,intcode=08h,intcodelo,powerup,init,end_init \
  -pramtop=0300h -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST \
  -pconst=CONST -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  /tmp/xceBV20eg.obj \
  dist/default/production/DotStar_Pattern_Control.production.obj 

Object code version is 3.11

Machine type is 18F2480

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
/tmp/xceBV20eg.obj
                end_init                             16       16        4        4       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production/DotStar_Pattern_Control.production.obj
                intcode                               8        8        E        4       0
                temp                                 5C       5C        1        1       1
                smallconst                          300      300       C6      180       0
                text66                             2960     2960        2      1E3       0
                text65                             295E     295E        2      1E3       0
                text64                             22E8     22E8       70      1E3       0
                text63                             27F8     27F8       26      1E3       0
                text62                             1D56     1D56       B4      1E3       0
                text61                             2358     2358       6A      1E3       0
                text60                             28EE     28EE       16      1E3       0
                text59                             23C2     23C2       5A      1E3       0
                text58                             2920     2920        C      1E3       0
                text57                             2952     2952        6      1E3       0
                text56                             28D8     28D8       16      1E3       0
                text55                             2512     2512       4E      1E3       0
                text54                             26A4     26A4       3A      1E3       0
                intcode_body                       1A48     1A48       CE      1E3       0
                text52                             262E     262E       3C      1E3       0
                text51                             285C     285C       1C      1E3       0
                text50                             2912     2912        E      1E3       0
                text49                             1F5C     1F5C       A2      1E3       0
                text48                             26DE     26DE       36      1E3       0
                text47                             1966     1966       E2      1E3       0
                text46                             2272     2272       76      1E3       0
                text45                             1E0A     1E0A       AE      1E3       0
                text44                             2904     2904        E      1E3       0
                text43                             281E     281E       22      1E3       0
                text42                             294C     294C        6      1E3       0
                text41                             266A     266A       3A      1E3       0
                text40                             241C     241C       56      1E3       0
                text39                             277A     277A       30      1E3       0
                text38                             187A     187A       EC      1E3       0
                text37                             2958     2958        4      1E3       0
                text36                             2560     2560       4A      1E3       0
                text35                             25AA     25AA       44      1E3       0
                text34                             131C     131C      128      1E3       0
                text33                             2106     2106       7C      1E3       0
                text32                             2892     2892       1A      1E3       0
                text31                             292C     292C        A      1E3       0
                text30                             24C4     24C4       4E      1E3       0
                text29                             293E     293E        8      1E3       0
                text28                             21FA     21FA       78      1E3       0
                text27                              3C6      3C6      458      1E3       0
                text26                             2840     2840       1C      1E3       0
                text25                             28C2     28C2       16      1E3       0
                text24                             2748     2748       32      1E3       0
                text23                             1444     1444      126      1E3       0
                text22                             2086     2086       80      1E3       0
                text21                             1BDE     1BDE       BE      1E3       0
                text20                             1108     1108      214      1E3       0
                text19                              EE6      EE6      222      1E3       0
                text18                              CC4      CC4      222      1E3       0
                text17                              AA2      AA2      222      1E3       0
                text16                              81E      81E      284      1E3       0
                text15                             27D2     27D2       26      1E3       0
                text14                             25EE     25EE       40      1E3       0
                text13                             2936     2936        8      1E3       0
                text12                             27AA     27AA       28      1E3       0
                text11                             2878     2878       1A      1E3       0
                text10                             2472     2472       52      1E3       0
                text9                              1680     1680      106      1E3       0
                text8                              1B16     1B16       C8      1E3       0
                text7                              1C9C     1C9C       BA      1E3       0
                text6                              1EB8     1EB8       A4      1E3       0
                text5                              156A     156A      116      1E3       0
                text4                              28AC     28AC       16      1E3       0
                text3                              1786     1786       F4      1E3       0
                text2                              295C     295C        2      1E3       0
                text1                              2714     2714       34      1E3       0
                text0                              1FFE     1FFE       88      1E3       0
                cstackCOMRAM                          1        1       33        1       1
                cstackBANK0                          60       60       6D       60       1
                bssBIGRAM                           1B8      1B8      13C      1B8       1
                bssBANK1                            100      100       B8      100       1
                dataBANK0                            FA       FA        6       60       1
                bssBANK0                             CD       CD       2D       60       1
                dataCOMRAM                           5B       5B        1        1       1
                bssCOMRAM                            34       34       27        1       1
                cinit                              2182     2182       78      1E3       0
                idataBANK0                         2946     2946        6      1E3       0
                idataCOMRAM                        2962     2962        1      1E3       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             16       16        4         0
                intcode                               8        8        E         0
                reset_vec                             0        0        4         0
                text66                             2960     2960        2         0
                text65                             295E     295E        2         0
                text64                             22E8     22E8       70         0
                text63                             27F8     27F8       26         0
                text62                             1D56     1D56       B4         0
                text61                             2358     2358       6A         0
                text60                             28EE     28EE       16         0
                text59                             23C2     23C2       5A         0
                text58                             2920     2920        C         0
                text57                             2952     2952        6         0
                text56                             28D8     28D8       16         0
                text55                             2512     2512       4E         0
                text54                             26A4     26A4       3A         0
                intcode_body                       1A48     1A48       CE         0
                text52                             262E     262E       3C         0
                text51                             285C     285C       1C         0
                text50                             2912     2912        E         0
                text49                             1F5C     1F5C       A2         0
                text48                             26DE     26DE       36         0
                text47                             1966     1966       E2         0
                text46                             2272     2272       76         0
                text45                             1E0A     1E0A       AE         0
                text44                             2904     2904        E         0
                text43                             281E     281E       22         0
                text42                             294C     294C        6         0
                text41                             266A     266A       3A         0
                text40                             241C     241C       56         0
                text39                             277A     277A       30         0
                text38                             187A     187A       EC         0
                text37                             2958     2958        4         0
                text36                             2560     2560       4A         0
                text35                             25AA     25AA       44         0
                text34                             131C     131C      128         0
                text33                             2106     2106       7C         0
                text32                             2892     2892       1A         0
                text31                             292C     292C        A         0
                text30                             24C4     24C4       4E         0
                text29                             293E     293E        8         0
                text28                             21FA     21FA       78         0
                text27                              3C6      3C6      458         0
                text26                             2840     2840       1C         0
                text25                             28C2     28C2       16         0
                text24                             2748     2748       32         0
                text23                             1444     1444      126         0
                text22                             2086     2086       80         0
                text21                             1BDE     1BDE       BE         0
                text20                             1108     1108      214         0
                text19                              EE6      EE6      222         0
                text18                              CC4      CC4      222         0
                text17                              AA2      AA2      222         0
                text16                              81E      81E      284         0
                text15                             27D2     27D2       26         0
                text14                             25EE     25EE       40         0
                text13                             2936     2936        8         0
                text12                             27AA     27AA       28         0
                text11                             2878     2878       1A         0
                text10                             2472     2472       52         0
                text9                              1680     1680      106         0
                text8                              1B16     1B16       C8         0
                text7                              1C9C     1C9C       BA         0
                text6                              1EB8     1EB8       A4         0
                text5                              156A     156A      116         0
                text4                              28AC     28AC       16         0
                text3                              1786     1786       F4         0
                text2                              295C     295C        2         0
                text1                              2714     2714       34         0
                text0                              1FFE     1FFE       88         0
                cinit                              2182     2182       78         0
                idataBANK0                         2946     2946        6         0
                idataCOMRAM                        2962     2962        1         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                          300      300       C6         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                temp                                 5C       5C        1         1
                cstackCOMRAM                          1        1       33         1
                dataCOMRAM                           5B       5B        1         1
                bssCOMRAM                            34       34       27         1

        CLASS   ABS1           

        CLASS   BIGRAM         
                bssBIGRAM                           1B8      1B8      13C         1

        CLASS   RAM            

        CLASS   BANK0          
                cstackBANK0                          60       60       6D         1
                dataBANK0                            FA       FA        6         1
                bssBANK0                             CD       CD       2D         1

        CLASS   BANK1          
                bssBANK1                            100      100       B8         1

        CLASS   BANK2          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  00005C  00005D         1       1  COMRAM  
                intcode                        000008  000012  00001A         4       0  CODE    
                cstackBANK0                    000060  0000A0  000100        60       1  BANK0   
                bssBANK1                       000100  0000B8  0001B8       100       1  BANK1   
                bssBIGRAM                      0001B8  00013C  0002F4       1B8       1  BIGRAM  
                smallconst                     000300  0000C6  0003C6       180       0  SMALLCON
                text27                         0003C6  00259D  002963       1E3       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK2            0002F4-0002FF                C
        BIGRAM           00005D-00005F                3
                         0002F4-0002FF                C
        CODE             000004-000007                4
                         00001A-0002FF              2E6
                         002963-003FFF             169D
        COMRAM           00005D-00005F                3
        CONST            000004-000007                4
                         00001A-0002FF              2E6
                         002963-003FFF             169D
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      002963-003FFF             169D
        RAM              0002F4-0002FF                C
        SFR              000D00-000FFF              100
        SMALLCONST       002963-003FFF              100
        STACK            0002F4-0002FF                C

                                  Symbol Table

?_GetNextFrame                       cstackBANK0  000060
?_IdlePattern                        cstackBANK0  000068
?_ListeningPattern                   cstackBANK0  000068
?_PatternOff                         cstackBANK0  000060
?_RunCanRX_Service                   cstackBANK0  0000BA
?_RunPatternControlService           cstackBANK0  0000BA
?_RunSPI32ControlService             cstackBANK0  0000BA
?_SpeakingPattern                    cstackBANK0  000068
?_ThinkingPattern                    cstackBANK0  000068
?_UpdatePattern                      cstackBANK0  000080
?___awdiv                            cstackBANK0  000060
?___awmod                            cstackBANK0  000060
?___lwdiv                            cstackBANK0  00006C
?___wmul                             cstackBANK0  000066
?_printf                             cstackBANK0  000060
?i2___awmod                          cstackCOMRAM 000001
?i2___wmul                           cstackCOMRAM 000007
CanRX_Service@MyPriority             bssBANK0     0000DE
DotStar_Init@brightness              cstackBANK0  000060
DotStar_Init@numPixels               cstackBANK0  000063
DotStar_Show@i                       cstackBANK0  0000B9
DotStar_Show@patternPointer          cstackBANK0  0000A5
ES_CheckUserEvents@i                 cstackBANK0  000060
ES_DeQueue@NumLeft                   cstackBANK0  000073
ES_DeQueue@SaveCrit                  cstackBANK0  000072
ES_DeQueue@pBlock                    cstackBANK0  00006C
ES_DeQueue@pReturnEvent              cstackBANK0  00006E
ES_DeQueue@pThisQueue                cstackBANK0  000074
ES_EnQueueFIFO@Event2Add             cstackBANK0  00006E
ES_EnQueueFIFO@SaveCrit              cstackBANK0  000074
ES_EnQueueFIFO@pBlock                cstackBANK0  00006C
ES_EnQueueFIFO@pThisQueue            cstackBANK0  000075
ES_GetMSBitSet@LoopCntr              cstackBANK0  000069
ES_GetMSBitSet@Nybble2Test           cstackBANK0  000068
ES_GetMSBitSet@ReturnVal             cstackBANK0  000067
ES_GetMSBitSet@Val2Check             cstackBANK0  000060
ES_InitQueue@BlockSize               cstackBANK0  000062
ES_InitQueue@pBlock                  cstackBANK0  000060
ES_InitQueue@pThisQueue              cstackBANK0  000063
ES_Initialize@NewRate                cstackBANK0  000081
ES_Initialize@i                      cstackBANK0  000083
ES_PostToService@TheEvent            cstackBANK0  000077
ES_PostToService@WhichService        cstackBANK0  00007C
ES_Run@HighestPrior                  cstackBANK0  0000CB
ES_Run@ThisEvent                     bssBANK0     0000F6
ES_Timer_Init@Rate                   cstackBANK0  000062
ES_Timer_InitTimer@NewTime           cstackBANK0  000060
ES_Timer_InitTimer@Num               cstackBANK0  000064
ES_Timer_StopTimer@Num               cstackBANK0  000064
ES_Timer_Tick_Resp@NeedsProcessing   bssBANK0     0000D4
ES_Timer_Tick_Resp@NewEvent          bssBANK0     0000D1
ES_Timer_Tick_Resp@NextTimer2Process bssBANK0     0000DF
HSV_to_RGB@HSV_Value                 cstackBANK0  000073
HSV_to_RGB@b                         cstackBANK0  000097
HSV_to_RGB@fpart                     cstackBANK0  000091
HSV_to_RGB@g                         cstackBANK0  000095
HSV_to_RGB@h                         cstackBANK0  00008D
HSV_to_RGB@p                         cstackBANK0  0000A1
HSV_to_RGB@q                         cstackBANK0  000099
HSV_to_RGB@r                         cstackBANK0  000093
HSV_to_RGB@region                    cstackBANK0  00008F
HSV_to_RGB@s                         cstackBANK0  00009F
HSV_to_RGB@t                         cstackBANK0  00009B
HSV_to_RGB@v                         cstackBANK0  0000A3
ISR@LastTime                         bssCOMRAM    000038
ISR@NextTime                         bssCOMRAM    00003A
IdlePattern@head                     cstackBANK0  00007F
IdlePattern@hue                      cstackBANK0  000075
IdlePattern@pixel                    cstackBANK0  000068
IdlePattern@pixelHSV                 cstackBANK0  000076
IdlePattern@sat                      cstackBANK0  00007C
IdlePattern@stepCount                cstackBANK0  000069
IdlePattern@val                      cstackBANK0  00007D
IdlePattern@x                        cstackBANK0  00007E
InitCanRX_Service@Priority           cstackBANK0  000080
InitCanRX_Service@ThisEvent          cstackBANK0  00007D
InitPatternControlService@Priority   cstackBANK0  000080
InitPatternControlService@ThisEvent  cstackBANK0  00007D
InitSPI32ControlService@Priority     cstackBANK0  000080
InitSPI32ControlService@ThisEvent    cstackBANK0  00007D
ListeningPattern@head                cstackBANK0  00007F
ListeningPattern@hue                 cstackBANK0  00007D
ListeningPattern@pixel               cstackBANK0  000068
ListeningPattern@pixelHSV            cstackBANK0  000075
ListeningPattern@sat                 cstackBANK0  00007B
ListeningPattern@stepCount           cstackBANK0  000069
ListeningPattern@val                 cstackBANK0  00007C
ListeningPattern@x                   cstackBANK0  00007E
PatternOff@i                         cstackBANK0  000062
Pattern_RGBPatterns@Length           bssBANK0     0000E0
Pattern_RGBPatterns@PatternConfigs   bssBANK0     0000D6
PostCanRX_Service@ThisEvent          cstackCOMRAM 00001E
PostPatternControlService@ThisEvent  cstackBANK0  00007D
PostSPI32ControlService@ThisEvent    cstackBANK0  00007D
ProcessReceive@Event2Post            cstackCOMRAM 000021
RunCanRX_Service@PatternEvent        cstackBANK0  0000C0
RunCanRX_Service@ReturnEvent         cstackBANK0  0000BD
RunCanRX_Service@ThisEvent           cstackBANK0  0000BA
RunPatternControlService@ReturnEvent cstackBANK0  0000BD
RunPatternControlService@ThisEvent   cstackBANK0  0000BA
RunPatternControlService@testEvent   cstackBANK0  0000C0
RunSPI32ControlService@ReturnEvent   cstackBANK0  0000C4
RunSPI32ControlService@ThisEvent     cstackBANK0  0000BA
SPI32_ControlService@CurrentState    bssBANK0     0000E1
SPI32_ControlService@MyPriority      bssBANK0     0000E2
SPI32_EOTResponse@EOTevent           cstackCOMRAM 000021
SPI32_SendFrame@newFrame             cstackBANK0  000060
SPI32_TransmitFrames@framePointer    cstackBANK0  000080
SPI32_TransmitFrames@numFrames       cstackBANK0  000082
SPI32_TransmitFrames@transmitEvent   cstackBANK0  000083
SetPattern@PatternID                 cstackBANK0  000060
SetupPattern@configs                 cstackBANK0  000060
SetupPattern@numPixels               cstackBANK0  000062
SpeakingPattern@head                 cstackBANK0  00007F
SpeakingPattern@hue                  cstackBANK0  00007D
SpeakingPattern@pixel                cstackBANK0  000068
SpeakingPattern@pixelHSV             cstackBANK0  000075
SpeakingPattern@sat                  cstackBANK0  00007B
SpeakingPattern@stepCount            cstackBANK0  000069
SpeakingPattern@val                  cstackBANK0  00007C
SpeakingPattern@x                    cstackBANK0  00007E
ThinkingPattern@head                 cstackBANK0  00007F
ThinkingPattern@hue                  cstackBANK0  00007D
ThinkingPattern@pixel                cstackBANK0  000068
ThinkingPattern@pixelHSV             cstackBANK0  000075
ThinkingPattern@sat                  cstackBANK0  00007B
ThinkingPattern@stepCount            cstackBANK0  000069
ThinkingPattern@val                  cstackBANK0  00007C
ThinkingPattern@x                    cstackBANK0  00007E
UpdatePattern@i                      cstackBANK0  000083
UpdatePattern@i_729                  cstackBANK0  000084
UpdatePattern@i_730                  cstackBANK0  000085
UpdatePattern@i_731                  cstackBANK0  000086
UpdatePattern@i_732                  cstackBANK0  000087
UpdatePattern@patternID              cstackBANK0  000082
_ADCON1                              (abs)        000FC1
_BRGCON1bits                         (abs)        000F70
_BRGCON2bits                         (abs)        000F71
_BRGCON3bits                         (abs)        000F72
_BitNum2SetMask                      smallconst   000301
_Brightness                          bssBANK0     0000F9
_BusErrorResponse                    text66       002960
_CANCON                              (abs)        000F6F
_CANSTATbits                         (abs)        000F6E
_CCP1CON                             (abs)        000FBD
_CCP1IF                              (abs)        007CF2
_CCPR1H                              (abs)        000FBF
_CCPR1L                              (abs)        000FBE
_CIOCON                              (abs)        000F73
_CanErrorResponse                    text65       00295E
_CanRCVResponse                      text58       002920
_CanXmitResponse                     text57       002952
_Check4Keystroke                     text37       002958
_CurrentFrame                        bssBANK0     0000CD
_CurrentState                        bssBANK0     0000E3
_DistList00                          smallconst   000367
_DotStar_Init                        text45       001E0A
_DotStar_Show                        text23       001444
_ECANCON                             (abs)        000F77
_ERRIE                               (abs)        007D1D
_ERRIF                               (abs)        007D25
_ES_CheckUserEvents                  text36       002560
_ES_DeQueue                          text34       00131C
_ES_EnQueueFIFO                      text47       001966
_ES_EventList                        smallconst   000365
_ES_GetMSBitSet                      text6        001EB8
_ES_InitQueue                        text52       00262E
_ES_Initialize                       text38       00187A
_ES_PostToService                    text46       002272
_ES_Run                              text3        001786
_ES_Timer_Init                       text50       002912
_ES_Timer_InitTimer                  text22       002086
_ES_Timer_StopTimer                  text30       0024C4
_ES_Timer_Tick_Resp                  text5        00156A
_EventQueues                         smallconst   00035C
_FrameByte                           dataBANK0    0000FA
_FrameIndex                          bssBANK0     0000E4
_FramePointer                        bssBANK0     0000D8
_GIE                                 (abs)        007F97
_GetNextFrame                        text11       002878
_HSV_to_RGB                          text27       0003C6
_HSV_to_RGB$2054                     cstackBANK0  00009D
_HW_Init                             text43       00281E
_INTCON                              (abs)        000FF2
_IRXIE                               (abs)        007D1F
_IRXIF                               (abs)        007D27
_ISR                                 intcode      000008
_IdlePattern                         text20       001108
_IdlePattern$780                     cstackBANK0  000078
_IdlePattern$781                     cstackBANK0  00007A
_InitCanHardware                     text33       002106
_InitCanRX_Service                   text39       00277A
_InitPatternControlService           text40       00241C
_InitPins                            text32       002892
_InitSPI32ControlService             text41       00266A
_LATA                                (abs)        000F89
_LATB                                (abs)        000F8A
_LATC                                (abs)        000F8B
_Length                              bssBANK0     0000E5
_ListeningPattern                    text19       000EE6
_ListeningPattern$756                cstackBANK0  000077
_ListeningPattern$757                cstackBANK0  000079
_MyPriority                          bssBANK0     0000E6
_NumFrames                           bssBANK0     0000E7
_Nybble2MSBitNum                     smallconst   000341
_PIE1                                (abs)        000F9D
_PORTA                               (abs)        000F80
_PORTB                               (abs)        000F81
_PORTC                               (abs)        000F82
_PatternConfigs                      dataBANK0    0000FB
_PatternOff                          text14       0025EE
_PatternStepCounter                  bssBANK0     0000E8
_PausePattern                        text29       00293E
_PixelFrames                         bssBIGRAM    0001B8
_PixelPattern                        bssBANK1     000120
_PostCanRX_Service                   text60       0028EE
_PostPatternControlService           text25       0028C2
_PostSPI32ControlService             text26       002840
_PostSPI32ControlService$intlevel0   text26       002846
_ProcessReceive                      text59       0023C2
_Queue0                              bssBANK0     0000EA
_Queue1                              bssCOMRAM    000043
_Queue2                              bssCOMRAM    00004F
_RXB0CONbits                         (abs)        000F60
_RXB0D0                              (abs)        000F66
_RXB0EIDH                            (abs)        000F63
_RXB0EIDL                            (abs)        000F64
_RXB0IE                              (abs)        007D18
_RXB0IF                              (abs)        007D20
_RXB0SIDH                            (abs)        000F61
_RXB0SIDL                            (abs)        000F62
_RXF0EIDH                            (abs)        000F02
_RXF0EIDL                            (abs)        000F03
_RXF0SIDH                            (abs)        000F00
_RXF0SIDL                            (abs)        000F01
_RXM0EIDH                            (abs)        000F1A
_RXM0EIDL                            (abs)        000F1B
_RXM0SIDH                            (abs)        000F18
_RXM0SIDL                            (abs)        000F19
_Ready                               bssBANK0     0000DA
_ResetPattern                        text13       002936
_RunCanRX_Service                    text7        001C9C
_RunPatternControlService            text8        001B16
_RunSPI32ControlService              text9        001680
_SPI32_EOTResponse                   text54       0026A4
_SPI32_Init                          text42       00294C
_SPI32_SendFrame                     text10       002472
_SPI32_TransmitFrames                text24       002748
_SSPADD                              (abs)        000FC8
_SSPBUF                              (abs)        000FC9
_SSPCON1                             (abs)        000FC6
_SSPIE                               (abs)        007CEB
_SSPIF                               (abs)        007CF3
_SSPSTAT                             (abs)        000FC7
_ServDescList                        smallconst   000350
_SetPattern                          text31       00292C
_SetupPattern                        text44       002904
_ShowPattern                         text15       0027D2
_SpeakingPattern                     text18       000CC4
_SpeakingPattern$768                 cstackBANK0  000077
_SpeakingPattern$769                 cstackBANK0  000079
_StopPattern                         text12       0027AA
_SysTickCounter                      bssCOMRAM    00003C
_T1CON                               (abs)        000FCD
_TMR_ActiveFlags                     bssBANK0     0000DC
_TMR_TimerArray                      bssBANK1     000100
_TRISA                               (abs)        000F92
_TRISBbits                           (abs)        000F93
_TRISC                               (abs)        000F94
_TXB0CONbits                         (abs)        000F40
_TXB0IE                              (abs)        007D1A
_TXB0IF                              (abs)        007D22
_ThinkingPattern                     text17       000AA2
_ThinkingPattern$744                 cstackBANK0  000077
_ThinkingPattern$745                 cstackBANK0  000079
_TickCount                           bssBANK0     0000E9
_Timer2PostFunc                      smallconst   000321
_TransmitFrame                       bssCOMRAM    000034
_UpdatePattern                       text16       00081E
__CFG_BOREN$OFF                      (abs)        000000
__CFG_MCLRE$ON                       (abs)        000000
__CFG_OSC$HS                         (abs)        000000
__CFG_PBADEN$OFF                     (abs)        000000
__CFG_PWRT$OFF                       (abs)        000000
__CFG_WDT$OFF                        (abs)        000000
__HRAM                               (abs)        000000
__HW_Process_Pending_Ints            text4        0028AC
__HW_Timer_Init                      text51       00285C
__HW_Timer_Init@Rate                 cstackBANK0  000060
__Habs1                              abs1         000000
__Hbank0                             bank0        000000
__Hbank1                             bank1        000000
__Hbank2                             bank2        000000
__Hbigbss                            bigbss       000000
__Hbigdata                           bigdata      000000
__Hbigram                            bigram       000000
__Hbss                               bss          000000
__HbssBANK0                          bssBANK0     000000
__HbssBANK1                          bssBANK1     000000
__HbssBIGRAM                         bssBIGRAM    000000
__HbssCOMRAM                         bssCOMRAM    000000
__Hcinit                             cinit        000000
__Hclrtext                           clrtext      000000
__Hcomram                            comram       000000
__Hconfig                            config       30000E
__Hconst                             const        000000
__HcstackBANK0                       cstackBANK0  000000
__HcstackCOMRAM                      cstackCOMRAM 000000
__Hdata                              data         000000
__HdataBANK0                         dataBANK0    000000
__HdataCOMRAM                        dataCOMRAM   000000
__Heeprom_data                       eeprom_data  000000
__Hend_init                          end_init     00001A
__Hfarbss                            farbss       000000
__Hfardata                           fardata      000000
__Hibigdata                          ibigdata     000000
__Hidata                             idata        000000
__HidataBANK0                        idataBANK0   000000
__HidataCOMRAM                       idataCOMRAM  000000
__Hidloc                             idloc        200008
__Hifardata                          ifardata     000000
__Hinit                              init         000016
__Hintcode                           intcode      000016
__Hintcode_body                      intcode_body 000000
__Hintcodelo                         intcodelo    000016
__Hintentry                          intentry     000000
__Hintret                            intret       000000
__Hintsave_regs                      intsave_regs 000000
__Hirdata                            irdata       000000
__Hmediumconst                       mediumconst  000000
__HnvFARRAM                          nvFARRAM     000000
__Hnvbit                             nvbit        000000
__Hnvrram                            nvrram       000000
__Hparam                             rparam       000000
__Hpowerup                           powerup      000016
__Hram                               ram          000000
__Hramtop                            ramtop       000300
__Hrbit                              rbit         000000
__Hrbss                              rbss         000000
__Hrdata                             rdata        000000
__Hreset_vec                         reset_vec    000004
__Hrparam                            rparam       000000
__Hsfr                               sfr          000000
__Hsmallconst                        smallconst   0003C6
__Hspace_0                           (abs)        30000E
__Hspace_1                           (abs)        0002F4
__Hspace_2                           (abs)        000000
__Hstack                             stack        000000
__Hstruct                            struct       000000
__Htemp                              temp         00005D
__Htext                              text         000000
__Htext0                             text0        000000
__Htext1                             text1        000000
__Htext10                            text10       000000
__Htext11                            text11       000000
__Htext12                            text12       000000
__Htext13                            text13       000000
__Htext14                            text14       000000
__Htext15                            text15       000000
__Htext16                            text16       000000
__Htext17                            text17       000000
__Htext18                            text18       000000
__Htext19                            text19       000000
__Htext2                             text2        000000
__Htext20                            text20       000000
__Htext21                            text21       000000
__Htext22                            text22       000000
__Htext23                            text23       000000
__Htext24                            text24       000000
__Htext25                            text25       000000
__Htext26                            text26       000000
__Htext27                            text27       000000
__Htext28                            text28       000000
__Htext29                            text29       000000
__Htext3                             text3        000000
__Htext30                            text30       000000
__Htext31                            text31       000000
__Htext32                            text32       000000
__Htext33                            text33       000000
__Htext34                            text34       000000
__Htext35                            text35       000000
__Htext36                            text36       000000
__Htext37                            text37       000000
__Htext38                            text38       000000
__Htext39                            text39       000000
__Htext4                             text4        000000
__Htext40                            text40       000000
__Htext41                            text41       000000
__Htext42                            text42       000000
__Htext43                            text43       000000
__Htext44                            text44       000000
__Htext45                            text45       000000
__Htext46                            text46       000000
__Htext47                            text47       000000
__Htext48                            text48       000000
__Htext49                            text49       000000
__Htext5                             text5        000000
__Htext50                            text50       000000
__Htext51                            text51       000000
__Htext52                            text52       000000
__Htext54                            text54       000000
__Htext55                            text55       000000
__Htext56                            text56       000000
__Htext57                            text57       000000
__Htext58                            text58       000000
__Htext59                            text59       000000
__Htext6                             text6        000000
__Htext60                            text60       000000
__Htext61                            text61       000000
__Htext62                            text62       000000
__Htext63                            text63       000000
__Htext64                            text64       000000
__Htext65                            text65       000000
__Htext66                            text66       000000
__Htext67                            text67       000000
__Htext7                             text7        000000
__Htext8                             text8        000000
__Htext9                             text9        000000
__LRAM                               (abs)        000001
__Labs1                              abs1         000000
__Lbank0                             bank0        000000
__Lbank1                             bank1        000000
__Lbank2                             bank2        000000
__Lbigbss                            bigbss       000000
__Lbigdata                           bigdata      000000
__Lbigram                            bigram       000000
__Lbss                               bss          000000
__LbssBANK0                          bssBANK0     000000
__LbssBANK1                          bssBANK1     000000
__LbssBIGRAM                         bssBIGRAM    000000
__LbssCOMRAM                         bssCOMRAM    000000
__Lcinit                             cinit        000000
__Lclrtext                           clrtext      000000
__Lcomram                            comram       000000
__Lconfig                            config       300000
__Lconst                             const        000000
__LcstackBANK0                       cstackBANK0  000000
__LcstackCOMRAM                      cstackCOMRAM 000000
__Ldata                              data         000000
__LdataBANK0                         dataBANK0    000000
__LdataCOMRAM                        dataCOMRAM   000000
__Leeprom_data                       eeprom_data  000000
__Lend_init                          end_init     000016
__Lfarbss                            farbss       000000
__Lfardata                           fardata      000000
__Libigdata                          ibigdata     000000
__Lidata                             idata        000000
__LidataBANK0                        idataBANK0   000000
__LidataCOMRAM                       idataCOMRAM  000000
__Lidloc                             idloc        200000
__Lifardata                          ifardata     000000
__Linit                              init         000016
__Lintcode                           intcode      000008
__Lintcode_body                      intcode_body 000000
__Lintcodelo                         intcodelo    000016
__Lintentry                          intentry     000000
__Lintret                            intret       000000
__Lintsave_regs                      intsave_regs 000000
__Lirdata                            irdata       000000
__Lmediumconst                       mediumconst  000000
__LnvFARRAM                          nvFARRAM     000000
__Lnvbit                             nvbit        000000
__Lnvrram                            nvrram       000000
__Lparam                             rparam       000000
__Lpowerup                           powerup      000016
__Lram                               ram          000000
__Lramtop                            ramtop       000300
__Lrbit                              rbit         000000
__Lrbss                              rbss         000000
__Lrdata                             rdata        000000
__Lreset_vec                         reset_vec    000000
__Lrparam                            rparam       000000
__Lsfr                               sfr          000000
__Lsmallconst                        smallconst   000300
__Lspace_0                           (abs)        000000
__Lspace_1                           (abs)        000000
__Lspace_2                           (abs)        000000
__Lstack                             stack        000000
__Lstruct                            struct       000000
__Ltemp                              temp         00005C
__Ltext                              text         000000
__Ltext0                             text0        000000
__Ltext1                             text1        000000
__Ltext10                            text10       000000
__Ltext11                            text11       000000
__Ltext12                            text12       000000
__Ltext13                            text13       000000
__Ltext14                            text14       000000
__Ltext15                            text15       000000
__Ltext16                            text16       000000
__Ltext17                            text17       000000
__Ltext18                            text18       000000
__Ltext19                            text19       000000
__Ltext2                             text2        000000
__Ltext20                            text20       000000
__Ltext21                            text21       000000
__Ltext22                            text22       000000
__Ltext23                            text23       000000
__Ltext24                            text24       000000
__Ltext25                            text25       000000
__Ltext26                            text26       000000
__Ltext27                            text27       000000
__Ltext28                            text28       000000
__Ltext29                            text29       000000
__Ltext3                             text3        000000
__Ltext30                            text30       000000
__Ltext31                            text31       000000
__Ltext32                            text32       000000
__Ltext33                            text33       000000
__Ltext34                            text34       000000
__Ltext35                            text35       000000
__Ltext36                            text36       000000
__Ltext37                            text37       000000
__Ltext38                            text38       000000
__Ltext39                            text39       000000
__Ltext4                             text4        000000
__Ltext40                            text40       000000
__Ltext41                            text41       000000
__Ltext42                            text42       000000
__Ltext43                            text43       000000
__Ltext44                            text44       000000
__Ltext45                            text45       000000
__Ltext46                            text46       000000
__Ltext47                            text47       000000
__Ltext48                            text48       000000
__Ltext49                            text49       000000
__Ltext5                             text5        000000
__Ltext50                            text50       000000
__Ltext51                            text51       000000
__Ltext52                            text52       000000
__Ltext54                            text54       000000
__Ltext55                            text55       000000
__Ltext56                            text56       000000
__Ltext57                            text57       000000
__Ltext58                            text58       000000
__Ltext59                            text59       000000
__Ltext6                             text6        000000
__Ltext60                            text60       000000
__Ltext61                            text61       000000
__Ltext62                            text62       000000
__Ltext63                            text63       000000
__Ltext64                            text64       000000
__Ltext65                            text65       000000
__Ltext66                            text66       000000
__Ltext67                            text67       000000
__Ltext7                             text7        000000
__Ltext8                             text8        000000
__Ltext9                             text9        000000
__PRIMASK_temp                       bssCOMRAM    000040
__S0                                 (abs)        30000E
__S1                                 (abs)        0002F4
__S2                                 (abs)        000000
___awdiv                             text21       001BDE
___awdiv@counter                     cstackBANK0  000064
___awdiv@dividend                    cstackBANK0  000060
___awdiv@divisor                     cstackBANK0  000062
___awdiv@quotient                    cstackBANK0  000066
___awdiv@sign                        cstackBANK0  000065
___awmod                             text49       001F5C
___awmod@counter                     cstackBANK0  000064
___awmod@dividend                    cstackBANK0  000060
___awmod@divisor                     cstackBANK0  000062
___awmod@sign                        cstackBANK0  000065
___inthi_sp                          stack        000000
___intlo_sp                          stack        000000
___lbmod                             text35       0025AA
___lbmod@counter                     cstackBANK0  000062
___lbmod@dividend                    cstackBANK0  000061
___lbmod@divisor                     cstackBANK0  000060
___lbmod@rem                         cstackBANK0  000063
___lwdiv                             text28       0021FA
___lwdiv@counter                     cstackBANK0  000072
___lwdiv@dividend                    cstackBANK0  00006C
___lwdiv@divisor                     cstackBANK0  00006E
___lwdiv@quotient                    cstackBANK0  000070
___param_bank                        (abs)        000010
___rparam_used                       (abs)        000001
___sp                                stack        000000
___wmul                              text48       0026DE
___wmul@multiplicand                 cstackBANK0  000068
___wmul@multiplier                   cstackBANK0  000066
___wmul@product                      cstackBANK0  00006A
__accesstop                          (abs)        000060
__activetblptr                       (abs)        000002
__end_of_BitNum2SetMask              smallconst   000321
__end_of_BusErrorResponse            text66       002962
__end_of_CanErrorResponse            text65       002960
__end_of_CanRCVResponse              text58       00292C
__end_of_CanXmitResponse             text57       002958
__end_of_Check4Keystroke             text37       00295C
__end_of_DistList00                  smallconst   00036B
__end_of_DotStar_Init                text45       001EB8
__end_of_DotStar_Show                text23       00156A
__end_of_ES_CheckUserEvents          text36       0025AA
__end_of_ES_DeQueue                  text34       001444
__end_of_ES_EnQueueFIFO              text47       001A48
__end_of_ES_EventList                smallconst   000367
__end_of_ES_GetMSBitSet              text6        001F5C
__end_of_ES_InitQueue                text52       00266A
__end_of_ES_Initialize               text38       001966
__end_of_ES_PostToService            text46       0022E8
__end_of_ES_Run                      text3        00187A
__end_of_ES_Timer_Init               text50       002920
__end_of_ES_Timer_InitTimer          text22       002106
__end_of_ES_Timer_StopTimer          text30       002512
__end_of_ES_Timer_Tick_Resp          text5        001680
__end_of_EventQueues                 smallconst   000365
__end_of_GetNextFrame                text11       002892
__end_of_HSV_to_RGB                  text27       00081E
__end_of_HW_Init                     text43       002840
__end_of_ISR                         intcode_body 001B16
__end_of_IdlePattern                 text20       00131C
__end_of_InitCanHardware             text33       002182
__end_of_InitCanRX_Service           text39       0027AA
__end_of_InitPatternControlService   text40       002472
__end_of_InitPins                    text32       0028AC
__end_of_InitSPI32ControlService     text41       0026A4
__end_of_ListeningPattern            text19       001108
__end_of_Nybble2MSBitNum             smallconst   000350
__end_of_PatternOff                  text14       00262E
__end_of_PausePattern                text29       002946
__end_of_PostCanRX_Service           text60       002904
__end_of_PostPatternControlService   text25       0028D8
__end_of_PostSPI32ControlService     text26       00285C
__end_of_ProcessReceive              text59       00241C
__end_of_ResetPattern                text13       00293E
__end_of_RunCanRX_Service            text7        001D56
__end_of_RunPatternControlService    text8        001BDE
__end_of_RunSPI32ControlService      text9        001786
__end_of_SPI32_EOTResponse           text54       0026DE
__end_of_SPI32_Init                  text42       002952
__end_of_SPI32_SendFrame             text10       0024C4
__end_of_SPI32_TransmitFrames        text24       00277A
__end_of_ServDescList                smallconst   00035C
__end_of_SetPattern                  text31       002936
__end_of_SetupPattern                text44       002912
__end_of_ShowPattern                 text15       0027F8
__end_of_SpeakingPattern             text18       000EE6
__end_of_StopPattern                 text12       0027D2
__end_of_ThinkingPattern             text17       000CC4
__end_of_Timer2PostFunc              smallconst   000341
__end_of_UpdatePattern               text16       000AA2
__end_of__HW_Process_Pending_Ints    text4        0028C2
__end_of__HW_Timer_Init              text51       002878
__end_of___awdiv                     text21       001C9C
__end_of___awmod                     text49       001FFE
__end_of___lbmod                     text35       0025EE
__end_of___lwdiv                     text28       002272
__end_of___wmul                      text48       002714
__end_of__initialization             cinit        0021EC
__end_of_main                        text0        002086
__end_of_printf                      text1        002748
__end_of_putch                       text2        00295E
__end_ofi2_ES_EnQueueFIFO            text62       001E0A
__end_ofi2_ES_PostToService          text61       0023C2
__end_ofi2_PostSPI32ControlService   text56       0028EE
__end_ofi2_SPI32_SendFrame           text55       002560
__end_ofi2___awmod                   text64       002358
__end_ofi2___wmul                    text63       00281E
__initialization                     cinit        002182
__mediumconst                        mediumconst  000000
__pbssBANK0                          bssBANK0     0000CD
__pbssBANK1                          bssBANK1     000100
__pbssBIGRAM                         bssBIGRAM    0001B8
__pbssCOMRAM                         bssCOMRAM    000034
__pcinit                             cinit        002182
__pcstackBANK0                       cstackBANK0  000060
__pcstackCOMRAM                      cstackCOMRAM 000001
__pdataBANK0                         dataBANK0    0000FA
__pdataCOMRAM                        dataCOMRAM   00005B
__pidataBANK0                        idataBANK0   002946
__pidataCOMRAM                       idataCOMRAM  002962
__pintcode                           intcode      000008
__pintcode_body                      intcode_body 001A48
__psmallconst                        smallconst   000300
__ptext0                             text0        001FFE
__ptext1                             text1        002714
__ptext10                            text10       002472
__ptext11                            text11       002878
__ptext12                            text12       0027AA
__ptext13                            text13       002936
__ptext14                            text14       0025EE
__ptext15                            text15       0027D2
__ptext16                            text16       00081E
__ptext17                            text17       000AA2
__ptext18                            text18       000CC4
__ptext19                            text19       000EE6
__ptext2                             text2        00295C
__ptext20                            text20       001108
__ptext21                            text21       001BDE
__ptext22                            text22       002086
__ptext23                            text23       001444
__ptext24                            text24       002748
__ptext25                            text25       0028C2
__ptext26                            text26       002840
__ptext27                            text27       0003C6
__ptext28                            text28       0021FA
__ptext29                            text29       00293E
__ptext3                             text3        001786
__ptext30                            text30       0024C4
__ptext31                            text31       00292C
__ptext32                            text32       002892
__ptext33                            text33       002106
__ptext34                            text34       00131C
__ptext35                            text35       0025AA
__ptext36                            text36       002560
__ptext37                            text37       002958
__ptext38                            text38       00187A
__ptext39                            text39       00277A
__ptext4                             text4        0028AC
__ptext40                            text40       00241C
__ptext41                            text41       00266A
__ptext42                            text42       00294C
__ptext43                            text43       00281E
__ptext44                            text44       002904
__ptext45                            text45       001E0A
__ptext46                            text46       002272
__ptext47                            text47       001966
__ptext48                            text48       0026DE
__ptext49                            text49       001F5C
__ptext5                             text5        00156A
__ptext50                            text50       002912
__ptext51                            text51       00285C
__ptext52                            text52       00262E
__ptext54                            text54       0026A4
__ptext55                            text55       002512
__ptext56                            text56       0028D8
__ptext57                            text57       002952
__ptext58                            text58       002920
__ptext59                            text59       0023C2
__ptext6                             text6        001EB8
__ptext60                            text60       0028EE
__ptext61                            text61       002358
__ptext62                            text62       001D56
__ptext63                            text63       0027F8
__ptext64                            text64       0022E8
__ptext65                            text65       00295E
__ptext66                            text66       002960
__ptext67                            text67       000000
__ptext7                             text7        001C9C
__ptext8                             text8        001B16
__ptext9                             text9        001680
__ramtop                             ramtop       000300
__size_of_BusErrorResponse           (abs)        000000
__size_of_CanErrorResponse           (abs)        000000
__size_of_CanRCVResponse             (abs)        000000
__size_of_CanXmitResponse            (abs)        000000
__size_of_Check4Keystroke            (abs)        000000
__size_of_DotStar_Init               (abs)        000000
__size_of_DotStar_Show               (abs)        000000
__size_of_ES_CheckUserEvents         (abs)        000000
__size_of_ES_DeQueue                 (abs)        000000
__size_of_ES_EnQueueFIFO             (abs)        000000
__size_of_ES_GetMSBitSet             (abs)        000000
__size_of_ES_InitQueue               (abs)        000000
__size_of_ES_Initialize              (abs)        000000
__size_of_ES_PostToService           (abs)        000000
__size_of_ES_Run                     (abs)        000000
__size_of_ES_Timer_Init              (abs)        000000
__size_of_ES_Timer_InitTimer         (abs)        000000
__size_of_ES_Timer_StopTimer         (abs)        000000
__size_of_ES_Timer_Tick_Resp         (abs)        000000
__size_of_GetNextFrame               (abs)        000000
__size_of_HSV_to_RGB                 (abs)        000000
__size_of_HW_Init                    (abs)        000000
__size_of_ISR                        (abs)        000000
__size_of_IdlePattern                (abs)        000000
__size_of_InitCanHardware            (abs)        000000
__size_of_InitCanRX_Service          (abs)        000000
__size_of_InitPatternControlService  (abs)        000000
__size_of_InitPins                   (abs)        000000
__size_of_InitSPI32ControlService    (abs)        000000
__size_of_ListeningPattern           (abs)        000000
__size_of_PatternOff                 (abs)        000000
__size_of_PausePattern               (abs)        000000
__size_of_PostCanRX_Service          (abs)        000000
__size_of_PostPatternControlService  (abs)        000000
__size_of_PostSPI32ControlService    (abs)        000000
__size_of_ProcessReceive             (abs)        000000
__size_of_ResetPattern               (abs)        000000
__size_of_RunCanRX_Service           (abs)        000000
__size_of_RunPatternControlService   (abs)        000000
__size_of_RunSPI32ControlService     (abs)        000000
__size_of_SPI32_EOTResponse          (abs)        000000
__size_of_SPI32_Init                 (abs)        000000
__size_of_SPI32_SendFrame            (abs)        000000
__size_of_SPI32_TransmitFrames       (abs)        000000
__size_of_SetPattern                 (abs)        000000
__size_of_SetupPattern               (abs)        000000
__size_of_ShowPattern                (abs)        000000
__size_of_SpeakingPattern            (abs)        000000
__size_of_StopPattern                (abs)        000000
__size_of_ThinkingPattern            (abs)        000000
__size_of_UpdatePattern              (abs)        000000
__size_of__HW_Process_Pending_Ints   (abs)        000000
__size_of__HW_Timer_Init             (abs)        000000
__size_of___awdiv                    (abs)        000000
__size_of___awmod                    (abs)        000000
__size_of___lbmod                    (abs)        000000
__size_of___lwdiv                    (abs)        000000
__size_of___wmul                     (abs)        000000
__size_of_main                       (abs)        000000
__size_of_printf                     (abs)        000000
__size_of_putch                      (abs)        000000
__size_ofi2_ES_EnQueueFIFO           (abs)        000000
__size_ofi2_ES_PostToService         (abs)        000000
__size_ofi2_PostSPI32ControlService  (abs)        000000
__size_ofi2_SPI32_SendFrame          (abs)        000000
__size_ofi2___awmod                  (abs)        000000
__size_ofi2___wmul                   (abs)        000000
__smallconst                         smallconst   000300
_main                                text0        001FFE
_printf                              text1        002714
_putch                               text2        00295C
btemp                                temp         00005C
end_of_initialization                cinit        0021EC
i2ES_EnQueueFIFO@Event2Add           cstackCOMRAM 00000F
i2ES_EnQueueFIFO@SaveCrit            cstackCOMRAM 000015
i2ES_EnQueueFIFO@pBlock              cstackCOMRAM 00000D
i2ES_EnQueueFIFO@pThisQueue          cstackCOMRAM 000016
i2ES_PostToService@TheEvent          cstackCOMRAM 000018
i2ES_PostToService@WhichService      cstackCOMRAM 00001D
i2PostSPI32ControlService@ThisEvent  cstackCOMRAM 00001E
i2SPI32_SendFrame@newFrame           cstackCOMRAM 000001
i2_ES_EnQueueFIFO                    text62       001D56
i2_ES_PostToService                  text61       002358
i2_PostSPI32ControlService           text56       0028D8
i2_SPI32_SendFrame                   text55       002512
i2___awmod                           text64       0022E8
i2___awmod@counter                   cstackCOMRAM 000005
i2___awmod@dividend                  cstackCOMRAM 000001
i2___awmod@divisor                   cstackCOMRAM 000003
i2___awmod@sign                      cstackCOMRAM 000006
i2___wmul                            text63       0027F8
i2___wmul@multiplicand               cstackCOMRAM 000009
i2___wmul@multiplier                 cstackCOMRAM 000007
i2___wmul@product                    cstackCOMRAM 00000B
int$flags                            temp         00005C
int_func                             intcode_body 001A48
intlevel0                            text         000000
intlevel1                            text         000000
intlevel2                            text         000000
intlevel3                            text         000000
main@ErrorType                       cstackBANK0  0000CC
printf@ap                            cstackBANK0  000062
printf@c                             cstackBANK0  000064
printf@f                             cstackBANK0  000060
stackhi                              (abs)        0002FF
stacklo                              (abs)        0002F4
start                                init         000016
start_initialization                 cinit        002182


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 25 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  ErrorType       1  108[BANK0 ] enum E15651
 Return value:  Size  Location     Type
                  2  627[None  ] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels required when called:   16
 This function calls:
		_ES_Initialize
		_ES_Run
		_printf
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _printf *****************
 Defined at:
		line 464 in file "/Applications/microchip/xc8/v1.38/sources/common/doprnt.c"
 Parameters:    Size  Location     Type
  f               2    0[BANK0 ] PTR const unsigned char 
		 -> STR_4(15), STR_3(23), STR_2(24), STR_1(27), 
 Auto vars:     Size  Location     Type
  tmpval          4    0        struct .
  cp              3    0        PTR const unsigned char 
  ap              2    2[BANK0 ] PTR void [1]
		 -> ?_printf(2), 
  len             2    0        unsigned int 
  val             2    0        unsigned int 
  c               1    4[BANK0 ] char 
  flag            1    0        unsigned char 
  prec            1    0        char 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       3       0       0
      Temps:          0       0       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_putch
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _putch *****************
 Defined at:
		line 7 in file "/Applications/microchip/xc8/v1.38/sources/common/putch.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1    0[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_printf
 This function uses a non-reentrant model


 *************** function _ES_Run *****************
 Defined at:
		line 277 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  HighestPrior    1  107[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E15499
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       4       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   15
 This function calls:
		_ES_CheckUserEvents
		_ES_DeQueue
		_ES_GetMSBitSet
		_RunCanRX_Service
		_RunPatternControlService
		_RunSPI32ControlService
		__HW_Process_Pending_Ints
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function __HW_Process_Pending_Ints *****************
 Defined at:
		line 225 in file "ES_Port.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   12
 This function calls:
		_ES_Timer_Tick_Resp
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _ES_Timer_Tick_Resp *****************
 Defined at:
		line 284 in file "ES_Timers.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       4       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   11
 This function calls:
		Absolute function
		_ES_GetMSBitSet
		_PostPatternControlService
		_PostSPI32ControlService
 This function is called by:
		__HW_Process_Pending_Ints
 This function uses a non-reentrant model


 *************** function _ES_GetMSBitSet *****************
 Defined at:
		line 79 in file "ES_LookupTables.c"
 Parameters:    Size  Location     Type
  Val2Check       2    0[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  LoopCntr        1    9[BANK0 ] char 
  Nybble2Test     1    8[BANK0 ] unsigned char 
  ReturnVal       1    7[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       3       0       0
      Temps:          0       5       0       0
      Totals:         0      10       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_ES_Run
		_ES_Timer_Tick_Resp
 This function uses a non-reentrant model


 *************** function _RunCanRX_Service *****************
 Defined at:
		line 138 in file "CanRX_Service.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   90[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  PatternEvent    3   96[BANK0 ] struct ES_Event_t
  ReturnEvent     3   93[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  3   90[BANK0 ] struct ES_Event_t
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       6       0       0
      Temps:          0       0       0       0
      Totals:         0       9       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   11
 This function calls:
		_InitCanHardware
		_InitPins
		_PostPatternControlService
		_SetPattern
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _RunPatternControlService *****************
 Defined at:
		line 157 in file "Pattern_ControlService.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   90[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  testEvent       3   96[BANK0 ] struct ES_Event_t
  ReturnEvent     3   93[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  3   90[BANK0 ] struct ES_Event_t
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       6       0       0
      Temps:          0       0       0       0
      Totals:         0       9       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   14
 This function calls:
		_PausePattern
		_PostPatternControlService
		_ShowPattern
		_StopPattern
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _RunSPI32ControlService *****************
 Defined at:
		line 138 in file "SPI32_ControlService.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   90[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  ReturnEvent     3  100[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  3   90[BANK0 ] struct ES_Event_t
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       3       0       0
      Temps:          0       7       0       0
      Totals:         0      13       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_GetNextFrame
		_SPI32_SendFrame
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _SPI32_SendFrame *****************
 Defined at:
		line 86 in file "SPI32_HW.c"
 Parameters:    Size  Location     Type
  newFrame        4    0[BANK0 ] unsigned long 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       0       0       0
      Temps:          0       4       0       0
      Totals:         0       8       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_RunSPI32ControlService
 This function uses a non-reentrant model


 *************** function _GetNextFrame *****************
 Defined at:
		line 258 in file "SPI32_ControlService.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4    0[BANK0 ] unsigned long 
 Registers used:
		fsr2l, fsr2h
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_RunSPI32ControlService
 This function uses a non-reentrant model


 *************** function _StopPattern *****************
 Defined at:
		line 283 in file "Pattern_ControlService.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   13
 This function calls:
		_DotStar_Show
		_ES_Timer_StopTimer
		_PatternOff
		_ResetPattern
 This function is called by:
		_RunPatternControlService
 This function uses a non-reentrant model


 *************** function _ResetPattern *****************
 Defined at:
		line 192 in file "Pattern_RGBPatterns.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_StopPattern
 This function uses a non-reentrant model


 *************** function _PatternOff *****************
 Defined at:
		line 84 in file "Pattern_RGBPatterns.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] PTR unsigned int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_StopPattern
 This function uses a non-reentrant model


 *************** function _ShowPattern *****************
 Defined at:
		line 273 in file "Pattern_ControlService.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   13
 This function calls:
		_DotStar_Show
		_ES_Timer_InitTimer
		_UpdatePattern
 This function is called by:
		_RunPatternControlService
 This function uses a non-reentrant model


 *************** function _UpdatePattern *****************
 Defined at:
		line 92 in file "Pattern_RGBPatterns.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1   39[BANK0 ] unsigned char 
  i               1   38[BANK0 ] unsigned char 
  i               1   37[BANK0 ] unsigned char 
  i               1   36[BANK0 ] unsigned char 
  i               1   35[BANK0 ] unsigned char 
  patternID       1   34[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2   32[BANK0 ] PTR unsigned int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       6       0       0
      Temps:          0       0       0       0
      Totals:         0       8       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_IdlePattern
		_ListeningPattern
		_SpeakingPattern
		_ThinkingPattern
		___awmod
		___lwdiv
		___wmul
 This function is called by:
		_ShowPattern
 This function uses a non-reentrant model


 *************** function _ThinkingPattern *****************
 Defined at:
		line 197 in file "Pattern_RGBPatterns.c"
 Parameters:    Size  Location     Type
  pattern         1    wreg     unsigned char 
  pixel           1    8[BANK0 ] unsigned char 
  stepCount       1    9[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  pattern         1    0[COMRAM] unsigned char 
  pixelHSV        2   21[BANK0 ] unsigned int 
  head            1   31[BANK0 ] unsigned char 
  x               1   30[BANK0 ] unsigned char 
  hue             1   29[BANK0 ] unsigned char 
  val             1   28[BANK0 ] unsigned char 
  sat             1   27[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    8[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0      11       0       0
      Temps:          0      11       0       0
      Totals:         0      24       0       0
Total ram usage:       24 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		___awdiv
		___awmod
 This function is called by:
		_UpdatePattern
 This function uses a non-reentrant model


 *************** function _SpeakingPattern *****************
 Defined at:
		line 237 in file "Pattern_RGBPatterns.c"
 Parameters:    Size  Location     Type
  pattern         1    wreg     unsigned char 
  pixel           1    8[BANK0 ] unsigned char 
  stepCount       1    9[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  pattern         1    0[COMRAM] unsigned char 
  pixelHSV        2   21[BANK0 ] unsigned int 
  head            1   31[BANK0 ] unsigned char 
  x               1   30[BANK0 ] unsigned char 
  hue             1   29[BANK0 ] unsigned char 
  val             1   28[BANK0 ] unsigned char 
  sat             1   27[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    8[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0      11       0       0
      Temps:          0      11       0       0
      Totals:         0      24       0       0
Total ram usage:       24 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		___awdiv
		___awmod
 This function is called by:
		_UpdatePattern
 This function uses a non-reentrant model


 *************** function _ListeningPattern *****************
 Defined at:
		line 217 in file "Pattern_RGBPatterns.c"
 Parameters:    Size  Location     Type
  pattern         1    wreg     unsigned char 
  pixel           1    8[BANK0 ] unsigned char 
  stepCount       1    9[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  pattern         1    0[COMRAM] unsigned char 
  pixelHSV        2   21[BANK0 ] unsigned int 
  head            1   31[BANK0 ] unsigned char 
  x               1   30[BANK0 ] unsigned char 
  hue             1   29[BANK0 ] unsigned char 
  val             1   28[BANK0 ] unsigned char 
  sat             1   27[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    8[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0      11       0       0
      Temps:          0      11       0       0
      Totals:         0      24       0       0
Total ram usage:       24 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		___awdiv
		___awmod
 This function is called by:
		_UpdatePattern
 This function uses a non-reentrant model


 *************** function _IdlePattern *****************
 Defined at:
		line 257 in file "Pattern_RGBPatterns.c"
 Parameters:    Size  Location     Type
  pattern         1    wreg     unsigned char 
  pixel           1    8[BANK0 ] unsigned char 
  stepCount       1    9[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  pattern         1    0[COMRAM] unsigned char 
  pixelHSV        2   22[BANK0 ] unsigned int 
  head            1   31[BANK0 ] unsigned char 
  x               1   30[BANK0 ] unsigned char 
  val             1   29[BANK0 ] unsigned char 
  sat             1   28[BANK0 ] unsigned char 
  hue             1   21[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    8[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0      11       0       0
      Temps:          0      11       0       0
      Totals:         0      24       0       0
Total ram usage:       24 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		___awdiv
		___awmod
 This function is called by:
		_UpdatePattern
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 8 in file "/Applications/microchip/xc8/v1.38/sources/common/awdiv.c"
 Parameters:    Size  Location     Type
  dividend        2    0[BANK0 ] int 
  divisor         2    2[BANK0 ] int 
 Auto vars:     Size  Location     Type
  quotient        2    6[BANK0 ] int 
  sign            1    5[BANK0 ] unsigned char 
  counter         1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       4       0       0
      Temps:          0       0       0       0
      Totals:         0       8       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_ThinkingPattern
		_ListeningPattern
		_SpeakingPattern
		_IdlePattern
 This function uses a non-reentrant model


 *************** function _ES_Timer_InitTimer *****************
 Defined at:
		line 229 in file "ES_Timers.c"
 Parameters:    Size  Location     Type
  Num             1    wreg     unsigned char 
  NewTime         2    0[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  Num             1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E15477
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       1       0       0
      Temps:          0       2       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_ShowPattern
 This function uses a non-reentrant model


 *************** function _DotStar_Show *****************
 Defined at:
		line 76 in file "Pattern_DotStarLED.c"
 Parameters:    Size  Location     Type
  patternPoint    2   69[BANK0 ] PTR unsigned int 
		 -> PixelPattern(152), 
 Auto vars:     Size  Location     Type
  i               1   89[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       1       0       0
      Temps:          0      18       0       0
      Totals:         0      21       0       0
Total ram usage:       21 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   12
 This function calls:
		_HSV_to_RGB
		_SPI32_TransmitFrames
 This function is called by:
		_ShowPattern
		_StopPattern
 This function uses a non-reentrant model


 *************** function _SPI32_TransmitFrames *****************
 Defined at:
		line 239 in file "SPI32_ControlService.c"
 Parameters:    Size  Location     Type
  framePointer    2   32[BANK0 ] PTR unsigned long 
		 -> PixelFrames(316), 
  numFrames       1   34[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  transmitEven    3   35[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       3       0       0
      Temps:          0       0       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   11
 This function calls:
		_PostSPI32ControlService
 This function is called by:
		_DotStar_Show
 This function uses a non-reentrant model


 *************** function _PostPatternControlService *****************
 Defined at:
		line 135 in file "Pattern_ControlService.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   29[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		_ES_PostToService
 This function is called by:
		_RunPatternControlService
		_RunCanRX_Service
		_ES_Timer_Tick_Resp
		_PostToList
 This function uses a non-reentrant model


 *************** function _PostSPI32ControlService *****************
 Defined at:
		line 117 in file "SPI32_ControlService.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   29[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		_ES_PostToService
 This function is called by:
		_SPI32_TransmitFrames
		_ES_Timer_Tick_Resp
		_PostToList
 This function uses a non-reentrant model


 *************** function _HSV_to_RGB *****************
 Defined at:
		line 49 in file "Pattern_HSV_Convert.c"
 Parameters:    Size  Location     Type
  HSV_Value       2   19[BANK0 ] PTR unsigned long 
		 -> PixelFrames(316), 
 Auto vars:     Size  Location     Type
  v               2   67[BANK0 ] unsigned int 
  p               2   65[BANK0 ] unsigned int 
  s               2   63[BANK0 ] unsigned int 
  t               2   59[BANK0 ] unsigned int 
  q               2   57[BANK0 ] unsigned int 
  b               2   55[BANK0 ] unsigned int 
  g               2   53[BANK0 ] unsigned int 
  r               2   51[BANK0 ] unsigned int 
  fpart           2   49[BANK0 ] unsigned int 
  region          2   47[BANK0 ] unsigned int 
  h               2   45[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0      24       0       0
      Temps:          0      24       0       0
      Totals:         0      50       0       0
Total ram usage:       50 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		___lwdiv
		___wmul
 This function is called by:
		_DotStar_Show
 This function uses a non-reentrant model


 *************** function ___lwdiv *****************
 Defined at:
		line 8 in file "/Applications/microchip/xc8/v1.38/sources/common/lwdiv.c"
 Parameters:    Size  Location     Type
  dividend        2   12[BANK0 ] unsigned int 
  divisor         2   14[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  quotient        2   16[BANK0 ] unsigned int 
  counter         1   18[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2   12[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       3       0       0
      Temps:          0       0       0       0
      Totals:         0       7       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_UpdatePattern
		_HSV_to_RGB
 This function uses a non-reentrant model


 *************** function _PausePattern *****************
 Defined at:
		line 296 in file "Pattern_ControlService.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_ES_Timer_StopTimer
 This function is called by:
		_RunPatternControlService
 This function uses a non-reentrant model


 *************** function _ES_Timer_StopTimer *****************
 Defined at:
		line 205 in file "ES_Timers.c"
 Parameters:    Size  Location     Type
  Num             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  Num             1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E15477
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       4       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_StopPattern
		_PausePattern
 This function uses a non-reentrant model


 *************** function _SetPattern *****************
 Defined at:
		line 248 in file "Pattern_ControlService.c"
 Parameters:    Size  Location     Type
  PatternID       1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  PatternID       1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_RunCanRX_Service
 This function uses a non-reentrant model


 *************** function _InitPins *****************
 Defined at:
		line 267 in file "CanRX_Service.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_RunCanRX_Service
 This function uses a non-reentrant model


 *************** function _InitCanHardware *****************
 Defined at:
		line 207 in file "CanRX_Service.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_RunCanRX_Service
 This function uses a non-reentrant model


 *************** function _ES_DeQueue *****************
 Defined at:
		line 164 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          2   12[BANK0 ] PTR struct ES_Event_t
		 -> Queue2(12), Queue1(12), Queue0(12), 
  pReturnEvent    2   14[BANK0 ] PTR struct ES_Event_t
		 -> ES_Run@ThisEvent(3), ES_RecallEvents@RecalledEvent(3), 
 Auto vars:     Size  Location     Type
  pThisQueue      2   20[BANK0 ] PTR struct .
		 -> Queue2(12), Queue1(12), Queue0(12), 
  NumLeft         1   19[BANK0 ] unsigned char 
  SaveCrit        1   18[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       4       0       0
      Temps:          0       2       0       0
      Totals:         0      10       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		___lbmod
		___wmul
 This function is called by:
		_ES_Run
		_ES_RecallEvents
 This function uses a non-reentrant model


 *************** function ___lbmod *****************
 Defined at:
		line 4 in file "/Applications/microchip/xc8/v1.38/sources/common/lbmod.c"
 Parameters:    Size  Location     Type
  dividend        1    wreg     unsigned char 
  divisor         1    0[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  dividend        1    1[BANK0 ] unsigned char 
  rem             1    3[BANK0 ] unsigned char 
  counter         1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       3       0       0
      Temps:          0       0       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_ES_DeQueue
 This function uses a non-reentrant model


 *************** function _ES_CheckUserEvents *****************
 Defined at:
		line 46 in file "ES_CheckEvents.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_Check4Keystroke
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _Check4Keystroke *****************
 Defined at:
		line 62 in file "EventCheckers.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_ES_CheckUserEvents
 This function uses a non-reentrant model


 *************** function _ES_Initialize *****************
 Defined at:
		line 242 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
  NewRate         2   33[BANK0 ] enum E15428
 Auto vars:     Size  Location     Type
  i               1   35[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E15499
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   11
 This function calls:
		_ES_InitQueue
		_ES_Timer_Init
		_InitCanRX_Service
		_InitPatternControlService
		_InitSPI32ControlService
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _InitCanRX_Service *****************
 Defined at:
		line 87 in file "CanRX_Service.c"
 Parameters:    Size  Location     Type
  Priority        1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  Priority        1   32[BANK0 ] unsigned char 
  ThisEvent       3   29[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       4       0       0
      Temps:          0       0       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		_ES_PostToService
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function _InitPatternControlService *****************
 Defined at:
		line 97 in file "Pattern_ControlService.c"
 Parameters:    Size  Location     Type
  Priority        1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  Priority        1   32[BANK0 ] unsigned char 
  ThisEvent       3   29[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       4       0       0
      Temps:          0       0       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		_DotStar_Init
		_ES_PostToService
		_SetupPattern
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function _InitSPI32ControlService *****************
 Defined at:
		line 80 in file "SPI32_ControlService.c"
 Parameters:    Size  Location     Type
  Priority        1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  Priority        1   32[BANK0 ] unsigned char 
  ThisEvent       3   29[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       4       0       0
      Temps:          0       0       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		_ES_PostToService
		_SPI32_Init
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function _SPI32_Init *****************
 Defined at:
		line 66 in file "SPI32_HW.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_HW_Init
 This function is called by:
		_InitSPI32ControlService
 This function uses a non-reentrant model


 *************** function _HW_Init *****************
 Defined at:
		line 128 in file "SPI32_HW.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_SPI32_Init
 This function uses a non-reentrant model


 *************** function _SetupPattern *****************
 Defined at:
		line 77 in file "Pattern_RGBPatterns.c"
 Parameters:    Size  Location     Type
  configs         2    0[BANK0 ] PTR unsigned char 
		 -> PatternConfigs(5), 
  numPixels       1    2[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_InitPatternControlService
 This function uses a non-reentrant model


 *************** function _DotStar_Init *****************
 Defined at:
		line 48 in file "Pattern_DotStarLED.c"
 Parameters:    Size  Location     Type
  numPixels       1    wreg     unsigned char 
  brightness      1    0[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  numPixels       1    3[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       1       0       0
      Temps:          0       2       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_InitPatternControlService
 This function uses a non-reentrant model


 *************** function _ES_PostToService *****************
 Defined at:
		line 351 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
  WhichService    1    wreg     unsigned char 
  TheEvent        3   23[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  WhichService    1   28[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       1       0       0
      Temps:          0       2       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_ES_EnQueueFIFO
 This function is called by:
		_InitPatternControlService
		_PostPatternControlService
		_InitSPI32ControlService
		_PostSPI32ControlService
		_InitCanRX_Service
 This function uses a non-reentrant model


 *************** function _ES_EnQueueFIFO *****************
 Defined at:
		line 85 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          2   12[BANK0 ] PTR struct ES_Event_t
		 -> Queue2(12), Queue1(12), Queue0(12), 
  Event2Add       3   14[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  pThisQueue      2   21[BANK0 ] PTR struct .
		 -> Queue2(12), Queue1(12), Queue0(12), 
  SaveCrit        1   20[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       5       0       0
      Locals:         0       3       0       0
      Temps:          0       3       0       0
      Totals:         0      11       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		___awmod
		___wmul
 This function is called by:
		_ES_PostToService
		_ES_PostAll
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "/Applications/microchip/xc8/v1.38/sources/common/Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    6[BANK0 ] unsigned int 
  multiplicand    2    8[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  product         2   10[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  2    6[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       2       0       0
      Temps:          0       0       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_ES_EnQueueFIFO
		_ES_DeQueue
		_UpdatePattern
		_HSV_to_RGB
		i2_ES_EnQueueFIFO
		_ES_EnQueueLIFO
 This function uses a non-reentrant model


 *************** function ___awmod *****************
 Defined at:
		line 8 in file "/Applications/microchip/xc8/v1.38/sources/common/awmod.c"
 Parameters:    Size  Location     Type
  dividend        2    0[BANK0 ] int 
  divisor         2    2[BANK0 ] int 
 Auto vars:     Size  Location     Type
  sign            1    5[BANK0 ] unsigned char 
  counter         1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       2       0       0
      Temps:          0       0       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_ES_EnQueueFIFO
		_UpdatePattern
		_ThinkingPattern
		_ListeningPattern
		_SpeakingPattern
		_IdlePattern
		i2_ES_EnQueueFIFO
 This function uses a non-reentrant model


 *************** function _ES_Timer_Init *****************
 Defined at:
		line 130 in file "ES_Timers.c"
 Parameters:    Size  Location     Type
  Rate            2    2[BANK0 ] enum E15428
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		__HW_Timer_Init
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function __HW_Timer_Init *****************
 Defined at:
		line 72 in file "ES_Port.c"
 Parameters:    Size  Location     Type
  Rate            2    0[BANK0 ] enum E15412
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_ES_Timer_Init
 This function uses a non-reentrant model


 *************** function _ES_InitQueue *****************
 Defined at:
		line 58 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          2    0[BANK0 ] PTR struct ES_Event_t
		 -> Queue2(12), Queue1(12), Queue0(12), 
  BlockSize       1    2[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  pThisQueue      2    3[BANK0 ] PTR struct .
		 -> Queue2(12), Queue1(12), Queue0(12), 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       2       0       0
      Temps:          0       0       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 112 in file "ES_Port.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:         16       0       0       0
      Totals:        16       0       0       0
Total ram usage:       16 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_BusErrorResponse
		_CanErrorResponse
		_CanRCVResponse
		_CanXmitResponse
		_SPI32_EOTResponse
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model


 *************** function _SPI32_EOTResponse *****************
 Defined at:
		line 167 in file "SPI32_HW.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  EOTevent        3   32[COMRAM] struct ES_Event_t
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         3       0       0       0
      Temps:          0       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		i2_PostSPI32ControlService
		i2_SPI32_SendFrame
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function i2_SPI32_SendFrame *****************
 Defined at:
		line 86 in file "SPI32_HW.c"
 Parameters:    Size  Location     Type
  newFrame        4    0[COMRAM] unsigned long 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         0       0       0       0
      Temps:          4       0       0       0
      Totals:         8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_SPI32_EOTResponse
 This function uses a non-reentrant model


 *************** function i2_PostSPI32ControlService *****************
 Defined at:
		line 117 in file "SPI32_ControlService.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   29[COMRAM] struct ES_Event_t
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		i2_ES_PostToService
 This function is called by:
		_SPI32_EOTResponse
 This function uses a non-reentrant model


 *************** function _CanXmitResponse *****************
 Defined at:
		line 180 in file "CanRX_Service.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function _CanRCVResponse *****************
 Defined at:
		line 185 in file "CanRX_Service.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2  145[None  ] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_ProcessReceive
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function _ProcessReceive *****************
 Defined at:
		line 281 in file "CanRX_Service.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  Event2Post      3   32[COMRAM] struct ES_Event_t
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         3       0       0       0
      Temps:          0       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_PostCanRX_Service
 This function is called by:
		_CanRCVResponse
 This function uses a non-reentrant model


 *************** function _PostCanRX_Service *****************
 Defined at:
		line 118 in file "CanRX_Service.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   29[COMRAM] struct ES_Event_t
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		i2_ES_PostToService
 This function is called by:
		_ProcessReceive
 This function uses a non-reentrant model


 *************** function i2_ES_PostToService *****************
 Defined at:
		line 351 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
  WhichService    1    wreg     unsigned char 
  TheEvent        3   23[COMRAM] struct ES_Event_t
 Auto vars:     Size  Location     Type
  WhichService    1   28[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         1       0       0       0
      Temps:          2       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		i2_ES_EnQueueFIFO
 This function is called by:
		_PostCanRX_Service
		i2_PostSPI32ControlService
 This function uses a non-reentrant model


 *************** function i2_ES_EnQueueFIFO *****************
 Defined at:
		line 85 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          2   12[COMRAM] PTR struct ES_Event_t
		 -> Queue2(12), Queue1(12), Queue0(12), 
  Event2Add       3   14[COMRAM] struct ES_Event_t
 Auto vars:     Size  Location     Type
  ES_EnQueueFI    2   21[COMRAM] PTR struct .
		 -> Queue2(12), Queue1(12), Queue0(12), 
  ES_EnQueueFI    1   20[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         5       0       0       0
      Locals:         3       0       0       0
      Temps:          3       0       0       0
      Totals:        11       0       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i2___awmod
		i2___wmul
 This function is called by:
		i2_ES_PostToService
 This function uses a non-reentrant model


 *************** function i2___wmul *****************
 Defined at:
		line 15 in file "/Applications/microchip/xc8/v1.38/sources/common/Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    6[COMRAM] unsigned int 
  multiplicand    2    8[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  __wmul          2   10[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  2    6[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		i2_ES_EnQueueFIFO
 This function uses a non-reentrant model


 *************** function i2___awmod *****************
 Defined at:
		line 8 in file "/Applications/microchip/xc8/v1.38/sources/common/awmod.c"
 Parameters:    Size  Location     Type
  dividend        2    0[COMRAM] int 
  divisor         2    2[COMRAM] int 
 Auto vars:     Size  Location     Type
  __awmod         1    5[COMRAM] unsigned char 
  __awmod         1    4[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2    0[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		i2_ES_EnQueueFIFO
 This function uses a non-reentrant model


 *************** function _CanErrorResponse *****************
 Defined at:
		line 194 in file "CanRX_Service.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function _BusErrorResponse *****************
 Defined at:
		line 199 in file "CanRX_Service.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ISR
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
ES_Queue.c
		_ES_EnQueueFIFO		CODE           	1966	0000	227
		_ES_DeQueue    		CODE           	131C	0000	297
		_ES_InitQueue  		CODE           	262E	0000	61

ES_Queue.c estimated size: 585

CanRX_Service.c
		_InitPins      		CODE           	2892	0000	27
		_CanXmitResponse		CODE           	2952	0000	7
		_CanRCVResponse		CODE           	2920	0000	13
		_InitCanRX_Service		CODE           	277A	0000	49
		_BusErrorResponse		CODE           	2960	0000	3
		_InitCanHardware		CODE           	2106	0000	125
		_CanErrorResponse		CODE           	295E	0000	3
		_RunCanRX_Service		CODE           	1C9C	0000	187
		_ProcessReceive		CODE           	23C2	0000	91
		_PostCanRX_Service		CODE           	28EE	0000	23

CanRX_Service.c estimated size: 528

/Applications/microchip/xc8/v1.38/sources/common/lwdiv.c
		___lwdiv       		CODE           	21FA	0000	121

/Applications/microchip/xc8/v1.38/sources/common/lwdiv.c estimated size: 121

ES_CheckEvents.c
		_ES_CheckUserEvents		CODE           	2560	0000	75

ES_CheckEvents.c estimated size: 75

/Applications/microchip/xc8/v1.38/sources/common/awdiv.c
		___awdiv       		CODE           	1BDE	0000	191

/Applications/microchip/xc8/v1.38/sources/common/awdiv.c estimated size: 191

Pattern_HSV_Convert.c
		_HSV_to_RGB    		CODE           	03C6	0000	1113

Pattern_HSV_Convert.c estimated size: 1113

Pattern_DotStarLED.c
		_DotStar_Init  		CODE           	1E0A	0000	175
		_DotStar_Show  		CODE           	1444	0000	295

Pattern_DotStarLED.c estimated size: 470

Pattern_RGBPatterns.c
		_ResetPattern  		CODE           	2936	0000	9
		_PatternOff    		CODE           	25EE	0000	65
		_IdlePattern   		CODE           	1108	0000	533
		_ListeningPattern		CODE           	0EE6	0000	547
		_SetupPattern  		CODE           	2904	0000	15
		_SpeakingPattern		CODE           	0CC4	0000	547
		_UpdatePattern 		CODE           	081E	0000	645
		_ThinkingPattern		CODE           	0AA2	0000	547

Pattern_RGBPatterns.c estimated size: 2908

/Applications/microchip/xc8/v1.38/sources/common/lbmod.c
		___lbmod       		CODE           	25AA	0000	69

/Applications/microchip/xc8/v1.38/sources/common/lbmod.c estimated size: 69

ES_LookupTables.c
		_ES_GetMSBitSet		CODE           	1EB8	0000	165

ES_LookupTables.c estimated size: 165

SPI32_ControlService.c
		_PostSPI32ControlService		CODE           	2840	0000	29
		_GetNextFrame  		CODE           	2878	0000	27
		_InitSPI32ControlService		CODE           	266A	0000	59
		_RunSPI32ControlService		CODE           	1680	0000	263
		_SPI32_TransmitFrames		CODE           	2748	0000	51

SPI32_ControlService.c estimated size: 429

EventCheckers.c
		_Check4Keystroke		CODE           	2958	0000	5

EventCheckers.c estimated size: 5

/Applications/microchip/xc8/v1.38/sources/common/Umul16.c
		___wmul        		CODE           	26DE	0000	55

/Applications/microchip/xc8/v1.38/sources/common/Umul16.c estimated size: 55

ES_Framework.c
		_ES_PostToService		CODE           	2272	0000	119
		_ES_Run        		CODE           	1786	0000	245
		_ES_Initialize 		CODE           	187A	0000	237

ES_Framework.c estimated size: 601

SPI32_HW.c
		_SPI32_SendFrame		CODE           	2472	0000	83
		_SPI32_EOTResponse		CODE           	26A4	0000	59
		_SPI32_Init    		CODE           	294C	0000	7
		_HW_Init       		CODE           	281E	0000	35

SPI32_HW.c estimated size: 184

shared
		_BitNum2SetMask		SMALLCONST     	0301	0000	33
		_DistList00    		SMALLCONST     	0367	0000	5
		i2_ES_EnQueueFIFO		CODE           	1D56	0000	181
		_ES_EventList  		SMALLCONST     	0365	0000	3
		i2___wmul      		CODE           	27F8	0000	39
		i2_ES_PostToService		CODE           	2358	0000	107
		_Nybble2MSBitNum		SMALLCONST     	0341	0000	16
		_EventQueues   		SMALLCONST     	035C	0000	10
		__initialization		CODE           	2182	0000	107
		i2___awmod     		CODE           	22E8	0000	113
		_Timer2PostFunc		SMALLCONST     	0321	0000	33
		_ServDescList  		SMALLCONST     	0350	0000	13
		i2_SPI32_SendFrame		CODE           	2512	0000	79
		i2_PostSPI32ControlService		CODE           	28D8	0000	23

shared estimated size: 762

Pattern_ControlService.c
		_InitPatternControlService		CODE           	241C	0000	87
		_ShowPattern   		CODE           	27D2	0000	39
		_RunPatternControlService		CODE           	1B16	0000	201
		_SetPattern    		CODE           	292C	0000	11
		_PostPatternControlService		CODE           	28C2	0000	23
		_PausePattern  		CODE           	293E	0000	9
		_StopPattern   		CODE           	27AA	0000	41

Pattern_ControlService.c estimated size: 411

ES_Port.c
		_ISR           		CODE           	0008	0000	221
		__HW_Process_Pending_Ints		CODE           	28AC	0000	23
		__HW_Timer_Init		CODE           	285C	0000	29

ES_Port.c estimated size: 273

/Applications/microchip/xc8/v1.38/sources/common/awmod.c
		___awmod       		CODE           	1F5C	0000	163

/Applications/microchip/xc8/v1.38/sources/common/awmod.c estimated size: 163

/Applications/microchip/xc8/v1.38/sources/common/putch.c
		_putch         		CODE           	295C	0000	3

/Applications/microchip/xc8/v1.38/sources/common/putch.c estimated size: 3

ES_Timers.c
		_ES_Timer_Init 		CODE           	2912	0000	15
		_ES_Timer_InitTimer		CODE           	2086	0000	129
		_ES_Timer_StopTimer		CODE           	24C4	0000	79
		_ES_Timer_Tick_Resp		CODE           	156A	0000	279

ES_Timers.c estimated size: 502

main.c
		_main          		CODE           	1FFE	0000	137

main.c estimated size: 137

/Applications/microchip/xc8/v1.38/sources/common/doprnt.c
		_printf        		CODE           	2714	0000	53

/Applications/microchip/xc8/v1.38/sources/common/doprnt.c estimated size: 53

