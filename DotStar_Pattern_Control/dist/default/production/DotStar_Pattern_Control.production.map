Microchip MPLAB XC8 Compiler V1.38 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v1.38\dat\en_msgs.txt -cs \
  -h+dist/default/production\DotStar_Pattern_Control.production.sym \
  --cmf=dist/default/production\DotStar_Pattern_Control.production.cmf -z \
  -Q18F2480 -oC:\Users\Luke\AppData\Local\Temp\sa68.2 \
  -Mdist/default/production/DotStar_Pattern_Control.production.map -E1 \
  -ver=XC8 -ASTACK=0FBh-0ffh -pstack=STACK -ACODE=00h-03FFFh \
  -ACONST=00h-03FFFh -ASMALLCONST=0300h-03FFhx61 -AMEDIUMCONST=0300h-03FFFh \
  -ACOMRAM=01h-05Fh -AABS1=00h-02FFh -ABIGRAM=01h-02FFh \
  -ARAM=060h-0FFh,0100h-01FFhx2 -ABANK0=060h-0FFh -ABANK1=0100h-01FFh \
  -ABANK2=0200h-02FFh -ASFR=0D00h-0DFFhx2,0F00h-0F5Fh,0F60h-0FFFh \
  -preset_vec=00h,intcode=08h,intcodelo,powerup,init,end_init \
  -pramtop=0300h -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST \
  -pconst=CONST -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\Luke\AppData\Local\Temp\sa68.obj \
  dist/default/production\DotStar_Pattern_Control.production.obj 

Object code version is 3.11

Machine type is 18F2480

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\Luke\AppData\Local\Temp\sa68.obj
                end_init                             16       16        4        4       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production\DotStar_Pattern_Control.production.obj
                intcode                               8        8        E        4       0
                temp                                 56       56        1        1       1
                smallconst                          300      300       B8      180       0
                text71                             3CD6     3CD6        2      1DC       0
                text70                             3CD4     3CD4        2      1DC       0
                text69                             336E     336E       84      1DC       0
                text68                             3ACE     3ACE       26      1DC       0
                text67                             3B36     3B36       20      1DC       0
                text66                             3C16     3C16       1A      1DC       0
                text65                             3C9E     3C9E        C      1DC       0
                text64                             365A     365A       70      1DC       0
                text63                             3AA8     3AA8       26      1DC       0
                text62                             3036     3036       B4      1DC       0
                text61                             36CA     36CA       6A      1DC       0
                text60                             3C5C     3C5C       16      1DC       0
                text59                             30EA     30EA       B2      1DC       0
                text58                             3C92     3C92        C      1DC       0
                text57                             3CCA     3CCA        6      1DC       0
                text56                             3C46     3C46       16      1DC       0
                text55                             388C     388C       4E      1DC       0
                text54                             39D2     39D2       3A      1DC       0
                intcode_body                       2DE2     2DE2       CE      1DC       0
                text52                             395C     395C       3C      1DC       0
                text51                             3B56     3B56       1E      1DC       0
                text50                             3C84     3C84        E      1DC       0
                text49                             34F0     34F0       7C      1DC       0
                text48                             3BFC     3BFC       1A      1DC       0
                text47                             3CAA     3CAA        A      1DC       0
                text46                             37EC     37EC       52      1DC       0
                text45                             3240     3240       A2      1DC       0
                text44                             3A0C     3A0C       36      1DC       0
                text43                             2D00     2D00       E2      1DC       0
                text42                             35E4     35E4       76      1DC       0
                text41                             3C72     3C72       12      1DC       0
                text40                             3AF4     3AF4       22      1DC       0
                text39                             3CC4     3CC4        6      1DC       0
                text38                             3998     3998       3A      1DC       0
                text37                             3734     3734       66      1DC       0
                text36                             2C14     2C14       EC      1DC       0
                text35                             38DA     38DA       44      1DC       0
                text34                             26E2     26E2      128      1DC       0
                text33                             383E     383E       4E      1DC       0
                text32                             3CBC     3CBC        8      1DC       0
                text31                             356C     356C       78      1DC       0
                text30                              F28      F28      458      1DC       0
                text29                             3BAC     3BAC       1C      1DC       0
                text28                             3B90     3B90       1C      1DC       0
                text27                             3A76     3A76       32      1DC       0
                text26                             25B4     25B4      12E      1DC       0
                text25                             33F2     33F2       80      1DC       0
                text24                             2F78     2F78       BE      1DC       0
                text23                              3B8      3B8      606      1DC       0
                text22                             17AC     17AC      34E      1DC       0
                text21                              9BE      9BE      56A      1DC       0
                text20                             2426     2426      18E      1DC       0
                text19                             2A26     2A26       FE      1DC       0
                text18                             1380     1380      42C      1DC       0
                text17                             218C     218C      29A      1DC       0
                text16                             1AFA     1AFA      34C      1DC       0
                text15                             1E46     1E46      346      1DC       0
                text14                             3B16     3B16       20      1DC       0
                text13                             391E     391E       3E      1DC       0
                text12                             3BE2     3BE2       1A      1DC       0
                text11                             3B74     3B74       1C      1DC       0
                text10                             3BC8     3BC8       1A      1DC       0
                text9                              379A     379A       52      1DC       0
                text8                              2920     2920      106      1DC       0
                text7                              2EB0     2EB0       C8      1DC       0
                text6                              319C     319C       A4      1DC       0
                text5                              280A     280A      116      1DC       0
                text4                              3C30     3C30       16      1DC       0
                text3                              2B24     2B24       F0      1DC       0
                text2                              3CD2     3CD2        2      1DC       0
                text1                              3A42     3A42       34      1DC       0
                text0                              32E2     32E2       8C      1DC       0
                cstackCOMRAM                          1        1       35        1       1
                cstackBANK0                          60       60       6E       60       1
                bssBIGRAM                           1C4      1C4      13C      1C4       1
                bssBANK1                            100      100       C4      100       1
                dataBANK0                            F3       F3        8       60       1
                bssBANK0                             CE       CE       25       60       1
                dataCOMRAM                           54       54        2        1       1
                bssCOMRAM                            36       36       1E        1       1
                cinit                              3472     3472       7E      1DC       0
                idataBANK0                         3CB4     3CB4        8      1DC       0
                idataCOMRAM                        3CD0     3CD0        2      1DC       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             16       16        4         0
                intcode                               8        8        E         0
                reset_vec                             0        0        4         0
                text71                             3CD6     3CD6        2         0
                text70                             3CD4     3CD4        2         0
                text69                             336E     336E       84         0
                text68                             3ACE     3ACE       26         0
                text67                             3B36     3B36       20         0
                text66                             3C16     3C16       1A         0
                text65                             3C9E     3C9E        C         0
                text64                             365A     365A       70         0
                text63                             3AA8     3AA8       26         0
                text62                             3036     3036       B4         0
                text61                             36CA     36CA       6A         0
                text60                             3C5C     3C5C       16         0
                text59                             30EA     30EA       B2         0
                text58                             3C92     3C92        C         0
                text57                             3CCA     3CCA        6         0
                text56                             3C46     3C46       16         0
                text55                             388C     388C       4E         0
                text54                             39D2     39D2       3A         0
                intcode_body                       2DE2     2DE2       CE         0
                text52                             395C     395C       3C         0
                text51                             3B56     3B56       1E         0
                text50                             3C84     3C84        E         0
                text49                             34F0     34F0       7C         0
                text48                             3BFC     3BFC       1A         0
                text47                             3CAA     3CAA        A         0
                text46                             37EC     37EC       52         0
                text45                             3240     3240       A2         0
                text44                             3A0C     3A0C       36         0
                text43                             2D00     2D00       E2         0
                text42                             35E4     35E4       76         0
                text41                             3C72     3C72       12         0
                text40                             3AF4     3AF4       22         0
                text39                             3CC4     3CC4        6         0
                text38                             3998     3998       3A         0
                text37                             3734     3734       66         0
                text36                             2C14     2C14       EC         0
                text35                             38DA     38DA       44         0
                text34                             26E2     26E2      128         0
                text33                             383E     383E       4E         0
                text32                             3CBC     3CBC        8         0
                text31                             356C     356C       78         0
                text30                              F28      F28      458         0
                text29                             3BAC     3BAC       1C         0
                text28                             3B90     3B90       1C         0
                text27                             3A76     3A76       32         0
                text26                             25B4     25B4      12E         0
                text25                             33F2     33F2       80         0
                text24                             2F78     2F78       BE         0
                text23                              3B8      3B8      606         0
                text22                             17AC     17AC      34E         0
                text21                              9BE      9BE      56A         0
                text20                             2426     2426      18E         0
                text19                             2A26     2A26       FE         0
                text18                             1380     1380      42C         0
                text17                             218C     218C      29A         0
                text16                             1AFA     1AFA      34C         0
                text15                             1E46     1E46      346         0
                text14                             3B16     3B16       20         0
                text13                             391E     391E       3E         0
                text12                             3BE2     3BE2       1A         0
                text11                             3B74     3B74       1C         0
                text10                             3BC8     3BC8       1A         0
                text9                              379A     379A       52         0
                text8                              2920     2920      106         0
                text7                              2EB0     2EB0       C8         0
                text6                              319C     319C       A4         0
                text5                              280A     280A      116         0
                text4                              3C30     3C30       16         0
                text3                              2B24     2B24       F0         0
                text2                              3CD2     3CD2        2         0
                text1                              3A42     3A42       34         0
                text0                              32E2     32E2       8C         0
                cinit                              3472     3472       7E         0
                idataBANK0                         3CB4     3CB4        8         0
                idataCOMRAM                        3CD0     3CD0        2         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                          300      300       B8         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                temp                                 56       56        1         1
                cstackCOMRAM                          1        1       35         1
                dataCOMRAM                           54       54        2         1
                bssCOMRAM                            36       36       1E         1

        CLASS   ABS1           

        CLASS   BIGRAM         
                bssBIGRAM                           1C4      1C4      13C         1

        CLASS   RAM            

        CLASS   BANK0          
                cstackBANK0                          60       60       6E         1
                dataBANK0                            F3       F3        8         1
                bssBANK0                             CE       CE       25         1

        CLASS   BANK1          
                bssBANK1                            100      100       C4         1

        CLASS   BANK2          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  000056  000057         1       1  COMRAM  
                intcode                        000008  000012  00001A         4       0  CODE    
                cstackBANK0                    000060  00009B  0000FB        60       1  BANK0   
                bssBANK1                       000100  0000C4  0001C4       100       1  BANK1   
                bssBIGRAM                      0001C4  00013C  000300       1C4       1  BIGRAM  
                smallconst                     000300  0000B8  0003B8       180       0  SMALLCON
                text23                         0003B8  003920  003CD8       1DC       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0000FB-0000FF                5
        BIGRAM           000057-00005F                9
                         0000FB-0000FF                5
        CODE             000004-000007                4
                         00001A-0002FF              2E6
                         003CD8-003FFF              328
        COMRAM           000057-00005F                9
        CONST            000004-000007                4
                         00001A-0002FF              2E6
                         003CD8-003FFF              328
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      003CD8-003FFF              328
        RAM              0000FB-0000FF                5
        SFR              000D00-000FFF              100
        SMALLCONST       003CD8-003FFF              100
        STACK            0000FB-0000FF                5

                                  Symbol Table

?_GetNextFrame                        cstackBANK0  000060
?_PatternOff                          cstackBANK0  000060
?_RunPatternControlService            cstackBANK0  0000BB
?_RunSPI32ControlService              cstackBANK0  0000BB
?_UpdatePattern                       cstackBANK0  000090
?___awdiv                             cstackBANK0  000060
?___awmod                             cstackBANK0  000060
?___lwdiv                             cstackBANK0  00006C
?___wmul                              cstackBANK0  000066
?_printf                              cstackBANK0  000060
?i2___awdiv                           cstackCOMRAM 000001
?i2___awmod                           cstackCOMRAM 000001
?i2___wmul                            cstackCOMRAM 000007
BrokenPinwheel@15776                  cstackBANK0  000070
BrokenPinwheel@base_hue               cstackBANK0  00006E
BrokenPinwheel@base_sat               cstackBANK0  00006F
BrokenPinwheel@cycleCounter           cstackBANK0  00006C
BrokenPinwheel@fade                   cstackBANK0  000082
BrokenPinwheel@i                      cstackBANK0  000084
BrokenPinwheel@ptrnPointer            cstackBANK0  000068
BrokenPinwheel@ptrnStepCounter        cstackBANK0  00006A
BrokenPinwheel@val                    cstackBANK0  000083
BrokenPinwheel@x                      cstackBANK0  000081
CenterBreathe@15728                   cstackBANK0  000070
CenterBreathe@base_hue                cstackBANK0  00006E
CenterBreathe@base_sat                cstackBANK0  00006F
CenterBreathe@cycleCounter            cstackBANK0  00006C
CenterBreathe@fade_thresh             cstackBANK0  00008B
CenterBreathe@i                       cstackBANK0  00008F
CenterBreathe@ptrnPointer             cstackBANK0  000068
CenterBreathe@ptrnStepCounter         cstackBANK0  00006A
CenterBreathe@pulseWidth              cstackBANK0  00008D
CenterBreathe@rising                  dataBANK0    0000F3
CenterBreathe@val                     cstackBANK0  00008C
CenterBreathe@x                       cstackBANK0  00008E
DotStar_Init@brightnessPointer        cstackBANK0  000060
DotStar_Show@i                        cstackBANK0  0000BA
DotStar_Show@patternPointer           cstackBANK0  0000A5
DoubleFadedLoop@15751                 cstackBANK0  000070
DoubleFadedLoop@base_hue              cstackBANK0  00006E
DoubleFadedLoop@base_sat              cstackBANK0  00006F
DoubleFadedLoop@cycleCounter          cstackBANK0  00006C
DoubleFadedLoop@i                     cstackBANK0  000083
DoubleFadedLoop@i_1264                cstackBANK0  000084
DoubleFadedLoop@ptrnPointer           cstackBANK0  000068
DoubleFadedLoop@ptrnStepCounter       cstackBANK0  00006A
DoubleFadedLoop@val                   cstackBANK0  000081
DoubleFadedLoop@x                     cstackBANK0  000082
ES_DeQueue@NumLeft                    cstackBANK0  000073
ES_DeQueue@SaveCrit                   cstackBANK0  000072
ES_DeQueue@pBlock                     cstackBANK0  00006C
ES_DeQueue@pReturnEvent               cstackBANK0  00006E
ES_DeQueue@pThisQueue                 cstackBANK0  000074
ES_EnQueueFIFO@Event2Add              cstackBANK0  00006E
ES_EnQueueFIFO@SaveCrit               cstackBANK0  000074
ES_EnQueueFIFO@pBlock                 cstackBANK0  00006C
ES_EnQueueFIFO@pThisQueue             cstackBANK0  000075
ES_GetMSBitSet@LoopCntr               cstackBANK0  000069
ES_GetMSBitSet@Nybble2Test            cstackBANK0  000068
ES_GetMSBitSet@ReturnVal              cstackBANK0  000067
ES_GetMSBitSet@Val2Check              cstackBANK0  000060
ES_InitQueue@BlockSize                cstackBANK0  000062
ES_InitQueue@pBlock                   cstackBANK0  000060
ES_InitQueue@pThisQueue               cstackBANK0  000063
ES_Initialize@NewRate                 cstackBANK0  000081
ES_Initialize@i                       cstackBANK0  000083
ES_PostToService@TheEvent             cstackBANK0  000077
ES_PostToService@WhichService         cstackBANK0  00007C
ES_Run@HighestPrior                   cstackBANK0  0000CC
ES_Run@ThisEvent                      bssBANK0     0000ED
ES_Timer_Init@Rate                    cstackBANK0  000062
ES_Timer_InitTimer@NewTime            cstackBANK0  000060
ES_Timer_InitTimer@Num                cstackBANK0  000064
ES_Timer_StopTimer@Num                cstackBANK0  000064
ES_Timer_Tick_Resp@NeedsProcessing    bssBANK0     0000D5
ES_Timer_Tick_Resp@NewEvent           bssBANK0     0000D2
ES_Timer_Tick_Resp@NextTimer2Process  bssBANK0     0000E1
FullPulseHold@15718                   cstackBANK0  000068
FullPulseHold@base_hue                cstackBANK0  000066
FullPulseHold@base_sat                cstackBANK0  000067
FullPulseHold@cycleCounter            cstackBANK0  000064
FullPulseHold@i                       cstackBANK0  000075
FullPulseHold@ptrnPointer             cstackBANK0  000060
FullPulseHold@ptrnStepCounter         cstackBANK0  000062
FullPulseHold@rising                  dataBANK0    0000F4
FullPulseHold@val                     cstackBANK0  000074
HSV_to_RGB@HSV_Value                  cstackBANK0  000073
HSV_to_RGB@b                          cstackBANK0  000097
HSV_to_RGB@fpart                      cstackBANK0  000091
HSV_to_RGB@g                          cstackBANK0  000095
HSV_to_RGB@h                          cstackBANK0  00008D
HSV_to_RGB@p                          cstackBANK0  0000A1
HSV_to_RGB@q                          cstackBANK0  000099
HSV_to_RGB@r                          cstackBANK0  000093
HSV_to_RGB@region                     cstackBANK0  00008F
HSV_to_RGB@s                          cstackBANK0  00009F
HSV_to_RGB@t                          cstackBANK0  00009B
HSV_to_RGB@v                          cstackBANK0  0000A3
HueTest@15710                         cstackBANK0  00007B
HueTest@base_hue                      cstackBANK0  000079
HueTest@base_sat                      cstackBANK0  00007A
HueTest@cycleCounter                  cstackBANK0  000077
HueTest@i                             cstackBANK0  000080
HueTest@ptrnPointer                   cstackBANK0  000073
HueTest@ptrnStepCounter               cstackBANK0  000075
ISR@LastTime                          bssCOMRAM    00003A
ISR@NextTime                          bssCOMRAM    00003C
InitPatternControlService@Priority    cstackBANK0  000080
InitPatternControlService@ThisEvent   cstackBANK0  00007D
InitSPI32ControlService@Priority      cstackBANK0  000080
InitSPI32ControlService@ThisEvent     cstackBANK0  00007D
MirroredQuadrants@15794               cstackBANK0  000070
MirroredQuadrants@base_hue            cstackBANK0  00006E
MirroredQuadrants@base_sat            cstackBANK0  00006F
MirroredQuadrants@cycleCounter        cstackBANK0  00006C
MirroredQuadrants@i                   cstackBANK0  000083
MirroredQuadrants@ptrnPointer         cstackBANK0  000068
MirroredQuadrants@ptrnStepCounter     cstackBANK0  00006A
MirroredQuadrants@val                 cstackBANK0  000082
MirroredQuadrants@x                   cstackBANK0  000081
PatternOff@i                          cstackBANK0  000062
PostPatternControlService@ThisEvent   cstackBANK0  00007D
PostSPI32ControlService@ThisEvent     cstackBANK0  00007D
ProcessReceive@CurrentPattern         bssCOMRAM    000045
ProcessReceive@Event2Post             cstackCOMRAM 000023
ProcessReceive@LastButton             dataCOMRAM   000054
RunPatternControlService@ReturnEvent  cstackBANK0  0000BE
RunPatternControlService@ThisEvent    cstackBANK0  0000BB
RunPatternControlService@testEvent    cstackBANK0  0000C1
RunSPI32ControlService@ReturnEvent    cstackBANK0  0000C5
RunSPI32ControlService@ThisEvent      cstackBANK0  0000BB
SPI32_ControlService@CurrentState     bssBANK0     0000E2
SPI32_ControlService@MyPriority       bssBANK0     0000E3
SPI32_EOTResponse@EOTevent            cstackCOMRAM 000021
SPI32_SendFrame@newFrame              cstackBANK0  000060
SPI32_TransmitFrames@framePointer     cstackBANK0  000080
SPI32_TransmitFrames@numFrames        cstackBANK0  000082
SPI32_TransmitFrames@transmitEvent    cstackBANK0  000083
SetBrightness@brightness              cstackCOMRAM 00000B
SetBrightness@newBrightness           cstackCOMRAM 000009
SetListenFocus@listFocus              cstackCOMRAM 000009
SetPattern@PatternID                  cstackCOMRAM 000001
SetupPattern@listeningFocusPointer    cstackBANK0  000062
SetupPattern@patternIDPointer         cstackBANK0  000060
SingleFadedLoop@15741                 cstackBANK0  000070
SingleFadedLoop@base_hue              cstackBANK0  00006E
SingleFadedLoop@base_sat              cstackBANK0  00006F
SingleFadedLoop@cycleCounter          cstackBANK0  00006C
SingleFadedLoop@i                     cstackBANK0  000083
SingleFadedLoop@ptrnPointer           cstackBANK0  000068
SingleFadedLoop@ptrnStepCounter       cstackBANK0  00006A
SingleFadedLoop@val                   cstackBANK0  000081
SingleFadedLoop@x                     cstackBANK0  000082
SingleFocusBreathe@base_hue           cstackBANK0  00006E
SingleFocusBreathe@base_sat           cstackBANK0  00006F
SingleFocusBreathe@cycleCounter       cstackBANK0  00006C
SingleFocusBreathe@fade_thresh        cstackBANK0  000085
SingleFocusBreathe@focus              cstackBANK0  000070
SingleFocusBreathe@head               cstackBANK0  000089
SingleFocusBreathe@i                  cstackBANK0  00008A
SingleFocusBreathe@ptrnPointer        cstackBANK0  000068
SingleFocusBreathe@ptrnStepCounter    cstackBANK0  00006A
SingleFocusBreathe@pulseWidth         cstackBANK0  000087
SingleFocusBreathe@rising             dataBANK0    0000F5
SingleFocusBreathe@val                cstackBANK0  000086
SingleFocusBreathe@x                  cstackBANK0  000088
UpdatePattern@i                       cstackBANK0  000094
UpdatePattern@i_1366                  cstackBANK0  000095
_ADCON1                               (abs)        000FC1
_BRGCON1bits                          (abs)        000F70
_BRGCON2bits                          (abs)        000F71
_BRGCON3bits                          (abs)        000F72
_BitNum2SetMask                       smallconst   000301
_Brightness                           bssBANK0     0000F0
_BrokenPinwheel                       text23       0003B8
_BrokenPinwheel$1290                  cstackBANK0  00007D
_BrokenPinwheel$1291                  cstackBANK0  00007F
_CANCON                               (abs)        000F6F
_CANSTATbits                          (abs)        000F6E
_CAN_BusErrorResponse                 text71       003CD6
_CAN_ErrorResponse                    text70       003CD4
_CAN_Init                             text47       003CAA
_CAN_RCVResponse                      text58       003C92
_CAN_XmitResponse                     text57       003CCA
_CCP1CON                              (abs)        000FBD
_CCP1IF                               (abs)        007CF2
_CCPR1H                               (abs)        000FBF
_CCPR1L                               (abs)        000FBE
_CIOCON                               (abs)        000F73
_CenterBreathe                        text22       0017AC
_CenterBreathe$1232                   cstackBANK0  00007B
_CenterBreathe$1233                   cstackBANK0  00007D
_CenterBreathe$1234                   cstackBANK0  00007F
_CenterBreathe$1235                   cstackBANK0  000081
_CenterBreathe$1236                   cstackBANK0  000083
_CenterBreathe$1237                   cstackBANK0  000085
_CenterBreathe$1238                   cstackBANK0  000087
_CenterBreathe$1239                   cstackBANK0  000089
_CurrentFrame                         bssBANK0     0000CE
_CurrentState                         bssBANK0     0000E4
_CycleCounter                         bssBANK0     0000E9
_DotStar_Init                         text46       0037EC
_DotStar_Show                         text26       0025B4
_DoubleFadedLoop                      text21       0009BE
_DoubleFadedLoop$1262                 cstackBANK0  000079
_DoubleFadedLoop$1263                 cstackBANK0  00007B
_DoubleFadedLoop$1265                 cstackBANK0  00007D
_DoubleFadedLoop$1266                 cstackBANK0  00007F
_ECANCON                              (abs)        000F77
_ERRIE                                (abs)        007D1D
_ERRIF                                (abs)        007D25
_ES_DeQueue                           text34       0026E2
_ES_EnQueueFIFO                       text43       002D00
_ES_GetMSBitSet                       text6        00319C
_ES_InitQueue                         text52       00395C
_ES_Initialize                        text36       002C14
_ES_PostToService                     text42       0035E4
_ES_Run                               text3        002B24
_ES_Timer_Init                        text50       003C84
_ES_Timer_InitTimer                   text25       0033F2
_ES_Timer_StopTimer                   text33       00383E
_ES_Timer_Tick_Resp                   text5        00280A
_EventQueues                          smallconst   000358
_FrameByte                            dataBANK0    0000F6
_FrameIndex                           bssBANK0     0000E5
_FramePointer                         bssBANK0     0000D7
_FullPulseHold                        text20       002426
_FullPulseHold$1218                   cstackBANK0  000072
_GIE                                  (abs)        007F97
_GetNextFrame                         text10       003BC8
_HSV_to_RGB                           text30       000F28
_HSV_to_RGB$1990                      cstackBANK0  00009D
_HW_Init                              text40       003AF4
_HueTest                              text19       002A26
_INTCON                               (abs)        000FF2
_IRXIE                                (abs)        007D1F
_IRXIF                                (abs)        007D27
_ISR                                  intcode      000008
_InitCanHardware                      text49       0034F0
_InitPatternControlService            text37       003734
_InitPins                             text48       003BFC
_InitSPI32ControlService              text38       003998
_LATA                                 (abs)        000F89
_LATB                                 (abs)        000F8A
_LATC                                 (abs)        000F8B
_ListeningFocus                       bssBANK0     0000D9
_MaxBrightness                        dataCOMRAM   000055
_MirroredQuadrants                    text18       001380
_MirroredQuadrants$1302               cstackBANK0  00007D
_MirroredQuadrants$1303               cstackBANK0  00007F
_MyPriority                           bssBANK0     0000E6
_NumFrames                            bssBANK0     0000E7
_Nybble2MSBitNum                      smallconst   000341
_PEIE                                 (abs)        007F96
_PIE1                                 (abs)        000F9D
_PORTA                                (abs)        000F80
_PORTB                                (abs)        000F81
_PORTC                                (abs)        000F82
_PatternConfigs                       dataBANK0    0000F7
_PatternID                            bssBANK0     0000DB
_PatternOff                           text13       00391E
_PatternStepCounter                   bssBANK0     0000F2
_PausePattern                         text32       003CBC
_PixelFrames                          bssBIGRAM    0001C4
_PixelPattern                         bssBANK1     000120
_PostPatternControlService            text28       003B90
_PostPatternControlService$intlevel0  text28       003B96
_PostSPI32ControlService              text29       003BAC
_PostSPI32ControlService$intlevel0    text29       003BB2
_ProcessReceive                       text59       0030EA
_ProcessReceive$1196                  cstackCOMRAM 000021
_Queue0                               bssCOMRAM    000048
_Queue1                               bssBANK1     0001B8
_RXB0CONbits                          (abs)        000F60
_RXB0D0                               (abs)        000F66
_RXB0D1                               (abs)        000F67
_RXB0D2                               (abs)        000F68
_RXB0EIDH                             (abs)        000F63
_RXB0EIDL                             (abs)        000F64
_RXB0IE                               (abs)        007D18
_RXB0IF                               (abs)        007D20
_RXB0SIDH                             (abs)        000F61
_RXB0SIDL                             (abs)        000F62
_RXF0EIDH                             (abs)        000F02
_RXF0EIDL                             (abs)        000F03
_RXF0SIDH                             (abs)        000F00
_RXF0SIDL                             (abs)        000F01
_RXM0EIDH                             (abs)        000F1A
_RXM0EIDL                             (abs)        000F1B
_RXM0SIDH                             (abs)        000F18
_RXM0SIDL                             (abs)        000F19
_Ready                                bssBANK0     0000DD
_ResetPattern                         text12       003BE2
_RunPatternControlService             text7        002EB0
_RunSPI32ControlService               text8        002920
_SPI32_EOTResponse                    text54       0039D2
_SPI32_Init                           text39       003CC4
_SPI32_SendFrame                      text9        00379A
_SPI32_TransmitFrames                 text27       003A76
_SSPADD                               (abs)        000FC8
_SSPBUF                               (abs)        000FC9
_SSPCON1                              (abs)        000FC6
_SSPIE                                (abs)        007CEB
_SSPIF                                (abs)        007CF3
_SSPSTAT                              (abs)        000FC7
_ServDescList                         smallconst   000350
_SetBrightness                        text68       003ACE
_SetListenFocus                       text67       003B36
_SetPattern                           text65       003C9E
_SetupPattern                         text41       003C72
_ShowPattern                          text14       003B16
_SingleFadedLoop                      text17       00218C
_SingleFadedLoop$1250                 cstackBANK0  00007D
_SingleFadedLoop$1251                 cstackBANK0  00007F
_SingleFocusBreathe                   text16       001AFA
_SingleFocusBreathe$1332              cstackBANK0  00007D
_SingleFocusBreathe$1333              cstackBANK0  00007F
_SingleFocusBreathe$1334              cstackBANK0  000081
_SingleFocusBreathe$1335              cstackBANK0  000083
_StopPattern                          text11       003B74
_SysTickCounter                       bssCOMRAM    00003E
_T1CON                                (abs)        000FCD
_TMR_ActiveFlags                      bssBANK0     0000DF
_TMR_TimerArray                       bssBANK1     000100
_TRISA                                (abs)        000F92
_TRISBbits                            (abs)        000F93
_TRISC                                (abs)        000F94
_TXB0CONbits                          (abs)        000F40
_TXB0IE                               (abs)        007D1A
_TXB0IF                               (abs)        007D22
_TickCount                            bssBANK0     0000E8
_Timer2PostFunc                       smallconst   000321
_TransmitFrame                        bssCOMRAM    000036
_UpdatePattern                        text15       001E46
_UpdatePattern$1991                   cstackBANK0  000092
_UpdatePattern$1992                   cstackBANK0  000093
__CFG_BOREN$OFF                       (abs)        000000
__CFG_MCLRE$ON                        (abs)        000000
__CFG_OSC$HS                          (abs)        000000
__CFG_PBADEN$OFF                      (abs)        000000
__CFG_PWRT$OFF                        (abs)        000000
__CFG_WDT$OFF                         (abs)        000000
__HRAM                                (abs)        000000
__HW_Process_Pending_Ints             text4        003C30
__HW_Timer_Init                       text51       003B56
__HW_Timer_Init@Rate                  cstackBANK0  000060
__Habs1                               abs1         000000
__Hbank0                              bank0        000000
__Hbank1                              bank1        000000
__Hbank2                              bank2        000000
__Hbigbss                             bigbss       000000
__Hbigdata                            bigdata      000000
__Hbigram                             bigram       000000
__Hbss                                bss          000000
__HbssBANK0                           bssBANK0     000000
__HbssBANK1                           bssBANK1     000000
__HbssBIGRAM                          bssBIGRAM    000000
__HbssCOMRAM                          bssCOMRAM    000000
__Hcinit                              cinit        000000
__Hclrtext                            clrtext      000000
__Hcomram                             comram       000000
__Hconfig                             config       30000E
__Hconst                              const        000000
__HcstackBANK0                        cstackBANK0  000000
__HcstackCOMRAM                       cstackCOMRAM 000000
__Hdata                               data         000000
__HdataBANK0                          dataBANK0    000000
__HdataCOMRAM                         dataCOMRAM   000000
__Heeprom_data                        eeprom_data  000000
__Hend_init                           end_init     00001A
__Hfarbss                             farbss       000000
__Hfardata                            fardata      000000
__Hibigdata                           ibigdata     000000
__Hidata                              idata        000000
__HidataBANK0                         idataBANK0   000000
__HidataCOMRAM                        idataCOMRAM  000000
__Hidloc                              idloc        200008
__Hifardata                           ifardata     000000
__Hinit                               init         000016
__Hintcode                            intcode      000016
__Hintcode_body                       intcode_body 000000
__Hintcodelo                          intcodelo    000016
__Hintentry                           intentry     000000
__Hintret                             intret       000000
__Hintsave_regs                       intsave_regs 000000
__Hirdata                             irdata       000000
__Hmediumconst                        mediumconst  000000
__HnvFARRAM                           nvFARRAM     000000
__Hnvbit                              nvbit        000000
__Hnvrram                             nvrram       000000
__Hparam                              rparam       000000
__Hpowerup                            powerup      000016
__Hram                                ram          000000
__Hramtop                             ramtop       000300
__Hrbit                               rbit         000000
__Hrbss                               rbss         000000
__Hrdata                              rdata        000000
__Hreset_vec                          reset_vec    000004
__Hrparam                             rparam       000000
__Hsfr                                sfr          000000
__Hsmallconst                         smallconst   0003B8
__Hspace_0                            (abs)        30000E
__Hspace_1                            (abs)        000300
__Hspace_2                            (abs)        000000
__Hstack                              stack        000000
__Hstruct                             struct       000000
__Htemp                               temp         000057
__Htext                               text         000000
__Htext0                              text0        000000
__Htext1                              text1        000000
__Htext10                             text10       000000
__Htext11                             text11       000000
__Htext12                             text12       000000
__Htext13                             text13       000000
__Htext14                             text14       000000
__Htext15                             text15       000000
__Htext16                             text16       000000
__Htext17                             text17       000000
__Htext18                             text18       000000
__Htext19                             text19       000000
__Htext2                              text2        000000
__Htext20                             text20       000000
__Htext21                             text21       000000
__Htext22                             text22       000000
__Htext23                             text23       000000
__Htext24                             text24       000000
__Htext25                             text25       000000
__Htext26                             text26       000000
__Htext27                             text27       000000
__Htext28                             text28       000000
__Htext29                             text29       000000
__Htext3                              text3        000000
__Htext30                             text30       000000
__Htext31                             text31       000000
__Htext32                             text32       000000
__Htext33                             text33       000000
__Htext34                             text34       000000
__Htext35                             text35       000000
__Htext36                             text36       000000
__Htext37                             text37       000000
__Htext38                             text38       000000
__Htext39                             text39       000000
__Htext4                              text4        000000
__Htext40                             text40       000000
__Htext41                             text41       000000
__Htext42                             text42       000000
__Htext43                             text43       000000
__Htext44                             text44       000000
__Htext45                             text45       000000
__Htext46                             text46       000000
__Htext47                             text47       000000
__Htext48                             text48       000000
__Htext49                             text49       000000
__Htext5                              text5        000000
__Htext50                             text50       000000
__Htext51                             text51       000000
__Htext52                             text52       000000
__Htext54                             text54       000000
__Htext55                             text55       000000
__Htext56                             text56       000000
__Htext57                             text57       000000
__Htext58                             text58       000000
__Htext59                             text59       000000
__Htext6                              text6        000000
__Htext60                             text60       000000
__Htext61                             text61       000000
__Htext62                             text62       000000
__Htext63                             text63       000000
__Htext64                             text64       000000
__Htext65                             text65       000000
__Htext66                             text66       000000
__Htext67                             text67       000000
__Htext68                             text68       000000
__Htext69                             text69       000000
__Htext7                              text7        000000
__Htext70                             text70       000000
__Htext71                             text71       000000
__Htext72                             text72       000000
__Htext8                              text8        000000
__Htext9                              text9        000000
__LRAM                                (abs)        000001
__Labs1                               abs1         000000
__Lbank0                              bank0        000000
__Lbank1                              bank1        000000
__Lbank2                              bank2        000000
__Lbigbss                             bigbss       000000
__Lbigdata                            bigdata      000000
__Lbigram                             bigram       000000
__Lbss                                bss          000000
__LbssBANK0                           bssBANK0     000000
__LbssBANK1                           bssBANK1     000000
__LbssBIGRAM                          bssBIGRAM    000000
__LbssCOMRAM                          bssCOMRAM    000000
__Lcinit                              cinit        000000
__Lclrtext                            clrtext      000000
__Lcomram                             comram       000000
__Lconfig                             config       300000
__Lconst                              const        000000
__LcstackBANK0                        cstackBANK0  000000
__LcstackCOMRAM                       cstackCOMRAM 000000
__Ldata                               data         000000
__LdataBANK0                          dataBANK0    000000
__LdataCOMRAM                         dataCOMRAM   000000
__Leeprom_data                        eeprom_data  000000
__Lend_init                           end_init     000016
__Lfarbss                             farbss       000000
__Lfardata                            fardata      000000
__Libigdata                           ibigdata     000000
__Lidata                              idata        000000
__LidataBANK0                         idataBANK0   000000
__LidataCOMRAM                        idataCOMRAM  000000
__Lidloc                              idloc        200000
__Lifardata                           ifardata     000000
__Linit                               init         000016
__Lintcode                            intcode      000008
__Lintcode_body                       intcode_body 000000
__Lintcodelo                          intcodelo    000016
__Lintentry                           intentry     000000
__Lintret                             intret       000000
__Lintsave_regs                       intsave_regs 000000
__Lirdata                             irdata       000000
__Lmediumconst                        mediumconst  000000
__LnvFARRAM                           nvFARRAM     000000
__Lnvbit                              nvbit        000000
__Lnvrram                             nvrram       000000
__Lparam                              rparam       000000
__Lpowerup                            powerup      000016
__Lram                                ram          000000
__Lramtop                             ramtop       000300
__Lrbit                               rbit         000000
__Lrbss                               rbss         000000
__Lrdata                              rdata        000000
__Lreset_vec                          reset_vec    000000
__Lrparam                             rparam       000000
__Lsfr                                sfr          000000
__Lsmallconst                         smallconst   000300
__Lspace_0                            (abs)        000000
__Lspace_1                            (abs)        000000
__Lspace_2                            (abs)        000000
__Lstack                              stack        000000
__Lstruct                             struct       000000
__Ltemp                               temp         000056
__Ltext                               text         000000
__Ltext0                              text0        000000
__Ltext1                              text1        000000
__Ltext10                             text10       000000
__Ltext11                             text11       000000
__Ltext12                             text12       000000
__Ltext13                             text13       000000
__Ltext14                             text14       000000
__Ltext15                             text15       000000
__Ltext16                             text16       000000
__Ltext17                             text17       000000
__Ltext18                             text18       000000
__Ltext19                             text19       000000
__Ltext2                              text2        000000
__Ltext20                             text20       000000
__Ltext21                             text21       000000
__Ltext22                             text22       000000
__Ltext23                             text23       000000
__Ltext24                             text24       000000
__Ltext25                             text25       000000
__Ltext26                             text26       000000
__Ltext27                             text27       000000
__Ltext28                             text28       000000
__Ltext29                             text29       000000
__Ltext3                              text3        000000
__Ltext30                             text30       000000
__Ltext31                             text31       000000
__Ltext32                             text32       000000
__Ltext33                             text33       000000
__Ltext34                             text34       000000
__Ltext35                             text35       000000
__Ltext36                             text36       000000
__Ltext37                             text37       000000
__Ltext38                             text38       000000
__Ltext39                             text39       000000
__Ltext4                              text4        000000
__Ltext40                             text40       000000
__Ltext41                             text41       000000
__Ltext42                             text42       000000
__Ltext43                             text43       000000
__Ltext44                             text44       000000
__Ltext45                             text45       000000
__Ltext46                             text46       000000
__Ltext47                             text47       000000
__Ltext48                             text48       000000
__Ltext49                             text49       000000
__Ltext5                              text5        000000
__Ltext50                             text50       000000
__Ltext51                             text51       000000
__Ltext52                             text52       000000
__Ltext54                             text54       000000
__Ltext55                             text55       000000
__Ltext56                             text56       000000
__Ltext57                             text57       000000
__Ltext58                             text58       000000
__Ltext59                             text59       000000
__Ltext6                              text6        000000
__Ltext60                             text60       000000
__Ltext61                             text61       000000
__Ltext62                             text62       000000
__Ltext63                             text63       000000
__Ltext64                             text64       000000
__Ltext65                             text65       000000
__Ltext66                             text66       000000
__Ltext67                             text67       000000
__Ltext68                             text68       000000
__Ltext69                             text69       000000
__Ltext7                              text7        000000
__Ltext70                             text70       000000
__Ltext71                             text71       000000
__Ltext72                             text72       000000
__Ltext8                              text8        000000
__Ltext9                              text9        000000
__PRIMASK_temp                        bssCOMRAM    000040
__S0                                  (abs)        30000E
__S1                                  (abs)        000300
__S2                                  (abs)        000000
___awdiv                              text24       002F78
___awdiv@counter                      cstackBANK0  000064
___awdiv@dividend                     cstackBANK0  000060
___awdiv@divisor                      cstackBANK0  000062
___awdiv@quotient                     cstackBANK0  000066
___awdiv@sign                         cstackBANK0  000065
___awmod                              text45       003240
___awmod@counter                      cstackBANK0  000064
___awmod@dividend                     cstackBANK0  000060
___awmod@divisor                      cstackBANK0  000062
___awmod@sign                         cstackBANK0  000065
___inthi_sp                           stack        000000
___intlo_sp                           stack        000000
___lbmod                              text35       0038DA
___lbmod@counter                      cstackBANK0  000062
___lbmod@dividend                     cstackBANK0  000061
___lbmod@divisor                      cstackBANK0  000060
___lbmod@rem                          cstackBANK0  000063
___lwdiv                              text31       00356C
___lwdiv@counter                      cstackBANK0  000072
___lwdiv@dividend                     cstackBANK0  00006C
___lwdiv@divisor                      cstackBANK0  00006E
___lwdiv@quotient                     cstackBANK0  000070
___param_bank                         (abs)        000010
___rparam_used                        (abs)        000001
___sp                                 stack        000000
___wmul                               text44       003A0C
___wmul@multiplicand                  cstackBANK0  000068
___wmul@multiplier                    cstackBANK0  000066
___wmul@product                       cstackBANK0  00006A
__accesstop                           (abs)        000060
__activetblptr                        (abs)        000002
__end_of_BitNum2SetMask               smallconst   000321
__end_of_BrokenPinwheel               text23       0009BE
__end_of_CAN_BusErrorResponse         text71       003CD8
__end_of_CAN_ErrorResponse            text70       003CD6
__end_of_CAN_Init                     text47       003CB4
__end_of_CAN_RCVResponse              text58       003C9E
__end_of_CAN_XmitResponse             text57       003CD0
__end_of_CenterBreathe                text22       001AFA
__end_of_DotStar_Init                 text46       00383E
__end_of_DotStar_Show                 text26       0026E2
__end_of_DoubleFadedLoop              text21       000F28
__end_of_ES_DeQueue                   text34       00280A
__end_of_ES_EnQueueFIFO               text43       002DE2
__end_of_ES_EventList                 smallconst   000301
__end_of_ES_GetMSBitSet               text6        003240
__end_of_ES_InitQueue                 text52       003998
__end_of_ES_Initialize                text36       002D00
__end_of_ES_PostToService             text42       00365A
__end_of_ES_Run                       text3        002C14
__end_of_ES_Timer_Init                text50       003C92
__end_of_ES_Timer_InitTimer           text25       003472
__end_of_ES_Timer_StopTimer           text33       00388C
__end_of_ES_Timer_Tick_Resp           text5        002920
__end_of_EventQueues                  smallconst   00035E
__end_of_FullPulseHold                text20       0025B4
__end_of_GetNextFrame                 text10       003BE2
__end_of_HSV_to_RGB                   text30       001380
__end_of_HW_Init                      text40       003B16
__end_of_HueTest                      text19       002B24
__end_of_ISR                          intcode_body 002EB0
__end_of_InitCanHardware              text49       00356C
__end_of_InitPatternControlService    text37       00379A
__end_of_InitPins                     text48       003C16
__end_of_InitSPI32ControlService      text38       0039D2
__end_of_MirroredQuadrants            text18       0017AC
__end_of_Nybble2MSBitNum              smallconst   000350
__end_of_PatternOff                   text13       00395C
__end_of_PausePattern                 text32       003CC4
__end_of_PostPatternControlService    text28       003BAC
__end_of_PostSPI32ControlService      text29       003BC8
__end_of_ProcessReceive               text59       00319C
__end_of_ResetPattern                 text12       003BFC
__end_of_RunPatternControlService     text7        002F78
__end_of_RunSPI32ControlService       text8        002A26
__end_of_SPI32_EOTResponse            text54       003A0C
__end_of_SPI32_Init                   text39       003CCA
__end_of_SPI32_SendFrame              text9        0037EC
__end_of_SPI32_TransmitFrames         text27       003AA8
__end_of_ServDescList                 smallconst   000358
__end_of_SetBrightness                text68       003AF4
__end_of_SetListenFocus               text67       003B56
__end_of_SetPattern                   text65       003CAA
__end_of_SetupPattern                 text41       003C84
__end_of_ShowPattern                  text14       003B36
__end_of_SingleFadedLoop              text17       002426
__end_of_SingleFocusBreathe           text16       001E46
__end_of_StopPattern                  text11       003B90
__end_of_Timer2PostFunc               smallconst   000341
__end_of_UpdatePattern                text15       00218C
__end_of__HW_Process_Pending_Ints     text4        003C46
__end_of__HW_Timer_Init               text51       003B74
__end_of___awdiv                      text24       003036
__end_of___awmod                      text45       0032E2
__end_of___lbmod                      text35       00391E
__end_of___lwdiv                      text31       0035E4
__end_of___wmul                       text44       003A42
__end_of__initialization              cinit        0034E2
__end_of_main                         text0        00336E
__end_of_printf                       text1        003A76
__end_of_putch                        text2        003CD4
__end_ofi2_ES_EnQueueFIFO             text62       0030EA
__end_ofi2_ES_PostToService           text61       003734
__end_ofi2_PostPatternControlService  text60       003C72
__end_ofi2_PostSPI32ControlService    text56       003C5C
__end_ofi2_ResetPattern               text66       003C30
__end_ofi2_SPI32_SendFrame            text55       0038DA
__end_ofi2___awdiv                    text69       0033F2
__end_ofi2___awmod                    text64       0036CA
__end_ofi2___wmul                     text63       003ACE
__initialization                      cinit        003472
__mediumconst                         mediumconst  000000
__pbssBANK0                           bssBANK0     0000CE
__pbssBANK1                           bssBANK1     000100
__pbssBIGRAM                          bssBIGRAM    0001C4
__pbssCOMRAM                          bssCOMRAM    000036
__pcinit                              cinit        003472
__pcstackBANK0                        cstackBANK0  000060
__pcstackCOMRAM                       cstackCOMRAM 000001
__pdataBANK0                          dataBANK0    0000F3
__pdataCOMRAM                         dataCOMRAM   000054
__pidataBANK0                         idataBANK0   003CB4
__pidataCOMRAM                        idataCOMRAM  003CD0
__pintcode                            intcode      000008
__pintcode_body                       intcode_body 002DE2
__psmallconst                         smallconst   000300
__ptext0                              text0        0032E2
__ptext1                              text1        003A42
__ptext10                             text10       003BC8
__ptext11                             text11       003B74
__ptext12                             text12       003BE2
__ptext13                             text13       00391E
__ptext14                             text14       003B16
__ptext15                             text15       001E46
__ptext16                             text16       001AFA
__ptext17                             text17       00218C
__ptext18                             text18       001380
__ptext19                             text19       002A26
__ptext2                              text2        003CD2
__ptext20                             text20       002426
__ptext21                             text21       0009BE
__ptext22                             text22       0017AC
__ptext23                             text23       0003B8
__ptext24                             text24       002F78
__ptext25                             text25       0033F2
__ptext26                             text26       0025B4
__ptext27                             text27       003A76
__ptext28                             text28       003B90
__ptext29                             text29       003BAC
__ptext3                              text3        002B24
__ptext30                             text30       000F28
__ptext31                             text31       00356C
__ptext32                             text32       003CBC
__ptext33                             text33       00383E
__ptext34                             text34       0026E2
__ptext35                             text35       0038DA
__ptext36                             text36       002C14
__ptext37                             text37       003734
__ptext38                             text38       003998
__ptext39                             text39       003CC4
__ptext4                              text4        003C30
__ptext40                             text40       003AF4
__ptext41                             text41       003C72
__ptext42                             text42       0035E4
__ptext43                             text43       002D00
__ptext44                             text44       003A0C
__ptext45                             text45       003240
__ptext46                             text46       0037EC
__ptext47                             text47       003CAA
__ptext48                             text48       003BFC
__ptext49                             text49       0034F0
__ptext5                              text5        00280A
__ptext50                             text50       003C84
__ptext51                             text51       003B56
__ptext52                             text52       00395C
__ptext54                             text54       0039D2
__ptext55                             text55       00388C
__ptext56                             text56       003C46
__ptext57                             text57       003CCA
__ptext58                             text58       003C92
__ptext59                             text59       0030EA
__ptext6                              text6        00319C
__ptext60                             text60       003C5C
__ptext61                             text61       0036CA
__ptext62                             text62       003036
__ptext63                             text63       003AA8
__ptext64                             text64       00365A
__ptext65                             text65       003C9E
__ptext66                             text66       003C16
__ptext67                             text67       003B36
__ptext68                             text68       003ACE
__ptext69                             text69       00336E
__ptext7                              text7        002EB0
__ptext70                             text70       003CD4
__ptext71                             text71       003CD6
__ptext72                             text72       000000
__ptext8                              text8        002920
__ptext9                              text9        00379A
__ramtop                              ramtop       000300
__size_of_BrokenPinwheel              (abs)        000000
__size_of_CAN_BusErrorResponse        (abs)        000000
__size_of_CAN_ErrorResponse           (abs)        000000
__size_of_CAN_Init                    (abs)        000000
__size_of_CAN_RCVResponse             (abs)        000000
__size_of_CAN_XmitResponse            (abs)        000000
__size_of_CenterBreathe               (abs)        000000
__size_of_DotStar_Init                (abs)        000000
__size_of_DotStar_Show                (abs)        000000
__size_of_DoubleFadedLoop             (abs)        000000
__size_of_ES_DeQueue                  (abs)        000000
__size_of_ES_EnQueueFIFO              (abs)        000000
__size_of_ES_GetMSBitSet              (abs)        000000
__size_of_ES_InitQueue                (abs)        000000
__size_of_ES_Initialize               (abs)        000000
__size_of_ES_PostToService            (abs)        000000
__size_of_ES_Run                      (abs)        000000
__size_of_ES_Timer_Init               (abs)        000000
__size_of_ES_Timer_InitTimer          (abs)        000000
__size_of_ES_Timer_StopTimer          (abs)        000000
__size_of_ES_Timer_Tick_Resp          (abs)        000000
__size_of_FullPulseHold               (abs)        000000
__size_of_GetNextFrame                (abs)        000000
__size_of_HSV_to_RGB                  (abs)        000000
__size_of_HW_Init                     (abs)        000000
__size_of_HueTest                     (abs)        000000
__size_of_ISR                         (abs)        000000
__size_of_InitCanHardware             (abs)        000000
__size_of_InitPatternControlService   (abs)        000000
__size_of_InitPins                    (abs)        000000
__size_of_InitSPI32ControlService     (abs)        000000
__size_of_MirroredQuadrants           (abs)        000000
__size_of_PatternOff                  (abs)        000000
__size_of_PausePattern                (abs)        000000
__size_of_PostPatternControlService   (abs)        000000
__size_of_PostSPI32ControlService     (abs)        000000
__size_of_ProcessReceive              (abs)        000000
__size_of_ResetPattern                (abs)        000000
__size_of_RunPatternControlService    (abs)        000000
__size_of_RunSPI32ControlService      (abs)        000000
__size_of_SPI32_EOTResponse           (abs)        000000
__size_of_SPI32_Init                  (abs)        000000
__size_of_SPI32_SendFrame             (abs)        000000
__size_of_SPI32_TransmitFrames        (abs)        000000
__size_of_SetBrightness               (abs)        000000
__size_of_SetListenFocus              (abs)        000000
__size_of_SetPattern                  (abs)        000000
__size_of_SetupPattern                (abs)        000000
__size_of_ShowPattern                 (abs)        000000
__size_of_SingleFadedLoop             (abs)        000000
__size_of_SingleFocusBreathe          (abs)        000000
__size_of_StopPattern                 (abs)        000000
__size_of_UpdatePattern               (abs)        000000
__size_of__HW_Process_Pending_Ints    (abs)        000000
__size_of__HW_Timer_Init              (abs)        000000
__size_of___awdiv                     (abs)        000000
__size_of___awmod                     (abs)        000000
__size_of___lbmod                     (abs)        000000
__size_of___lwdiv                     (abs)        000000
__size_of___wmul                      (abs)        000000
__size_of_main                        (abs)        000000
__size_of_printf                      (abs)        000000
__size_of_putch                       (abs)        000000
__size_ofi2_ES_EnQueueFIFO            (abs)        000000
__size_ofi2_ES_PostToService          (abs)        000000
__size_ofi2_PostPatternControlService (abs)        000000
__size_ofi2_PostSPI32ControlService   (abs)        000000
__size_ofi2_ResetPattern              (abs)        000000
__size_ofi2_SPI32_SendFrame           (abs)        000000
__size_ofi2___awdiv                   (abs)        000000
__size_ofi2___awmod                   (abs)        000000
__size_ofi2___wmul                    (abs)        000000
__smallconst                          smallconst   000300
_main                                 text0        0032E2
_printf                               text1        003A42
_putch                                text2        003CD2
btemp                                 temp         000056
end_of_initialization                 cinit        0034E2
i2ES_EnQueueFIFO@Event2Add            cstackCOMRAM 00000F
i2ES_EnQueueFIFO@SaveCrit             cstackCOMRAM 000015
i2ES_EnQueueFIFO@pBlock               cstackCOMRAM 00000D
i2ES_EnQueueFIFO@pThisQueue           cstackCOMRAM 000016
i2ES_PostToService@TheEvent           cstackCOMRAM 000018
i2ES_PostToService@WhichService       cstackCOMRAM 00001D
i2PostPatternControlService@ThisEvent cstackCOMRAM 00001E
i2PostSPI32ControlService@ThisEvent   cstackCOMRAM 00001E
i2SPI32_SendFrame@newFrame            cstackCOMRAM 000001
i2_ES_EnQueueFIFO                     text62       003036
i2_ES_PostToService                   text61       0036CA
i2_PostPatternControlService          text60       003C5C
i2_PostSPI32ControlService            text56       003C46
i2_ResetPattern                       text66       003C16
i2_SPI32_SendFrame                    text55       00388C
i2___awdiv                            text69       00336E
i2___awdiv@counter                    cstackCOMRAM 000005
i2___awdiv@dividend                   cstackCOMRAM 000001
i2___awdiv@divisor                    cstackCOMRAM 000003
i2___awdiv@quotient                   cstackCOMRAM 000007
i2___awdiv@sign                       cstackCOMRAM 000006
i2___awmod                            text64       00365A
i2___awmod@counter                    cstackCOMRAM 000005
i2___awmod@dividend                   cstackCOMRAM 000001
i2___awmod@divisor                    cstackCOMRAM 000003
i2___awmod@sign                       cstackCOMRAM 000006
i2___wmul                             text63       003AA8
i2___wmul@multiplicand                cstackCOMRAM 000009
i2___wmul@multiplier                  cstackCOMRAM 000007
i2___wmul@product                     cstackCOMRAM 00000B
int$flags                             temp         000056
int_func                              intcode_body 002DE2
intlevel0                             text         000000
intlevel1                             text         000000
intlevel2                             text         000000
intlevel3                             text         000000
main@ErrorType                        cstackBANK0  0000CD
printf@ap                             cstackBANK0  000062
printf@c                              cstackBANK0  000064
printf@f                              cstackBANK0  000060
stackhi                               (abs)        0000FF
stacklo                               (abs)        0000FB
start                                 init         000016
start_initialization                  cinit        003472


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 25 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  ErrorType       1  109[BANK0 ] enum E15646
 Return value:  Size  Location     Type
                  2  475[None  ] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels required when called:   16
 This function calls:
		_ES_Initialize
		_ES_Run
		_printf
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _printf *****************
 Defined at:
		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
 Parameters:    Size  Location     Type
  f               2    0[BANK0 ] PTR const unsigned char 
		 -> STR_4(15), STR_3(23), STR_2(24), STR_1(27), 
 Auto vars:     Size  Location     Type
  tmpval          4    0        struct .
  cp              3    0        PTR const unsigned char 
  ap              2    2[BANK0 ] PTR void [1]
		 -> ?_printf(2), 
  len             2    0        unsigned int 
  val             2    0        unsigned int 
  c               1    4[BANK0 ] char 
  flag            1    0        unsigned char 
  prec            1    0        char 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       3       0       0
      Temps:          0       0       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_putch
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _putch *****************
 Defined at:
		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\putch.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1    0[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_printf
 This function uses a non-reentrant model


 *************** function _ES_Run *****************
 Defined at:
		line 277 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  HighestPrior    1  108[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E15494
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       4       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   15
 This function calls:
		_ES_DeQueue
		_ES_GetMSBitSet
		_RunPatternControlService
		_RunSPI32ControlService
		__HW_Process_Pending_Ints
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function __HW_Process_Pending_Ints *****************
 Defined at:
		line 225 in file "ES_Port.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   12
 This function calls:
		_ES_Timer_Tick_Resp
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _ES_Timer_Tick_Resp *****************
 Defined at:
		line 284 in file "ES_Timers.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       4       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   11
 This function calls:
		Absolute function
		_ES_GetMSBitSet
		_PostPatternControlService
		_PostSPI32ControlService
 This function is called by:
		__HW_Process_Pending_Ints
 This function uses a non-reentrant model


 *************** function _ES_GetMSBitSet *****************
 Defined at:
		line 79 in file "ES_LookupTables.c"
 Parameters:    Size  Location     Type
  Val2Check       2    0[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  LoopCntr        1    9[BANK0 ] char 
  Nybble2Test     1    8[BANK0 ] unsigned char 
  ReturnVal       1    7[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       3       0       0
      Temps:          0       5       0       0
      Totals:         0      10       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_ES_Run
		_ES_Timer_Tick_Resp
 This function uses a non-reentrant model


 *************** function _RunPatternControlService *****************
 Defined at:
		line 159 in file "Pattern_ControlService.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   91[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  testEvent       3   97[BANK0 ] struct ES_Event_t
  ReturnEvent     3   94[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  3   91[BANK0 ] struct ES_Event_t
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       6       0       0
      Temps:          0       0       0       0
      Totals:         0       9       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   14
 This function calls:
		_PausePattern
		_PostPatternControlService
		_ShowPattern
		_StopPattern
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _RunSPI32ControlService *****************
 Defined at:
		line 138 in file "SPI32_ControlService.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   91[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  ReturnEvent     3  101[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  3   91[BANK0 ] struct ES_Event_t
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       3       0       0
      Temps:          0       7       0       0
      Totals:         0      13       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_GetNextFrame
		_SPI32_SendFrame
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _SPI32_SendFrame *****************
 Defined at:
		line 85 in file "SPI32_HW.c"
 Parameters:    Size  Location     Type
  newFrame        4    0[BANK0 ] unsigned long 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       0       0       0
      Temps:          0       4       0       0
      Totals:         0       8       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_RunSPI32ControlService
 This function uses a non-reentrant model


 *************** function _GetNextFrame *****************
 Defined at:
		line 258 in file "SPI32_ControlService.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4    0[BANK0 ] unsigned long 
 Registers used:
		fsr2l, fsr2h
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_RunSPI32ControlService
 This function uses a non-reentrant model


 *************** function _StopPattern *****************
 Defined at:
		line 271 in file "Pattern_ControlService.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   13
 This function calls:
		_DotStar_Show
		_ES_Timer_StopTimer
		_PatternOff
		_ResetPattern
 This function is called by:
		_RunPatternControlService
 This function uses a non-reentrant model


 *************** function _ResetPattern *****************
 Defined at:
		line 77 in file "Pattern_PtrnGenerator.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_StopPattern
 This function uses a non-reentrant model


 *************** function _PatternOff *****************
 Defined at:
		line 84 in file "Pattern_PtrnGenerator.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] PTR unsigned int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_StopPattern
 This function uses a non-reentrant model


 *************** function _ShowPattern *****************
 Defined at:
		line 263 in file "Pattern_ControlService.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   13
 This function calls:
		_DotStar_Show
		_ES_Timer_InitTimer
		_UpdatePattern
 This function is called by:
		_RunPatternControlService
 This function uses a non-reentrant model


 *************** function _UpdatePattern *****************
 Defined at:
		line 91 in file "Pattern_PtrnGenerator.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1   53[BANK0 ] unsigned char 
  i               1   52[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2   48[BANK0 ] PTR unsigned int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       4       0       0
      Temps:          0       0       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_BrokenPinwheel
		_CenterBreathe
		_DoubleFadedLoop
		_FullPulseHold
		_HueTest
		_MirroredQuadrants
		_SingleFadedLoop
		_SingleFocusBreathe
		___awdiv
 This function is called by:
		_ShowPattern
 This function uses a non-reentrant model


 *************** function _SingleFocusBreathe *****************
 Defined at:
		line 221 in file "Pattern_PtrnFunctions.c"
 Parameters:    Size  Location     Type
  ptrnPointer     2    8[BANK0 ] PTR unsigned int 
		 -> PixelPattern(152), 
  ptrnStepCoun    2   10[BANK0 ] PTR unsigned char 
		 -> PatternStepCounter(1), 
  cycleCounter    2   12[BANK0 ] PTR unsigned long 
		 -> CycleCounter(4), 
  base_hue        1   14[BANK0 ] unsigned char 
  base_sat        1   15[BANK0 ] unsigned char 
  focus           2   16[BANK0 ] PTR void 
		 -> NULL(0), PatternConfigs(4), 
 Auto vars:     Size  Location     Type
  i               1   42[BANK0 ] unsigned char 
  head            1   41[BANK0 ] unsigned char 
  x               1   40[BANK0 ] unsigned char 
  pulseWidth      1   39[BANK0 ] unsigned char 
  val             1   38[BANK0 ] unsigned char 
  fade_thresh     1   37[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0      10       0       0
      Locals:         0      14       0       0
      Temps:          0      11       0       0
      Totals:         0      35       0       0
Total ram usage:       35 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		___awdiv
		___awmod
 This function is called by:
		_UpdatePattern
 This function uses a non-reentrant model


 *************** function _SingleFadedLoop *****************
 Defined at:
		line 124 in file "Pattern_PtrnFunctions.c"
 Parameters:    Size  Location     Type
  ptrnPointer     2    8[BANK0 ] PTR unsigned int 
		 -> PixelPattern(152), 
  ptrnStepCoun    2   10[BANK0 ] PTR unsigned char 
		 -> PatternStepCounter(1), 
  cycleCounter    2   12[BANK0 ] PTR unsigned long 
		 -> CycleCounter(4), 
  base_hue        1   14[BANK0 ] unsigned char 
  base_sat        1   15[BANK0 ] unsigned char 
  15741           2   16[BANK0 ] PTR void 
		 -> NULL(0), 
 Auto vars:     Size  Location     Type
  i               1   35[BANK0 ] unsigned char 
  x               1   34[BANK0 ] unsigned char 
  val             1   33[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0      10       0       0
      Locals:         0       7       0       0
      Temps:          0      11       0       0
      Totals:         0      28       0       0
Total ram usage:       28 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		___awdiv
		___awmod
 This function is called by:
		_UpdatePattern
 This function uses a non-reentrant model


 *************** function _MirroredQuadrants *****************
 Defined at:
		line 191 in file "Pattern_PtrnFunctions.c"
 Parameters:    Size  Location     Type
  ptrnPointer     2    8[BANK0 ] PTR unsigned int 
		 -> PixelPattern(152), 
  ptrnStepCoun    2   10[BANK0 ] PTR unsigned char 
		 -> PatternStepCounter(1), 
  cycleCounter    2   12[BANK0 ] PTR unsigned long 
		 -> CycleCounter(4), 
  base_hue        1   14[BANK0 ] unsigned char 
  base_sat        1   15[BANK0 ] unsigned char 
  15794           2   16[BANK0 ] PTR void 
		 -> NULL(0), 
 Auto vars:     Size  Location     Type
  i               1   35[BANK0 ] unsigned char 
  val             1   34[BANK0 ] unsigned char 
  x               1   33[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0      10       0       0
      Locals:         0       7       0       0
      Temps:          0      11       0       0
      Totals:         0      28       0       0
Total ram usage:       28 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		___awdiv
		___awmod
 This function is called by:
		_UpdatePattern
 This function uses a non-reentrant model


 *************** function _HueTest *****************
 Defined at:
		line 29 in file "Pattern_PtrnFunctions.c"
 Parameters:    Size  Location     Type
  ptrnPointer     2   19[BANK0 ] PTR unsigned int 
		 -> PixelPattern(152), 
  ptrnStepCoun    2   21[BANK0 ] PTR unsigned char 
		 -> PatternStepCounter(1), 
  cycleCounter    2   23[BANK0 ] PTR unsigned long 
		 -> CycleCounter(4), 
  base_hue        1   25[BANK0 ] unsigned char 
  base_sat        1   26[BANK0 ] unsigned char 
  15710           2   27[BANK0 ] PTR void 
		 -> NULL(0), 
 Auto vars:     Size  Location     Type
  i               1   32[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0      10       0       0
      Locals:         0       1       0       0
      Temps:          0       3       0       0
      Totals:         0      14       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		___awmod
		___lwdiv
		___wmul
 This function is called by:
		_UpdatePattern
 This function uses a non-reentrant model


 *************** function _FullPulseHold *****************
 Defined at:
		line 80 in file "Pattern_PtrnFunctions.c"
 Parameters:    Size  Location     Type
  ptrnPointer     2    0[BANK0 ] PTR unsigned int 
		 -> PixelPattern(152), 
  ptrnStepCoun    2    2[BANK0 ] PTR unsigned char 
		 -> PatternStepCounter(1), 
  cycleCounter    2    4[BANK0 ] PTR unsigned long 
		 -> CycleCounter(4), 
  base_hue        1    6[BANK0 ] unsigned char 
  base_sat        1    7[BANK0 ] unsigned char 
  15718           2    8[BANK0 ] PTR void 
		 -> NULL(0), 
 Auto vars:     Size  Location     Type
  i               1   21[BANK0 ] unsigned char 
  val             1   20[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0      10       0       0
      Locals:         0       4       0       0
      Temps:          0       8       0       0
      Totals:         0      22       0       0
Total ram usage:       22 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_UpdatePattern
 This function uses a non-reentrant model


 *************** function _DoubleFadedLoop *****************
 Defined at:
		line 136 in file "Pattern_PtrnFunctions.c"
 Parameters:    Size  Location     Type
  ptrnPointer     2    8[BANK0 ] PTR unsigned int 
		 -> PixelPattern(152), 
  ptrnStepCoun    2   10[BANK0 ] PTR unsigned char 
		 -> PatternStepCounter(1), 
  cycleCounter    2   12[BANK0 ] PTR unsigned long 
		 -> CycleCounter(4), 
  base_hue        1   14[BANK0 ] unsigned char 
  base_sat        1   15[BANK0 ] unsigned char 
  15751           2   16[BANK0 ] PTR void 
		 -> NULL(0), 
 Auto vars:     Size  Location     Type
  i               1   36[BANK0 ] unsigned char 
  i               1   35[BANK0 ] unsigned char 
  x               1   34[BANK0 ] unsigned char 
  val             1   33[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0      10       0       0
      Locals:         0      12       0       0
      Temps:          0       7       0       0
      Totals:         0      29       0       0
Total ram usage:       29 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		___awdiv
		___awmod
 This function is called by:
		_UpdatePattern
 This function uses a non-reentrant model


 *************** function _CenterBreathe *****************
 Defined at:
		line 102 in file "Pattern_PtrnFunctions.c"
 Parameters:    Size  Location     Type
  ptrnPointer     2    8[BANK0 ] PTR unsigned int 
		 -> PixelPattern(152), 
  ptrnStepCoun    2   10[BANK0 ] PTR unsigned char 
		 -> PatternStepCounter(1), 
  cycleCounter    2   12[BANK0 ] PTR unsigned long 
		 -> CycleCounter(4), 
  base_hue        1   14[BANK0 ] unsigned char 
  base_sat        1   15[BANK0 ] unsigned char 
  15728           2   16[BANK0 ] PTR void 
		 -> NULL(0), 
 Auto vars:     Size  Location     Type
  i               1   47[BANK0 ] unsigned char 
  x               1   46[BANK0 ] unsigned char 
  pulseWidth      1   45[BANK0 ] unsigned char 
  val             1   44[BANK0 ] unsigned char 
  fade_thresh     1   43[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0      10       0       0
      Locals:         0      21       0       0
      Temps:          0       9       0       0
      Totals:         0      40       0       0
Total ram usage:       40 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		___awdiv
		___awmod
 This function is called by:
		_UpdatePattern
 This function uses a non-reentrant model


 *************** function _BrokenPinwheel *****************
 Defined at:
		line 171 in file "Pattern_PtrnFunctions.c"
 Parameters:    Size  Location     Type
  ptrnPointer     2    8[BANK0 ] PTR unsigned int 
		 -> PixelPattern(152), 
  ptrnStepCoun    2   10[BANK0 ] PTR unsigned char 
		 -> PatternStepCounter(1), 
  cycleCounter    2   12[BANK0 ] PTR unsigned long 
		 -> CycleCounter(4), 
  base_hue        1   14[BANK0 ] unsigned char 
  base_sat        1   15[BANK0 ] unsigned char 
  15776           2   16[BANK0 ] PTR void 
		 -> NULL(0), 
 Auto vars:     Size  Location     Type
  i               1   36[BANK0 ] unsigned char 
  val             1   35[BANK0 ] unsigned char 
  fade            1   34[BANK0 ] unsigned char 
  x               1   33[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0      10       0       0
      Locals:         0       8       0       0
      Temps:          0      11       0       0
      Totals:         0      29       0       0
Total ram usage:       29 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		___awdiv
		___awmod
 This function is called by:
		_UpdatePattern
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 Parameters:    Size  Location     Type
  dividend        2    0[BANK0 ] int 
  divisor         2    2[BANK0 ] int 
 Auto vars:     Size  Location     Type
  quotient        2    6[BANK0 ] int 
  sign            1    5[BANK0 ] unsigned char 
  counter         1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       4       0       0
      Temps:          0       0       0       0
      Totals:         0       8       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_CenterBreathe
		_SingleFadedLoop
		_DoubleFadedLoop
		_BrokenPinwheel
		_MirroredQuadrants
		_SingleFocusBreathe
		_UpdatePattern
		_DoubleBrokenLoop
		_SingleFocusPulse
 This function uses a non-reentrant model


 *************** function _ES_Timer_InitTimer *****************
 Defined at:
		line 229 in file "ES_Timers.c"
 Parameters:    Size  Location     Type
  Num             1    wreg     unsigned char 
  NewTime         2    0[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  Num             1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E15472
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       1       0       0
      Temps:          0       2       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_ShowPattern
 This function uses a non-reentrant model


 *************** function _DotStar_Show *****************
 Defined at:
		line 61 in file "Pattern_DotStarLED.c"
 Parameters:    Size  Location     Type
  patternPoint    2   69[BANK0 ] PTR unsigned int 
		 -> PixelPattern(152), 
 Auto vars:     Size  Location     Type
  i               1   90[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       1       0       0
      Temps:          0      19       0       0
      Totals:         0      22       0       0
Total ram usage:       22 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   12
 This function calls:
		_HSV_to_RGB
		_SPI32_TransmitFrames
 This function is called by:
		_ShowPattern
		_StopPattern
 This function uses a non-reentrant model


 *************** function _SPI32_TransmitFrames *****************
 Defined at:
		line 239 in file "SPI32_ControlService.c"
 Parameters:    Size  Location     Type
  framePointer    2   32[BANK0 ] PTR unsigned long 
		 -> PixelFrames(316), 
  numFrames       1   34[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  transmitEven    3   35[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       3       0       0
      Temps:          0       0       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   11
 This function calls:
		_PostSPI32ControlService
 This function is called by:
		_DotStar_Show
 This function uses a non-reentrant model


 *************** function _PostPatternControlService *****************
 Defined at:
		line 137 in file "Pattern_ControlService.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   29[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		_ES_PostToService
 This function is called by:
		_RunPatternControlService
		_ES_Timer_Tick_Resp
 This function uses a non-reentrant model


 *************** function _PostSPI32ControlService *****************
 Defined at:
		line 117 in file "SPI32_ControlService.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   29[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		_ES_PostToService
 This function is called by:
		_SPI32_TransmitFrames
		_ES_Timer_Tick_Resp
 This function uses a non-reentrant model


 *************** function _HSV_to_RGB *****************
 Defined at:
		line 49 in file "Pattern_HSV_Convert.c"
 Parameters:    Size  Location     Type
  HSV_Value       2   19[BANK0 ] PTR unsigned long 
		 -> PixelFrames(316), 
 Auto vars:     Size  Location     Type
  v               2   67[BANK0 ] unsigned int 
  p               2   65[BANK0 ] unsigned int 
  s               2   63[BANK0 ] unsigned int 
  t               2   59[BANK0 ] unsigned int 
  q               2   57[BANK0 ] unsigned int 
  b               2   55[BANK0 ] unsigned int 
  g               2   53[BANK0 ] unsigned int 
  r               2   51[BANK0 ] unsigned int 
  fpart           2   49[BANK0 ] unsigned int 
  region          2   47[BANK0 ] unsigned int 
  h               2   45[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0      24       0       0
      Temps:          0      24       0       0
      Totals:         0      50       0       0
Total ram usage:       50 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		___lwdiv
		___wmul
 This function is called by:
		_DotStar_Show
 This function uses a non-reentrant model


 *************** function ___lwdiv *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
 Parameters:    Size  Location     Type
  dividend        2   12[BANK0 ] unsigned int 
  divisor         2   14[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  quotient        2   16[BANK0 ] unsigned int 
  counter         1   18[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2   12[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       3       0       0
      Temps:          0       0       0       0
      Totals:         0       7       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_HSV_to_RGB
		_HueTest
 This function uses a non-reentrant model


 *************** function _PausePattern *****************
 Defined at:
		line 281 in file "Pattern_ControlService.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_ES_Timer_StopTimer
 This function is called by:
		_RunPatternControlService
 This function uses a non-reentrant model


 *************** function _ES_Timer_StopTimer *****************
 Defined at:
		line 205 in file "ES_Timers.c"
 Parameters:    Size  Location     Type
  Num             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  Num             1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E15472
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       4       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_StopPattern
		_PausePattern
 This function uses a non-reentrant model


 *************** function _ES_DeQueue *****************
 Defined at:
		line 164 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          2   12[BANK0 ] PTR struct ES_Event_t
		 -> Queue1(12), Queue0(12), 
  pReturnEvent    2   14[BANK0 ] PTR struct ES_Event_t
		 -> ES_Run@ThisEvent(3), ES_RecallEvents@RecalledEvent(3), 
 Auto vars:     Size  Location     Type
  pThisQueue      2   20[BANK0 ] PTR struct .
		 -> Queue1(12), Queue0(12), 
  NumLeft         1   19[BANK0 ] unsigned char 
  SaveCrit        1   18[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       4       0       0
      Temps:          0       2       0       0
      Totals:         0      10       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		___lbmod
		___wmul
 This function is called by:
		_ES_Run
		_ES_RecallEvents
 This function uses a non-reentrant model


 *************** function ___lbmod *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lbmod.c"
 Parameters:    Size  Location     Type
  dividend        1    wreg     unsigned char 
  divisor         1    0[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  dividend        1    1[BANK0 ] unsigned char 
  rem             1    3[BANK0 ] unsigned char 
  counter         1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       3       0       0
      Temps:          0       0       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_ES_DeQueue
 This function uses a non-reentrant model


 *************** function _ES_Initialize *****************
 Defined at:
		line 242 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
  NewRate         2   33[BANK0 ] enum E15423
 Auto vars:     Size  Location     Type
  i               1   35[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E15494
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   11
 This function calls:
		_ES_InitQueue
		_ES_Timer_Init
		_InitPatternControlService
		_InitSPI32ControlService
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _InitPatternControlService *****************
 Defined at:
		line 97 in file "Pattern_ControlService.c"
 Parameters:    Size  Location     Type
  Priority        1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  Priority        1   32[BANK0 ] unsigned char 
  ThisEvent       3   29[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       4       0       0
      Temps:          0       0       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		_CAN_Init
		_DotStar_Init
		_ES_PostToService
		_SetupPattern
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function _InitSPI32ControlService *****************
 Defined at:
		line 80 in file "SPI32_ControlService.c"
 Parameters:    Size  Location     Type
  Priority        1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  Priority        1   32[BANK0 ] unsigned char 
  ThisEvent       3   29[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       4       0       0
      Temps:          0       0       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		_ES_PostToService
		_SPI32_Init
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function _SPI32_Init *****************
 Defined at:
		line 65 in file "SPI32_HW.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_HW_Init
 This function is called by:
		_InitSPI32ControlService
 This function uses a non-reentrant model


 *************** function _HW_Init *****************
 Defined at:
		line 127 in file "SPI32_HW.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_SPI32_Init
 This function uses a non-reentrant model


 *************** function _SetupPattern *****************
 Defined at:
		line 71 in file "Pattern_PtrnGenerator.c"
 Parameters:    Size  Location     Type
  patternIDPoi    2    0[BANK0 ] PTR unsigned char 
		 -> PatternConfigs(4), 
  listeningFoc    2    2[BANK0 ] PTR unsigned char 
		 -> PatternConfigs(4), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_InitPatternControlService
 This function uses a non-reentrant model


 *************** function _ES_PostToService *****************
 Defined at:
		line 351 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
  WhichService    1    wreg     unsigned char 
  TheEvent        3   23[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  WhichService    1   28[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       1       0       0
      Temps:          0       2       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_ES_EnQueueFIFO
 This function is called by:
		_InitPatternControlService
		_PostPatternControlService
		_InitSPI32ControlService
		_PostSPI32ControlService
 This function uses a non-reentrant model


 *************** function _ES_EnQueueFIFO *****************
 Defined at:
		line 85 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          2   12[BANK0 ] PTR struct ES_Event_t
		 -> Queue1(12), Queue0(12), 
  Event2Add       3   14[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  pThisQueue      2   21[BANK0 ] PTR struct .
		 -> Queue1(12), Queue0(12), 
  SaveCrit        1   20[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       5       0       0
      Locals:         0       3       0       0
      Temps:          0       3       0       0
      Totals:         0      11       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		___awmod
		___wmul
 This function is called by:
		_ES_PostToService
		_ES_PostAll
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    6[BANK0 ] unsigned int 
  multiplicand    2    8[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  product         2   10[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  2    6[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       2       0       0
      Temps:          0       0       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_ES_EnQueueFIFO
		_ES_DeQueue
		_HSV_to_RGB
		_HueTest
		i2_ES_EnQueueFIFO
		_ES_EnQueueLIFO
 This function uses a non-reentrant model


 *************** function ___awmod *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
 Parameters:    Size  Location     Type
  dividend        2    0[BANK0 ] int 
  divisor         2    2[BANK0 ] int 
 Auto vars:     Size  Location     Type
  sign            1    5[BANK0 ] unsigned char 
  counter         1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       2       0       0
      Temps:          0       0       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_ES_EnQueueFIFO
		_HueTest
		_CenterBreathe
		_SingleFadedLoop
		_DoubleFadedLoop
		_BrokenPinwheel
		_MirroredQuadrants
		_SingleFocusBreathe
		_DoubleBrokenLoop
		_SingleFocusPulse
 This function uses a non-reentrant model


 *************** function _DotStar_Init *****************
 Defined at:
		line 50 in file "Pattern_DotStarLED.c"
 Parameters:    Size  Location     Type
  brightnessPo    2    0[BANK0 ] PTR unsigned char 
		 -> PatternConfigs(4), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_InitPatternControlService
 This function uses a non-reentrant model


 *************** function _CAN_Init *****************
 Defined at:
		line 59 in file "CAN_RX_HW.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_InitCanHardware
		_InitPins
 This function is called by:
		_InitPatternControlService
 This function uses a non-reentrant model


 *************** function _InitPins *****************
 Defined at:
		line 162 in file "CAN_RX_HW.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_CAN_Init
 This function uses a non-reentrant model


 *************** function _InitCanHardware *****************
 Defined at:
		line 102 in file "CAN_RX_HW.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_CAN_Init
 This function uses a non-reentrant model


 *************** function _ES_Timer_Init *****************
 Defined at:
		line 130 in file "ES_Timers.c"
 Parameters:    Size  Location     Type
  Rate            2    2[BANK0 ] enum E15423
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		__HW_Timer_Init
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function __HW_Timer_Init *****************
 Defined at:
		line 72 in file "ES_Port.c"
 Parameters:    Size  Location     Type
  Rate            2    0[BANK0 ] enum E15412
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_ES_Timer_Init
 This function uses a non-reentrant model


 *************** function _ES_InitQueue *****************
 Defined at:
		line 58 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          2    0[BANK0 ] PTR struct ES_Event_t
		 -> Queue1(12), Queue0(12), 
  BlockSize       1    2[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  pThisQueue      2    3[BANK0 ] PTR struct .
		 -> Queue1(12), Queue0(12), 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       2       0       0
      Temps:          0       0       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 112 in file "ES_Port.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:         16       0       0       0
      Totals:        16       0       0       0
Total ram usage:       16 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_CAN_BusErrorResponse
		_CAN_ErrorResponse
		_CAN_RCVResponse
		_CAN_XmitResponse
		_SPI32_EOTResponse
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model


 *************** function _SPI32_EOTResponse *****************
 Defined at:
		line 166 in file "SPI32_HW.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  EOTevent        3   32[COMRAM] struct ES_Event_t
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         3       0       0       0
      Temps:          0       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		i2_PostSPI32ControlService
		i2_SPI32_SendFrame
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function i2_SPI32_SendFrame *****************
 Defined at:
		line 85 in file "SPI32_HW.c"
 Parameters:    Size  Location     Type
  newFrame        4    0[COMRAM] unsigned long 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         0       0       0       0
      Temps:          4       0       0       0
      Totals:         8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_SPI32_EOTResponse
 This function uses a non-reentrant model


 *************** function i2_PostSPI32ControlService *****************
 Defined at:
		line 117 in file "SPI32_ControlService.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   29[COMRAM] struct ES_Event_t
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		i2_ES_PostToService
 This function is called by:
		_SPI32_EOTResponse
 This function uses a non-reentrant model


 *************** function _CAN_XmitResponse *****************
 Defined at:
		line 64 in file "CAN_RX_HW.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function _CAN_RCVResponse *****************
 Defined at:
		line 69 in file "CAN_RX_HW.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2  137[None  ] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_ProcessReceive
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function _ProcessReceive *****************
 Defined at:
		line 176 in file "CAN_RX_HW.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  Event2Post      3   34[COMRAM] struct ES_Event_t
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         5       0       0       0
      Temps:          0       0       0       0
      Totals:         5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_SetBrightness
		_SetListenFocus
		_SetPattern
		i2_PostPatternControlService
		i2___awmod
 This function is called by:
		_CAN_RCVResponse
 This function uses a non-reentrant model


 *************** function i2_PostPatternControlService *****************
 Defined at:
		line 137 in file "Pattern_ControlService.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   29[COMRAM] struct ES_Event_t
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		i2_ES_PostToService
 This function is called by:
		_ProcessReceive
 This function uses a non-reentrant model


 *************** function i2_ES_PostToService *****************
 Defined at:
		line 351 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
  WhichService    1    wreg     unsigned char 
  TheEvent        3   23[COMRAM] struct ES_Event_t
 Auto vars:     Size  Location     Type
  WhichService    1   28[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         1       0       0       0
      Temps:          2       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		i2_ES_EnQueueFIFO
 This function is called by:
		i2_PostPatternControlService
		i2_PostSPI32ControlService
 This function uses a non-reentrant model


 *************** function i2_ES_EnQueueFIFO *****************
 Defined at:
		line 85 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          2   12[COMRAM] PTR struct ES_Event_t
		 -> Queue1(12), Queue0(12), 
  Event2Add       3   14[COMRAM] struct ES_Event_t
 Auto vars:     Size  Location     Type
  ES_EnQueueFI    2   21[COMRAM] PTR struct .
		 -> Queue1(12), Queue0(12), 
  ES_EnQueueFI    1   20[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         5       0       0       0
      Locals:         3       0       0       0
      Temps:          3       0       0       0
      Totals:        11       0       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i2___awmod
		i2___wmul
 This function is called by:
		i2_ES_PostToService
 This function uses a non-reentrant model


 *************** function i2___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    6[COMRAM] unsigned int 
  multiplicand    2    8[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  __wmul          2   10[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  2    6[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		i2_ES_EnQueueFIFO
 This function uses a non-reentrant model


 *************** function i2___awmod *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
 Parameters:    Size  Location     Type
  dividend        2    0[COMRAM] int 
  divisor         2    2[COMRAM] int 
 Auto vars:     Size  Location     Type
  __awmod         1    5[COMRAM] unsigned char 
  __awmod         1    4[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2    0[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ProcessReceive
		i2_ES_EnQueueFIFO
 This function uses a non-reentrant model


 *************** function _SetPattern *****************
 Defined at:
		line 236 in file "Pattern_ControlService.c"
 Parameters:    Size  Location     Type
  PatternID       1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  PatternID       1    0[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i2_ResetPattern
 This function is called by:
		_ProcessReceive
 This function uses a non-reentrant model


 *************** function i2_ResetPattern *****************
 Defined at:
		line 77 in file "Pattern_PtrnGenerator.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_SetPattern
 This function uses a non-reentrant model


 *************** function _SetListenFocus *****************
 Defined at:
		line 249 in file "Pattern_ControlService.c"
 Parameters:    Size  Location     Type
  listFocus       1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  listFocus       1    8[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i2___awdiv
 This function is called by:
		_ProcessReceive
 This function uses a non-reentrant model


 *************** function _SetBrightness *****************
 Defined at:
		line 243 in file "Pattern_ControlService.c"
 Parameters:    Size  Location     Type
  brightness      1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  brightness      1   10[COMRAM] unsigned char 
  newBrightnes    2    8[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         3       0       0       0
      Temps:          0       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i2___awdiv
 This function is called by:
		_ProcessReceive
 This function uses a non-reentrant model


 *************** function i2___awdiv *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 Parameters:    Size  Location     Type
  dividend        2    0[COMRAM] int 
  divisor         2    2[COMRAM] int 
 Auto vars:     Size  Location     Type
  __awdiv         2    6[COMRAM] int 
  __awdiv         1    5[COMRAM] unsigned char 
  __awdiv         1    4[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2    0[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         4       0       0       0
      Temps:          0       0       0       0
      Totals:         8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_SetBrightness
		_SetListenFocus
 This function uses a non-reentrant model


 *************** function _CAN_ErrorResponse *****************
 Defined at:
		line 77 in file "CAN_RX_HW.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function _CAN_BusErrorResponse *****************
 Defined at:
		line 82 in file "CAN_RX_HW.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ISR
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
ES_Queue.c
		_ES_EnQueueFIFO		CODE           	2D00	0000	227
		_ES_DeQueue    		CODE           	26E2	0000	297
		_ES_InitQueue  		CODE           	395C	0000	61

ES_Queue.c estimated size: 585

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c
		___awmod       		CODE           	3240	0000	163

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c estimated size: 163

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\putch.c
		_putch         		CODE           	3CD2	0000	3

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\putch.c estimated size: 3

Pattern_HSV_Convert.c
		_HSV_to_RGB    		CODE           	0F28	0000	1113

Pattern_HSV_Convert.c estimated size: 1113

Pattern_DotStarLED.c
		_DotStar_Init  		CODE           	37EC	0000	83
		_DotStar_Show  		CODE           	25B4	0000	303

Pattern_DotStarLED.c estimated size: 386

Pattern_PtrnGenerator.c
		_ResetPattern  		CODE           	3BE2	0000	27
		_PatternOff    		CODE           	391E	0000	63
		_SetupPattern  		CODE           	3C72	0000	19
		_UpdatePattern 		CODE           	1E46	0000	839

Pattern_PtrnGenerator.c estimated size: 948

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c
		___wmul        		CODE           	3A0C	0000	55

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c estimated size: 55

ES_LookupTables.c
		_ES_GetMSBitSet		CODE           	319C	0000	165

ES_LookupTables.c estimated size: 165

CAN_RX_HW.c
		_InitPins      		CODE           	3BFC	0000	27
		_CAN_Init      		CODE           	3CAA	0000	11
		_CAN_ErrorResponse		CODE           	3CD4	0000	3
		_CAN_RCVResponse		CODE           	3C92	0000	13
		_CAN_XmitResponse		CODE           	3CCA	0000	7
		_CAN_BusErrorResponse		CODE           	3CD6	0000	3
		_InitCanHardware		CODE           	34F0	0000	125
		_ProcessReceive		CODE           	30EA	0000	179

CAN_RX_HW.c estimated size: 368

SPI32_ControlService.c
		_PostSPI32ControlService		CODE           	3BAC	0000	29
		_GetNextFrame  		CODE           	3BC8	0000	27
		_InitSPI32ControlService		CODE           	3998	0000	59
		_RunSPI32ControlService		CODE           	2920	0000	263
		_SPI32_TransmitFrames		CODE           	3A76	0000	51

SPI32_ControlService.c estimated size: 429

ES_Framework.c
		_ES_PostToService		CODE           	35E4	0000	119
		_ES_Run        		CODE           	2B24	0000	241
		_ES_Initialize 		CODE           	2C14	0000	237

ES_Framework.c estimated size: 597

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c
		___lwdiv       		CODE           	356C	0000	121

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c estimated size: 121

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c
		___awdiv       		CODE           	2F78	0000	191

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c estimated size: 191

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lbmod.c
		___lbmod       		CODE           	38DA	0000	69

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lbmod.c estimated size: 69

SPI32_HW.c
		_SPI32_SendFrame		CODE           	379A	0000	83
		_SPI32_EOTResponse		CODE           	39D2	0000	59
		_SPI32_Init    		CODE           	3CC4	0000	7
		_HW_Init       		CODE           	3AF4	0000	35

SPI32_HW.c estimated size: 184

shared
		_BitNum2SetMask		SMALLCONST     	0301	0000	33
		i2___awdiv     		CODE           	336E	0000	133
		i2_ES_EnQueueFIFO		CODE           	3036	0000	181
		_ES_EventList  		SMALLCONST     	0000	0000	0
		i2___wmul      		CODE           	3AA8	0000	39
		i2_ES_PostToService		CODE           	36CA	0000	107
		_Nybble2MSBitNum		SMALLCONST     	0341	0000	16
		_EventQueues   		SMALLCONST     	0358	0000	7
		__initialization		CODE           	3472	0000	113
		i2_ResetPattern		CODE           	3C16	0000	27
		i2___awmod     		CODE           	365A	0000	113
		_Timer2PostFunc		SMALLCONST     	0321	0000	33
		i2_PostPatternControlService		CODE           	3C5C	0000	23
		_ServDescList  		SMALLCONST     	0350	0000	9
		i2_SPI32_SendFrame		CODE           	388C	0000	79
		i2_PostSPI32ControlService		CODE           	3C46	0000	23

shared estimated size: 936

Pattern_ControlService.c
		_InitPatternControlService		CODE           	3734	0000	103
		_ShowPattern   		CODE           	3B16	0000	33
		_RunPatternControlService		CODE           	2EB0	0000	201
		_SetListenFocus		CODE           	3B36	0000	33
		_SetPattern    		CODE           	3C9E	0000	13
		_SetBrightness 		CODE           	3ACE	0000	39
		_PostPatternControlService		CODE           	3B90	0000	29
		_PausePattern  		CODE           	3CBC	0000	9
		_StopPattern   		CODE           	3B74	0000	29

Pattern_ControlService.c estimated size: 489

ES_Port.c
		_ISR           		CODE           	0008	0000	221
		__HW_Process_Pending_Ints		CODE           	3C30	0000	23
		__HW_Timer_Init		CODE           	3B56	0000	31

ES_Port.c estimated size: 275

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c
		_printf        		CODE           	3A42	0000	53

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c estimated size: 53

ES_Timers.c
		_ES_Timer_Init 		CODE           	3C84	0000	15
		_ES_Timer_InitTimer		CODE           	33F2	0000	129
		_ES_Timer_StopTimer		CODE           	383E	0000	79
		_ES_Timer_Tick_Resp		CODE           	280A	0000	279

ES_Timers.c estimated size: 502

Pattern_PtrnFunctions.c
		_MirroredQuadrants		CODE           	1380	0000	1069
		_HueTest       		CODE           	2A26	0000	255
		_DoubleFadedLoop		CODE           	09BE	0000	1387
		_FullPulseHold 		CODE           	2426	0000	399
		_SingleFocusBreathe		CODE           	1AFA	0000	845
		_BrokenPinwheel		CODE           	03B8	0000	1543
		_CenterBreathe 		CODE           	17AC	0000	847
		_SingleFadedLoop		CODE           	218C	0000	667

Pattern_PtrnFunctions.c estimated size: 7012

main.c
		_main          		CODE           	32E2	0000	141

main.c estimated size: 141

