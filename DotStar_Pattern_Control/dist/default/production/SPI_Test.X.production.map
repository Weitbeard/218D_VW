Microchip MPLAB XC8 Compiler V1.38 ()

Linker command line:

--edf=/Applications/microchip/xc8/v1.38/dat/en_msgs.txt -cs \
  -h+dist/default/production/SPI_Test.X.production.sym \
  --cmf=dist/default/production/SPI_Test.X.production.cmf -z -Q18F2480 \
  -o/tmp/xc9f4Gpjf -Mdist/default/production/SPI_Test.X.production.map -E1 \
  -ver=XC8 -ASTACK=0134h-02ffh -pstack=STACK -ACODE=00h-03FFFh \
  -ACONST=00h-03FFFh -ASMALLCONST=0300h-03FFhx61 -AMEDIUMCONST=0300h-03FFFh \
  -ACOMRAM=01h-05Fh -AABS1=00h-02FFh -ABIGRAM=01h-02FFh \
  -ARAM=060h-0FFh,0100h-01FFhx2 -ABANK0=060h-0FFh -ABANK1=0100h-01FFh \
  -ABANK2=0200h-02FFh -ASFR=0D00h-0DFFhx2,0F00h-0F5Fh,0F60h-0FFFh \
  -preset_vec=00h,intcode=08h,intcodelo,powerup,init,end_init \
  -pramtop=0300h -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST \
  -pconst=CONST -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  /tmp/xcB70Mu41.obj dist/default/production/SPI_Test.X.production.obj 

Object code version is 3.11

Machine type is 18F2480

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
/tmp/xcB70Mu41.obj
                end_init                             16       16        4        4       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production/SPI_Test.X.production.obj
                intcode                               8        8        E        4       0
                temp                                 40       40        1        1       1
                smallconst                          300      300       BE      180       0
                text39                              FB8      FB8       70      1DF       0
                text38                             1362     1362       26      1DF       0
                text37                              B94      B94       B4      1DF       0
                text36                             1028     1028       6A      1DF       0
                text35                             1418     1418       16      1DF       0
                text34                             1402     1402       16      1DF       0
                intcode_body                        C48      C48       A6      1DF       0
                text32                             125E     125E       3C      1DF       0
                text31                             13A4     13A4       1C      1DF       0
                text30                             1440     1440        E      1DF       0
                text29                              EC2      EC2       80      1DF       0
                text28                              53C      53C      158      1DF       0
                text27                             1336     1336       2C      1DF       0
                text26                             142E     142E       12      1DF       0
                text25                              D92      D92       A2      1DF       0
                text24                             129A     129A       36      1DF       0
                text23                              AB2      AB2       E2      1DF       0
                text22                              F42      F42       76      1DF       0
                text21                             10F2     10F2       54      1DF       0
                text20                             121A     121A       44      1DF       0
                text19                              9C6      9C6       EC      1DF       0
                text18                             1458     1458        8      1DF       0
                text17                             13EC     13EC       16      1DF       0
                text16                             1092     1092       60      1DF       0
                text15                             1460     1460        4      1DF       0
                text14                             1146     1146       4A      1DF       0
                text13                             11D6     11D6       44      1DF       0
                text12                              694      694      128      1DF       0
                text11                             144E     144E        A      1DF       0
                text10                             1190     1190       46      1DF       0
                text9                               3BE      3BE      17E      1DF       0
                text8                               CEE      CEE       A4      1DF       0
                text7                              13D6     13D6       16      1DF       0
                text6                              1388     1388       1C      1DF       0
                text5                               7BC      7BC      116      1DF       0
                text4                              13C0     13C0       16      1DF       0
                text3                               8D2      8D2       F4      1DF       0
                text2                              1464     1464        2      1DF       0
                text1                              12D0     12D0       34      1DF       0
                text0                               E34      E34       8E      1DF       0
                cstackCOMRAM                          1        1       33        1       1
                cstackBANK0                          B7       B7       31       60       1
                bssBANK1                            100      100       34      100       1
                bssBANK0                             60       60       57       60       1
                bssCOMRAM                            34       34        C        1       1
                cinit                              1304     1304       32      1DF       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             16       16        4         0
                intcode                               8        8        E         0
                reset_vec                             0        0        4         0
                text39                              FB8      FB8       70         0
                text38                             1362     1362       26         0
                text37                              B94      B94       B4         0
                text36                             1028     1028       6A         0
                text35                             1418     1418       16         0
                text34                             1402     1402       16         0
                intcode_body                        C48      C48       A6         0
                text32                             125E     125E       3C         0
                text31                             13A4     13A4       1C         0
                text30                             1440     1440        E         0
                text29                              EC2      EC2       80         0
                text28                              53C      53C      158         0
                text27                             1336     1336       2C         0
                text26                             142E     142E       12         0
                text25                              D92      D92       A2         0
                text24                             129A     129A       36         0
                text23                              AB2      AB2       E2         0
                text22                              F42      F42       76         0
                text21                             10F2     10F2       54         0
                text20                             121A     121A       44         0
                text19                              9C6      9C6       EC         0
                text18                             1458     1458        8         0
                text17                             13EC     13EC       16         0
                text16                             1092     1092       60         0
                text15                             1460     1460        4         0
                text14                             1146     1146       4A         0
                text13                             11D6     11D6       44         0
                text12                              694      694      128         0
                text11                             144E     144E        A         0
                text10                             1190     1190       46         0
                text9                               3BE      3BE      17E         0
                text8                               CEE      CEE       A4         0
                text7                              13D6     13D6       16         0
                text6                              1388     1388       1C         0
                text5                               7BC      7BC      116         0
                text4                              13C0     13C0       16         0
                text3                               8D2      8D2       F4         0
                text2                              1464     1464        2         0
                text1                              12D0     12D0       34         0
                text0                               E34      E34       8E         0
                cinit                              1304     1304       32         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                          300      300       BE         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                temp                                 40       40        1         1
                cstackCOMRAM                          1        1       33         1
                bssCOMRAM                            34       34        C         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                cstackBANK0                          B7       B7       31         1
                bssBANK0                             60       60       57         1

        CLASS   BANK1          
                bssBANK1                            100      100       34         1

        CLASS   BANK2          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  000040  000041         1       1  COMRAM  
                intcode                        000008  000012  00001A         4       0  CODE    
                bssBANK0                       000060  000088  0000E8        60       1  BANK0   
                bssBANK1                       000100  000034  000134       100       1  BANK1   
                smallconst                     000300  0000BE  0003BE       180       0  SMALLCON
                text9                          0003BE  0010A8  001466       1DF       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0000E8-0000FF               18
        BANK1            000134-0001FF               CC
        BANK2            000200-0002FF              100
        BIGRAM           000041-00005F               1F
                         0000E8-0000FF               18
                         000134-0002FF              1CC
        CODE             000004-000007                4
                         00001A-0002FF              2E6
                         001466-003FFF             2B9A
        COMRAM           000041-00005F               1F
        CONST            000004-000007                4
                         00001A-0002FF              2E6
                         001466-003FFF             2B9A
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      001466-003FFF             2B9A
        RAM              0000E8-0000FF               18
                         000134-0002FF               CC
        SFR              000D00-000FFF              100
        SMALLCONST       001466-003FFF              100
        STACK            000134-0002FF              1CC

                                  Symbol Table

?_RunSPI_Service                     cstackBANK0  0000D7
?_RunToggleService                   cstackBANK0  0000D7
?___awmod                            cstackBANK0  0000B7
?___wmul                             cstackBANK0  0000BD
?_printf                             cstackBANK0  0000B7
?i2___awmod                          cstackCOMRAM 000001
?i2___wmul                           cstackCOMRAM 000007
Button@CurrentState                  bssCOMRAM    00003C
Button@MyPriority                    bssBANK0     00008C
CheckButtonEvents@CurrentButtonState cstackBANK0  0000DB
CheckButtonEvents@ReturnVal          cstackBANK0  0000D7
CheckButtonEvents@ThisEvent          cstackBANK0  0000D8
EOTResponse@ThisEvent                cstackCOMRAM 000021
ES_CheckUserEvents@i                 cstackBANK0  0000DC
ES_DeQueue@NumLeft                   cstackBANK0  0000CA
ES_DeQueue@SaveCrit                  cstackBANK0  0000C9
ES_DeQueue@pBlock                    cstackBANK0  0000C3
ES_DeQueue@pReturnEvent              cstackBANK0  0000C5
ES_DeQueue@pThisQueue                cstackBANK0  0000CB
ES_EnQueueFIFO@Event2Add             cstackBANK0  0000C5
ES_EnQueueFIFO@SaveCrit              cstackBANK0  0000CB
ES_EnQueueFIFO@pBlock                cstackBANK0  0000C3
ES_EnQueueFIFO@pThisQueue            cstackBANK0  0000CC
ES_GetMSBitSet@LoopCntr              cstackBANK0  0000C0
ES_GetMSBitSet@Nybble2Test           cstackBANK0  0000BF
ES_GetMSBitSet@ReturnVal             cstackBANK0  0000BE
ES_GetMSBitSet@Val2Check             cstackBANK0  0000B7
ES_InitQueue@BlockSize               cstackBANK0  0000B9
ES_InitQueue@pBlock                  cstackBANK0  0000B7
ES_InitQueue@pThisQueue              cstackBANK0  0000BA
ES_Initialize@NewRate                cstackBANK0  0000D8
ES_Initialize@i                      cstackBANK0  0000DA
ES_PostToService@TheEvent            cstackBANK0  0000CE
ES_PostToService@WhichService        cstackBANK0  0000D3
ES_Run@HighestPrior                  cstackBANK0  0000E6
ES_Run@ThisEvent                     bssBANK0     0000B4
ES_Timer_Init@Rate                   cstackBANK0  0000B9
ES_Timer_InitTimer@NewTime           cstackBANK0  0000B7
ES_Timer_InitTimer@Num               cstackBANK0  0000BB
ES_Timer_Tick_Resp@NeedsProcessing   bssBANK0     000086
ES_Timer_Tick_Resp@NewEvent          bssBANK0     000080
ES_Timer_Tick_Resp@NextTimer2Process bssBANK0     00008D
FormPacket@i                         cstackBANK0  0000B9
FormPacket@i_765                     cstackBANK0  0000BA
FormPacket@j                         cstackBANK0  0000BC
FormPacket@ledNum                    cstackBANK0  0000BB
ISR@LastTime                         bssCOMRAM    000034
ISR@NextTime                         bssCOMRAM    000036
InitSPI_Service@Priority             cstackBANK0  0000BD
InitToggleService@Priority           cstackBANK0  0000D7
InitToggleService@ThisEvent          cstackBANK0  0000D4
PostButtonDebounceSM@ThisEvent       cstackBANK0  0000D4
PostSPI_Service@ThisEvent            cstackBANK0  0000D4
PostToggleService@ThisEvent          cstackBANK0  0000D4
RunSPI_Service@ReturnEvent           cstackBANK0  0000DC
RunSPI_Service@ThisEvent             cstackBANK0  0000D7
RunSPI_Service@ThisEvent_751         cstackBANK0  0000DF
RunToggleService@ReturnEvent         cstackBANK0  0000DA
RunToggleService@ThisEvent           cstackBANK0  0000D7
SPI_Service@CurrentState             bssBANK0     00008E
SPI_Service@MyPriority               bssBANK0     00008F
SetBGR@B                             cstackBANK0  0000B9
SetBGR@G                             cstackBANK0  0000B7
SetBGR@R                             cstackBANK0  0000B8
TemplateService@MyPriority           bssCOMRAM    00003D
ToggleService@MyPriority             bssBANK0     000090
_ADCON1                              (abs)        000FC1
_BGR                                 bssBANK0     000083
_BitNum2SetMask                      smallconst   000301
_BytesToSend                         bssBANK1     000100
_CCP1CON                             (abs)        000FBD
_CCP1IF                              (abs)        007CF2
_CCPR1H                              (abs)        000FBF
_CCPR1L                              (abs)        000FBE
_Check4Keystroke                     text15       001460
_CheckButtonEvents                   text16       001092
_CurrentState                        bssCOMRAM    00003E
_DistList00                          smallconst   000362
_EOTResponse                         text34       001402
_ES_CheckUserEvents                  text14       001146
_ES_DeQueue                          text12       000694
_ES_EnQueueFIFO                      text23       000AB2
_ES_EventList                        smallconst   00035E
_ES_GetMSBitSet                      text8        000CEE
_ES_InitQueue                        text32       00125E
_ES_Initialize                       text19       0009C6
_ES_PostToService                    text22       000F42
_ES_Run                              text3        0008D2
_ES_Timer_Init                       text30       001440
_ES_Timer_InitTimer                  text29       000EC2
_ES_Timer_Tick_Resp                  text5        0007BC
_EventQueues                         smallconst   000358
_FirstSend                           bssBANK0     000091
_FormPacket                          text28       00053C
_GIE                                 (abs)        007F97
_GetInputLine                        text18       001458
_INTCON                              (abs)        000FF2
_IRCF0                               (abs)        007E9C
_IRCF1                               (abs)        007E9D
_IRCF2                               (abs)        007E9E
_ISR                                 intcode      000008
_InitSPI                             text27       001336
_InitSPI_Service                     text20       00121A
_InitToggleService                   text21       0010F2
_LATA                                (abs)        000F89
_LATA0                               (abs)        007C48
_LATA1                               (abs)        007C49
_LATA2                               (abs)        007C4A
_LATC                                (abs)        000F8B
_LEDColor                            bssBANK0     000092
_LastButtonState                     bssBANK0     000093
_MyPriority                          bssCOMRAM    00003F
_NumBytesLeft                        bssBANK0     000094
_Nybble2MSBitNum                     smallconst   000341
_PIE1                                (abs)        000F9D
_PORTA                               (abs)        000F80
_PORTC                               (abs)        000F82
_PostButtonDebounceSM                text17       0013EC
_PostSPI_Service                     text6        001388
_PostSPI_Service$intlevel0           text6        00138E
_PostToggleService                   text7        0013D6
_Queue0                              bssBANK0     000096
_Queue1                              bssBANK0     0000A8
_Ready                               bssBANK0     000088
_RunSPI_Service                      text9        0003BE
_RunToggleService                    text10       001190
_SSPADD                              (abs)        000FC8
_SSPBUF                              (abs)        000FC9
_SSPCON1                             (abs)        000FC6
_SSPIE                               (abs)        007CEB
_SSPIF                               (abs)        007CF3
_SSPSTAT                             (abs)        000FC7
_ServDescList                        smallconst   000350
_SetBGR                              text26       00142E
_SysTickCounter                      bssCOMRAM    000038
_T1CON                               (abs)        000FCD
_TMR_ActiveFlags                     bssBANK0     00008A
_TMR_TimerArray                      bssBANK0     000060
_TRISA                               (abs)        000F92
_TRISC                               (abs)        000F94
_TickCount                           bssBANK0     000095
_Timer2PostFunc                      smallconst   000321
__CFG_BOREN$OFF                      (abs)        000000
__CFG_MCLRE$ON                       (abs)        000000
__CFG_OSC$IRCIO67                    (abs)        000000
__CFG_PBADEN$OFF                     (abs)        000000
__CFG_PWRT$OFF                       (abs)        000000
__CFG_WDT$OFF                        (abs)        000000
__HRAM                               (abs)        000000
__HW_Process_Pending_Ints            text4        0013C0
__HW_Timer_Init                      text31       0013A4
__HW_Timer_Init@Rate                 cstackBANK0  0000B7
__Habs1                              abs1         000000
__Hbank0                             bank0        000000
__Hbank1                             bank1        000000
__Hbank2                             bank2        000000
__Hbigbss                            bigbss       000000
__Hbigdata                           bigdata      000000
__Hbigram                            bigram       000000
__Hbss                               bss          000000
__HbssBANK0                          bssBANK0     000000
__HbssBANK1                          bssBANK1     000000
__HbssCOMRAM                         bssCOMRAM    000000
__Hcinit                             cinit        000000
__Hclrtext                           clrtext      000000
__Hcomram                            comram       000000
__Hconfig                            config       30000E
__Hconst                             const        000000
__HcstackBANK0                       cstackBANK0  000000
__HcstackCOMRAM                      cstackCOMRAM 000000
__Hdata                              data         000000
__Heeprom_data                       eeprom_data  000000
__Hend_init                          end_init     00001A
__Hfarbss                            farbss       000000
__Hfardata                           fardata      000000
__Hibigdata                          ibigdata     000000
__Hidata                             idata        000000
__Hidloc                             idloc        200008
__Hifardata                          ifardata     000000
__Hinit                              init         000016
__Hintcode                           intcode      000016
__Hintcode_body                      intcode_body 000000
__Hintcodelo                         intcodelo    000016
__Hintentry                          intentry     000000
__Hintret                            intret       000000
__Hintsave_regs                      intsave_regs 000000
__Hirdata                            irdata       000000
__Hmediumconst                       mediumconst  000000
__HnvFARRAM                          nvFARRAM     000000
__Hnvbit                             nvbit        000000
__Hnvrram                            nvrram       000000
__Hparam                             rparam       000000
__Hpowerup                           powerup      000016
__Hram                               ram          000000
__Hramtop                            ramtop       000300
__Hrbit                              rbit         000000
__Hrbss                              rbss         000000
__Hrdata                             rdata        000000
__Hreset_vec                         reset_vec    000004
__Hrparam                            rparam       000000
__Hsfr                               sfr          000000
__Hsmallconst                        smallconst   0003BE
__Hspace_0                           (abs)        30000E
__Hspace_1                           (abs)        000134
__Hspace_2                           (abs)        000000
__Hstack                             stack        000000
__Hstruct                            struct       000000
__Htemp                              temp         000041
__Htext                              text         000000
__Htext0                             text0        000000
__Htext1                             text1        000000
__Htext10                            text10       000000
__Htext11                            text11       000000
__Htext12                            text12       000000
__Htext13                            text13       000000
__Htext14                            text14       000000
__Htext15                            text15       000000
__Htext16                            text16       000000
__Htext17                            text17       000000
__Htext18                            text18       000000
__Htext19                            text19       000000
__Htext2                             text2        000000
__Htext20                            text20       000000
__Htext21                            text21       000000
__Htext22                            text22       000000
__Htext23                            text23       000000
__Htext24                            text24       000000
__Htext25                            text25       000000
__Htext26                            text26       000000
__Htext27                            text27       000000
__Htext28                            text28       000000
__Htext29                            text29       000000
__Htext3                             text3        000000
__Htext30                            text30       000000
__Htext31                            text31       000000
__Htext32                            text32       000000
__Htext34                            text34       000000
__Htext35                            text35       000000
__Htext36                            text36       000000
__Htext37                            text37       000000
__Htext38                            text38       000000
__Htext39                            text39       000000
__Htext4                             text4        000000
__Htext40                            text40       000000
__Htext5                             text5        000000
__Htext6                             text6        000000
__Htext7                             text7        000000
__Htext8                             text8        000000
__Htext9                             text9        000000
__LRAM                               (abs)        000001
__Labs1                              abs1         000000
__Lbank0                             bank0        000000
__Lbank1                             bank1        000000
__Lbank2                             bank2        000000
__Lbigbss                            bigbss       000000
__Lbigdata                           bigdata      000000
__Lbigram                            bigram       000000
__Lbss                               bss          000000
__LbssBANK0                          bssBANK0     000000
__LbssBANK1                          bssBANK1     000000
__LbssCOMRAM                         bssCOMRAM    000000
__Lcinit                             cinit        000000
__Lclrtext                           clrtext      000000
__Lcomram                            comram       000000
__Lconfig                            config       300000
__Lconst                             const        000000
__LcstackBANK0                       cstackBANK0  000000
__LcstackCOMRAM                      cstackCOMRAM 000000
__Ldata                              data         000000
__Leeprom_data                       eeprom_data  000000
__Lend_init                          end_init     000016
__Lfarbss                            farbss       000000
__Lfardata                           fardata      000000
__Libigdata                          ibigdata     000000
__Lidata                             idata        000000
__Lidloc                             idloc        200000
__Lifardata                          ifardata     000000
__Linit                              init         000016
__Lintcode                           intcode      000008
__Lintcode_body                      intcode_body 000000
__Lintcodelo                         intcodelo    000016
__Lintentry                          intentry     000000
__Lintret                            intret       000000
__Lintsave_regs                      intsave_regs 000000
__Lirdata                            irdata       000000
__Lmediumconst                       mediumconst  000000
__LnvFARRAM                          nvFARRAM     000000
__Lnvbit                             nvbit        000000
__Lnvrram                            nvrram       000000
__Lparam                             rparam       000000
__Lpowerup                           powerup      000016
__Lram                               ram          000000
__Lramtop                            ramtop       000300
__Lrbit                              rbit         000000
__Lrbss                              rbss         000000
__Lrdata                             rdata        000000
__Lreset_vec                         reset_vec    000000
__Lrparam                            rparam       000000
__Lsfr                               sfr          000000
__Lsmallconst                        smallconst   000300
__Lspace_0                           (abs)        000000
__Lspace_1                           (abs)        000000
__Lspace_2                           (abs)        000000
__Lstack                             stack        000000
__Lstruct                            struct       000000
__Ltemp                              temp         000040
__Ltext                              text         000000
__Ltext0                             text0        000000
__Ltext1                             text1        000000
__Ltext10                            text10       000000
__Ltext11                            text11       000000
__Ltext12                            text12       000000
__Ltext13                            text13       000000
__Ltext14                            text14       000000
__Ltext15                            text15       000000
__Ltext16                            text16       000000
__Ltext17                            text17       000000
__Ltext18                            text18       000000
__Ltext19                            text19       000000
__Ltext2                             text2        000000
__Ltext20                            text20       000000
__Ltext21                            text21       000000
__Ltext22                            text22       000000
__Ltext23                            text23       000000
__Ltext24                            text24       000000
__Ltext25                            text25       000000
__Ltext26                            text26       000000
__Ltext27                            text27       000000
__Ltext28                            text28       000000
__Ltext29                            text29       000000
__Ltext3                             text3        000000
__Ltext30                            text30       000000
__Ltext31                            text31       000000
__Ltext32                            text32       000000
__Ltext34                            text34       000000
__Ltext35                            text35       000000
__Ltext36                            text36       000000
__Ltext37                            text37       000000
__Ltext38                            text38       000000
__Ltext39                            text39       000000
__Ltext4                             text4        000000
__Ltext40                            text40       000000
__Ltext5                             text5        000000
__Ltext6                             text6        000000
__Ltext7                             text7        000000
__Ltext8                             text8        000000
__Ltext9                             text9        000000
__PRIMASK_temp                       bssCOMRAM    00003A
__S0                                 (abs)        30000E
__S1                                 (abs)        000134
__S2                                 (abs)        000000
___awmod                             text25       000D92
___awmod@counter                     cstackBANK0  0000BB
___awmod@dividend                    cstackBANK0  0000B7
___awmod@divisor                     cstackBANK0  0000B9
___awmod@sign                        cstackBANK0  0000BC
___inthi_sp                          stack        000000
___intlo_sp                          stack        000000
___lbmod                             text13       0011D6
___lbmod@counter                     cstackBANK0  0000B9
___lbmod@dividend                    cstackBANK0  0000B8
___lbmod@divisor                     cstackBANK0  0000B7
___lbmod@rem                         cstackBANK0  0000BA
___param_bank                        (abs)        000010
___rparam_used                       (abs)        000001
___sp                                stack        000000
___wmul                              text24       00129A
___wmul@multiplicand                 cstackBANK0  0000BF
___wmul@multiplier                   cstackBANK0  0000BD
___wmul@product                      cstackBANK0  0000C1
__accesstop                          (abs)        000060
__activetblptr                       (abs)        000002
__end_of_BitNum2SetMask              smallconst   000321
__end_of_Check4Keystroke             text15       001464
__end_of_CheckButtonEvents           text16       0010F2
__end_of_DistList00                  smallconst   000364
__end_of_EOTResponse                 text34       001418
__end_of_ES_CheckUserEvents          text14       001190
__end_of_ES_DeQueue                  text12       0007BC
__end_of_ES_EnQueueFIFO              text23       000B94
__end_of_ES_EventList                smallconst   000362
__end_of_ES_GetMSBitSet              text8        000D92
__end_of_ES_InitQueue                text32       00129A
__end_of_ES_Initialize               text19       000AB2
__end_of_ES_PostToService            text22       000FB8
__end_of_ES_Run                      text3        0009C6
__end_of_ES_Timer_Init               text30       00144E
__end_of_ES_Timer_InitTimer          text29       000F42
__end_of_ES_Timer_Tick_Resp          text5        0008D2
__end_of_EventQueues                 smallconst   00035E
__end_of_FormPacket                  text28       000694
__end_of_GetInputLine                text18       001460
__end_of_ISR                         intcode_body 000CEE
__end_of_InitSPI                     text27       001362
__end_of_InitSPI_Service             text20       00125E
__end_of_InitToggleService           text21       001146
__end_of_Nybble2MSBitNum             smallconst   000350
__end_of_PostButtonDebounceSM        text17       001402
__end_of_PostSPI_Service             text6        0013A4
__end_of_PostToggleService           text7        0013EC
__end_of_RunSPI_Service              text9        00053C
__end_of_RunToggleService            text10       0011D6
__end_of_ServDescList                smallconst   000358
__end_of_SetBGR                      text26       001440
__end_of_Timer2PostFunc              smallconst   000341
__end_of__HW_Process_Pending_Ints    text4        0013D6
__end_of__HW_Timer_Init              text31       0013C0
__end_of___awmod                     text25       000E34
__end_of___lbmod                     text13       00121A
__end_of___wmul                      text24       0012D0
__end_of__initialization             cinit        001328
__end_of_main                        text0        000EC2
__end_of_printf                      text1        001304
__end_of_putch                       text2        001466
__end_of_sendByte                    text11       001458
__end_ofi2_ES_EnQueueFIFO            text37       000C48
__end_ofi2_ES_PostToService          text36       001092
__end_ofi2_PostSPI_Service           text35       00142E
__end_ofi2___awmod                   text39       001028
__end_ofi2___wmul                    text38       001388
__initialization                     cinit        001304
__mediumconst                        mediumconst  000000
__pbssBANK0                          bssBANK0     000060
__pbssBANK1                          bssBANK1     000100
__pbssCOMRAM                         bssCOMRAM    000034
__pcinit                             cinit        001304
__pcstackBANK0                       cstackBANK0  0000B7
__pcstackCOMRAM                      cstackCOMRAM 000001
__pintcode                           intcode      000008
__pintcode_body                      intcode_body 000C48
__psmallconst                        smallconst   000300
__ptext0                             text0        000E34
__ptext1                             text1        0012D0
__ptext10                            text10       001190
__ptext11                            text11       00144E
__ptext12                            text12       000694
__ptext13                            text13       0011D6
__ptext14                            text14       001146
__ptext15                            text15       001460
__ptext16                            text16       001092
__ptext17                            text17       0013EC
__ptext18                            text18       001458
__ptext19                            text19       0009C6
__ptext2                             text2        001464
__ptext20                            text20       00121A
__ptext21                            text21       0010F2
__ptext22                            text22       000F42
__ptext23                            text23       000AB2
__ptext24                            text24       00129A
__ptext25                            text25       000D92
__ptext26                            text26       00142E
__ptext27                            text27       001336
__ptext28                            text28       00053C
__ptext29                            text29       000EC2
__ptext3                             text3        0008D2
__ptext30                            text30       001440
__ptext31                            text31       0013A4
__ptext32                            text32       00125E
__ptext34                            text34       001402
__ptext35                            text35       001418
__ptext36                            text36       001028
__ptext37                            text37       000B94
__ptext38                            text38       001362
__ptext39                            text39       000FB8
__ptext4                             text4        0013C0
__ptext40                            text40       000000
__ptext5                             text5        0007BC
__ptext6                             text6        001388
__ptext7                             text7        0013D6
__ptext8                             text8        000CEE
__ptext9                             text9        0003BE
__ramtop                             ramtop       000300
__size_of_Check4Keystroke            (abs)        000000
__size_of_CheckButtonEvents          (abs)        000000
__size_of_EOTResponse                (abs)        000000
__size_of_ES_CheckUserEvents         (abs)        000000
__size_of_ES_DeQueue                 (abs)        000000
__size_of_ES_EnQueueFIFO             (abs)        000000
__size_of_ES_GetMSBitSet             (abs)        000000
__size_of_ES_InitQueue               (abs)        000000
__size_of_ES_Initialize              (abs)        000000
__size_of_ES_PostToService           (abs)        000000
__size_of_ES_Run                     (abs)        000000
__size_of_ES_Timer_Init              (abs)        000000
__size_of_ES_Timer_InitTimer         (abs)        000000
__size_of_ES_Timer_Tick_Resp         (abs)        000000
__size_of_FormPacket                 (abs)        000000
__size_of_GetInputLine               (abs)        000000
__size_of_ISR                        (abs)        000000
__size_of_InitSPI                    (abs)        000000
__size_of_InitSPI_Service            (abs)        000000
__size_of_InitToggleService          (abs)        000000
__size_of_PostButtonDebounceSM       (abs)        000000
__size_of_PostSPI_Service            (abs)        000000
__size_of_PostToggleService          (abs)        000000
__size_of_RunSPI_Service             (abs)        000000
__size_of_RunToggleService           (abs)        000000
__size_of_SetBGR                     (abs)        000000
__size_of__HW_Process_Pending_Ints   (abs)        000000
__size_of__HW_Timer_Init             (abs)        000000
__size_of___awmod                    (abs)        000000
__size_of___lbmod                    (abs)        000000
__size_of___wmul                     (abs)        000000
__size_of_main                       (abs)        000000
__size_of_printf                     (abs)        000000
__size_of_putch                      (abs)        000000
__size_of_sendByte                   (abs)        000000
__size_ofi2_ES_EnQueueFIFO           (abs)        000000
__size_ofi2_ES_PostToService         (abs)        000000
__size_ofi2_PostSPI_Service          (abs)        000000
__size_ofi2___awmod                  (abs)        000000
__size_ofi2___wmul                   (abs)        000000
__smallconst                         smallconst   000300
_main                                text0        000E34
_printf                              text1        0012D0
_putch                               text2        001464
_sendByte                            text11       00144E
btemp                                temp         000040
end_of_initialization                cinit        001328
i2ES_EnQueueFIFO@Event2Add           cstackCOMRAM 00000F
i2ES_EnQueueFIFO@SaveCrit            cstackCOMRAM 000015
i2ES_EnQueueFIFO@pBlock              cstackCOMRAM 00000D
i2ES_EnQueueFIFO@pThisQueue          cstackCOMRAM 000016
i2ES_PostToService@TheEvent          cstackCOMRAM 000018
i2ES_PostToService@WhichService      cstackCOMRAM 00001D
i2PostSPI_Service@ThisEvent          cstackCOMRAM 00001E
i2_ES_EnQueueFIFO                    text37       000B94
i2_ES_PostToService                  text36       001028
i2_PostSPI_Service                   text35       001418
i2___awmod                           text39       000FB8
i2___awmod@counter                   cstackCOMRAM 000005
i2___awmod@dividend                  cstackCOMRAM 000001
i2___awmod@divisor                   cstackCOMRAM 000003
i2___awmod@sign                      cstackCOMRAM 000006
i2___wmul                            text38       001362
i2___wmul@multiplicand               cstackCOMRAM 000009
i2___wmul@multiplier                 cstackCOMRAM 000007
i2___wmul@product                    cstackCOMRAM 00000B
int$flags                            temp         000040
int_func                             intcode_body 000C48
intlevel0                            text         000000
intlevel1                            text         000000
intlevel2                            text         000000
intlevel3                            text         000000
main@ErrorType                       cstackBANK0  0000E7
printf@ap                            cstackBANK0  0000B9
printf@c                             cstackBANK0  0000BB
printf@f                             cstackBANK0  0000B7
sendByte@Data                        cstackBANK0  0000B7
stackhi                              (abs)        0002FF
stacklo                              (abs)        000134
start                                init         000016
start_initialization                 cinit        001304


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 25 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  ErrorType       1   48[BANK0 ] enum E15671
 Return value:  Size  Location     Type
                  2  335[None  ] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels required when called:   13
 This function calls:
		_ES_Initialize
		_ES_Run
		_printf
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _printf *****************
 Defined at:
		line 464 in file "/Applications/microchip/xc8/v1.38/sources/common/doprnt.c"
 Parameters:    Size  Location     Type
  f               2    0[BANK0 ] PTR const unsigned char 
		 -> STR_4(15), STR_3(23), STR_2(24), STR_1(27), 
 Auto vars:     Size  Location     Type
  tmpval          4    0        struct .
  cp              3    0        PTR const unsigned char 
  ap              2    2[BANK0 ] PTR void [1]
		 -> ?_printf(2), 
  len             2    0        unsigned int 
  val             2    0        unsigned int 
  c               1    4[BANK0 ] char 
  flag            1    0        unsigned char 
  prec            1    0        char 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       3       0       0
      Temps:          0       0       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_putch
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _putch *****************
 Defined at:
		line 7 in file "/Applications/microchip/xc8/v1.38/sources/common/putch.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1    0[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_printf
 This function uses a non-reentrant model


 *************** function _ES_Run *****************
 Defined at:
		line 277 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  HighestPrior    1   47[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E15498
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       4       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   12
 This function calls:
		_ES_CheckUserEvents
		_ES_DeQueue
		_ES_GetMSBitSet
		_RunSPI_Service
		_RunToggleService
		__HW_Process_Pending_Ints
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function __HW_Process_Pending_Ints *****************
 Defined at:
		line 210 in file "ES_Port.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   11
 This function calls:
		_ES_Timer_Tick_Resp
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _ES_Timer_Tick_Resp *****************
 Defined at:
		line 284 in file "ES_Timers.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       4       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		Absolute function
		_ES_GetMSBitSet
		_PostSPI_Service
		_PostToggleService
 This function is called by:
		__HW_Process_Pending_Ints
 This function uses a non-reentrant model


 *************** function _PostSPI_Service *****************
 Defined at:
		line 82 in file "SPI_Service.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   29[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_ES_PostToService
 This function is called by:
		_RunSPI_Service
		_ES_Timer_Tick_Resp
 This function uses a non-reentrant model


 *************** function _PostToggleService *****************
 Defined at:
		line 107 in file "ToggleService.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   29[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_ES_PostToService
 This function is called by:
		_ES_Timer_Tick_Resp
		_PostToList
 This function uses a non-reentrant model


 *************** function _ES_GetMSBitSet *****************
 Defined at:
		line 79 in file "ES_LookupTables.c"
 Parameters:    Size  Location     Type
  Val2Check       2    0[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  LoopCntr        1    9[BANK0 ] char 
  Nybble2Test     1    8[BANK0 ] unsigned char 
  ReturnVal       1    7[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       3       0       0
      Temps:          0       5       0       0
      Totals:         0      10       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ES_Run
		_ES_Timer_Tick_Resp
 This function uses a non-reentrant model


 *************** function _RunSPI_Service *****************
 Defined at:
		line 98 in file "SPI_Service.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   32[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  ThisEvent       3   40[BANK0 ] struct ES_Event_t
  ReturnEvent     3   37[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  3   32[BANK0 ] struct ES_Event_t
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       6       0       0
      Temps:          0       2       0       0
      Totals:         0      11       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		_ES_Timer_InitTimer
		_FormPacket
		_PostSPI_Service
		_SetBGR
		_sendByte
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _RunToggleService *****************
 Defined at:
		line 129 in file "ToggleService.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   32[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  ReturnEvent     3   35[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  3   32[BANK0 ] struct ES_Event_t
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       3       0       0
      Temps:          0       0       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_ES_Timer_InitTimer
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _sendByte *****************
 Defined at:
		line 168 in file "SPI_Service.c"
 Parameters:    Size  Location     Type
  Data            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  Data            1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_RunSPI_Service
 This function uses a non-reentrant model


 *************** function _ES_DeQueue *****************
 Defined at:
		line 164 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          2   12[BANK0 ] PTR struct ES_Event_t
		 -> Queue1(12), Queue0(18), 
  pReturnEvent    2   14[BANK0 ] PTR struct ES_Event_t
		 -> ES_Run@ThisEvent(3), ES_RecallEvents@RecalledEvent(3), 
 Auto vars:     Size  Location     Type
  pThisQueue      2   20[BANK0 ] PTR struct .
		 -> Queue1(12), Queue0(18), 
  NumLeft         1   19[BANK0 ] unsigned char 
  SaveCrit        1   18[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       4       0       0
      Temps:          0       2       0       0
      Totals:         0      10       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		___lbmod
		___wmul
 This function is called by:
		_ES_Run
		_ES_RecallEvents
 This function uses a non-reentrant model


 *************** function ___lbmod *****************
 Defined at:
		line 4 in file "/Applications/microchip/xc8/v1.38/sources/common/lbmod.c"
 Parameters:    Size  Location     Type
  dividend        1    wreg     unsigned char 
  divisor         1    0[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  dividend        1    1[BANK0 ] unsigned char 
  rem             1    3[BANK0 ] unsigned char 
  counter         1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       3       0       0
      Temps:          0       0       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ES_DeQueue
 This function uses a non-reentrant model


 *************** function _ES_CheckUserEvents *****************
 Defined at:
		line 46 in file "ES_CheckEvents.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1   37[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   11
 This function calls:
		_Check4Keystroke
		_CheckButtonEvents
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _Check4Keystroke *****************
 Defined at:
		line 108 in file "EventCheckers.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ES_CheckUserEvents
 This function uses a non-reentrant model


 *************** function _CheckButtonEvents *****************
 Defined at:
		line 59 in file "Button.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  ThisEvent       3   33[BANK0 ] struct ES_Event_t
  CurrentButto    1   36[BANK0 ] unsigned char 
  ReturnVal       1   32[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       5       0       0
      Temps:          0       0       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		_GetInputLine
		_PostButtonDebounceSM
 This function is called by:
		_ES_CheckUserEvents
 This function uses a non-reentrant model


 *************** function _PostButtonDebounceSM *****************
 Defined at:
		line 89 in file "Button.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   29[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_ES_PostToService
 This function is called by:
		_CheckButtonEvents
 This function uses a non-reentrant model


 *************** function _GetInputLine *****************
 Defined at:
		line 37 in file "Button.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_CheckButtonEvents
		_InitializeButtonDebounce
 This function uses a non-reentrant model


 *************** function _ES_Initialize *****************
 Defined at:
		line 242 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
  NewRate         2   33[BANK0 ] enum E15427
 Auto vars:     Size  Location     Type
  i               1   35[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E15498
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		_ES_InitQueue
		_ES_Timer_Init
		_InitSPI_Service
		_InitToggleService
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _InitSPI_Service *****************
 Defined at:
		line 56 in file "SPI_Service.c"
 Parameters:    Size  Location     Type
  Priority        1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  Priority        1    6[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_ES_Timer_InitTimer
		_InitSPI
		_SetBGR
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function _InitToggleService *****************
 Defined at:
		line 62 in file "ToggleService.c"
 Parameters:    Size  Location     Type
  Priority        1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  Priority        1   32[BANK0 ] unsigned char 
  ThisEvent       3   29[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       4       0       0
      Temps:          0       0       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_ES_PostToService
		_ES_Timer_InitTimer
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function _ES_PostToService *****************
 Defined at:
		line 352 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
  WhichService    1    wreg     unsigned char 
  TheEvent        3   23[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  WhichService    1   28[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       1       0       0
      Temps:          0       2       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_ES_EnQueueFIFO
 This function is called by:
		_InitToggleService
		_PostToggleService
		_PostSPI_Service
		_PostButtonDebounceSM
		_InitTemplateFSM
		_PostTemplateFSM
		_InitTemplateService
		_PostTemplateService
 This function uses a non-reentrant model


 *************** function _ES_EnQueueFIFO *****************
 Defined at:
		line 85 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          2   12[BANK0 ] PTR struct ES_Event_t
		 -> Queue1(12), Queue0(18), 
  Event2Add       3   14[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  pThisQueue      2   21[BANK0 ] PTR struct .
		 -> Queue1(12), Queue0(18), 
  SaveCrit        1   20[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       5       0       0
      Locals:         0       3       0       0
      Temps:          0       3       0       0
      Totals:         0      11       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		___awmod
		___wmul
 This function is called by:
		_ES_PostToService
		_ES_PostAll
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "/Applications/microchip/xc8/v1.38/sources/common/Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    6[BANK0 ] unsigned int 
  multiplicand    2    8[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  product         2   10[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  2    6[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       2       0       0
      Temps:          0       0       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ES_EnQueueFIFO
		_ES_DeQueue
		i2_ES_EnQueueFIFO
		_ES_EnQueueLIFO
 This function uses a non-reentrant model


 *************** function ___awmod *****************
 Defined at:
		line 8 in file "/Applications/microchip/xc8/v1.38/sources/common/awmod.c"
 Parameters:    Size  Location     Type
  dividend        2    0[BANK0 ] int 
  divisor         2    2[BANK0 ] int 
 Auto vars:     Size  Location     Type
  sign            1    5[BANK0 ] unsigned char 
  counter         1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       2       0       0
      Temps:          0       0       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ES_EnQueueFIFO
		i2_ES_EnQueueFIFO
 This function uses a non-reentrant model


 *************** function _SetBGR *****************
 Defined at:
		line 236 in file "SPI_Service.c"
 Parameters:    Size  Location     Type
  B               1    wreg     unsigned char 
  G               1    0[BANK0 ] unsigned char 
  R               1    1[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  B               1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_InitSPI_Service
		_RunSPI_Service
 This function uses a non-reentrant model


 *************** function _InitSPI *****************
 Defined at:
		line 192 in file "SPI_Service.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_FormPacket
 This function is called by:
		_InitSPI_Service
 This function uses a non-reentrant model


 *************** function _FormPacket *****************
 Defined at:
		line 214 in file "SPI_Service.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  j               1    5[BANK0 ] unsigned char 
  i               1    3[BANK0 ] unsigned char 
  ledNum          1    4[BANK0 ] unsigned char 
  i               1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       4       0       0
      Temps:          0       2       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_RunSPI_Service
		_InitSPI
 This function uses a non-reentrant model


 *************** function _ES_Timer_InitTimer *****************
 Defined at:
		line 229 in file "ES_Timers.c"
 Parameters:    Size  Location     Type
  Num             1    wreg     unsigned char 
  NewTime         2    0[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  Num             1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E15476
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       1       0       0
      Temps:          0       2       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_InitToggleService
		_RunToggleService
		_InitSPI_Service
		_RunSPI_Service
		_InitializeButtonDebounce
		_RunButtonDebounceSM
 This function uses a non-reentrant model


 *************** function _ES_Timer_Init *****************
 Defined at:
		line 130 in file "ES_Timers.c"
 Parameters:    Size  Location     Type
  Rate            2    2[BANK0 ] enum E15427
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		__HW_Timer_Init
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function __HW_Timer_Init *****************
 Defined at:
		line 74 in file "ES_Port.c"
 Parameters:    Size  Location     Type
  Rate            2    0[BANK0 ] enum E15412
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ES_Timer_Init
 This function uses a non-reentrant model


 *************** function _ES_InitQueue *****************
 Defined at:
		line 58 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          2    0[BANK0 ] PTR struct ES_Event_t
		 -> Queue1(12), Queue0(18), 
  BlockSize       1    2[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  pThisQueue      2    3[BANK0 ] PTR struct .
		 -> Queue1(12), Queue0(18), 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       2       0       0
      Temps:          0       0       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 114 in file "ES_Port.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:         16       0       0       0
      Totals:        16       0       0       0
Total ram usage:       16 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_EOTResponse
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model


 *************** function _EOTResponse *****************
 Defined at:
		line 184 in file "SPI_Service.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  ThisEvent       3   32[COMRAM] struct ES_Event_t
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         3       0       0       0
      Temps:          0       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		i2_PostSPI_Service
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function i2_PostSPI_Service *****************
 Defined at:
		line 82 in file "SPI_Service.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   29[COMRAM] struct ES_Event_t
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		i2_ES_PostToService
 This function is called by:
		_EOTResponse
 This function uses a non-reentrant model


 *************** function i2_ES_PostToService *****************
 Defined at:
		line 352 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
  WhichService    1    wreg     unsigned char 
  TheEvent        3   23[COMRAM] struct ES_Event_t
 Auto vars:     Size  Location     Type
  WhichService    1   28[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         1       0       0       0
      Temps:          2       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		i2_ES_EnQueueFIFO
 This function is called by:
		i2_PostSPI_Service
 This function uses a non-reentrant model


 *************** function i2_ES_EnQueueFIFO *****************
 Defined at:
		line 85 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          2   12[COMRAM] PTR struct ES_Event_t
		 -> Queue1(12), Queue0(18), 
  Event2Add       3   14[COMRAM] struct ES_Event_t
 Auto vars:     Size  Location     Type
  ES_EnQueueFI    2   21[COMRAM] PTR struct .
		 -> Queue1(12), Queue0(18), 
  ES_EnQueueFI    1   20[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         5       0       0       0
      Locals:         3       0       0       0
      Temps:          3       0       0       0
      Totals:        11       0       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i2___awmod
		i2___wmul
 This function is called by:
		i2_ES_PostToService
 This function uses a non-reentrant model


 *************** function i2___wmul *****************
 Defined at:
		line 15 in file "/Applications/microchip/xc8/v1.38/sources/common/Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    6[COMRAM] unsigned int 
  multiplicand    2    8[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  __wmul          2   10[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  2    6[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		i2_ES_EnQueueFIFO
 This function uses a non-reentrant model


 *************** function i2___awmod *****************
 Defined at:
		line 8 in file "/Applications/microchip/xc8/v1.38/sources/common/awmod.c"
 Parameters:    Size  Location     Type
  dividend        2    0[COMRAM] int 
  divisor         2    2[COMRAM] int 
 Auto vars:     Size  Location     Type
  __awmod         1    5[COMRAM] unsigned char 
  __awmod         1    4[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2    0[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		i2_ES_EnQueueFIFO
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
ES_Queue.c
		_ES_EnQueueFIFO		CODE           	0AB2	0000	227
		_ES_DeQueue    		CODE           	0694	0000	297
		_ES_InitQueue  		CODE           	125E	0000	61

ES_Queue.c estimated size: 585

ES_CheckEvents.c
		_ES_CheckUserEvents		CODE           	1146	0000	75

ES_CheckEvents.c estimated size: 75

/Applications/microchip/xc8/v1.38/sources/common/lbmod.c
		___lbmod       		CODE           	11D6	0000	69

/Applications/microchip/xc8/v1.38/sources/common/lbmod.c estimated size: 69

ES_LookupTables.c
		_ES_GetMSBitSet		CODE           	0CEE	0000	165

ES_LookupTables.c estimated size: 165

EventCheckers.c
		_Check4Keystroke		CODE           	1460	0000	5

EventCheckers.c estimated size: 5

/Applications/microchip/xc8/v1.38/sources/common/Umul16.c
		___wmul        		CODE           	129A	0000	55

/Applications/microchip/xc8/v1.38/sources/common/Umul16.c estimated size: 55

ES_Framework.c
		_ES_PostToService		CODE           	0F42	0000	119
		_ES_Run        		CODE           	08D2	0000	245
		_ES_Initialize 		CODE           	09C6	0000	237

ES_Framework.c estimated size: 601

Button.c
		_PostButtonDebounceSM		CODE           	13EC	0000	23
		_GetInputLine  		CODE           	1458	0000	9
		_CheckButtonEvents		CODE           	1092	0000	97

Button.c estimated size: 129

ToggleService.c
		_InitToggleService		CODE           	10F2	0000	85
		_RunToggleService		CODE           	1190	0000	71
		_PostToggleService		CODE           	13D6	0000	23

ToggleService.c estimated size: 179

shared
		_BitNum2SetMask		SMALLCONST     	0301	0000	33
		_DistList00    		SMALLCONST     	0362	0000	3
		i2_ES_EnQueueFIFO		CODE           	0B94	0000	181
		_ES_EventList  		SMALLCONST     	035E	0000	5
		i2___wmul      		CODE           	1362	0000	39
		i2_ES_PostToService		CODE           	1028	0000	107
		_Nybble2MSBitNum		SMALLCONST     	0341	0000	16
		_EventQueues   		SMALLCONST     	0358	0000	7
		__initialization		CODE           	1304	0000	37
		i2___awmod     		CODE           	0FB8	0000	113
		i2_PostSPI_Service		CODE           	1418	0000	23
		_Timer2PostFunc		SMALLCONST     	0321	0000	33
		_ServDescList  		SMALLCONST     	0350	0000	9

shared estimated size: 606

ES_Port.c
		_ISR           		CODE           	0008	0000	181
		__HW_Process_Pending_Ints		CODE           	13C0	0000	23
		__HW_Timer_Init		CODE           	13A4	0000	29

ES_Port.c estimated size: 233

/Applications/microchip/xc8/v1.38/sources/common/awmod.c
		___awmod       		CODE           	0D92	0000	163

/Applications/microchip/xc8/v1.38/sources/common/awmod.c estimated size: 163

/Applications/microchip/xc8/v1.38/sources/common/putch.c
		_putch         		CODE           	1464	0000	3

/Applications/microchip/xc8/v1.38/sources/common/putch.c estimated size: 3

SPI_Service.c
		_EOTResponse   		CODE           	1402	0000	23
		_SetBGR        		CODE           	142E	0000	19
		_InitSPI_Service		CODE           	121A	0000	69
		_sendByte      		CODE           	144E	0000	11
		_InitSPI       		CODE           	1336	0000	45
		_FormPacket    		CODE           	053C	0000	345
		_PostSPI_Service		CODE           	1388	0000	29
		_RunSPI_Service		CODE           	03BE	0000	383

SPI_Service.c estimated size: 924

ES_Timers.c
		_ES_Timer_Init 		CODE           	1440	0000	15
		_ES_Timer_InitTimer		CODE           	0EC2	0000	129
		_ES_Timer_Tick_Resp		CODE           	07BC	0000	279

ES_Timers.c estimated size: 423

main.c
		_main          		CODE           	0E34	0000	143

main.c estimated size: 143

/Applications/microchip/xc8/v1.38/sources/common/doprnt.c
		_printf        		CODE           	12D0	0000	53

/Applications/microchip/xc8/v1.38/sources/common/doprnt.c estimated size: 53

